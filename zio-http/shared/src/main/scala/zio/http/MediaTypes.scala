// ⚠️ HEY YOU! IMPORTANT MESSAGE ⚠️
// ==============================
//
// THIS FILE IS AUTOMATICALLY GENERATED BY `GenerateMediaTypes.scala`
// So don't go editing it now, you hear? Otherwise your changes will
// be overwritten the next time someone runs `sbt generateMediaTypes`

package zio.http

private[zio] trait MediaTypes {
  private[zio] lazy val allMediaTypes: List[MediaType] =
    application.all ++ x_shader.all ++ model.all ++ image.all ++ text.all ++ font.all ++ video.all ++ message.all ++ audio.all ++ multipart.all ++ chemical.all ++ x_conference.all
  lazy val any: MediaType                              = new MediaType("*", "*")

  object application {

    lazy val `x-bdoc`: MediaType =
      new MediaType("application", "x-bdoc", compressible = false, binary = true, List("bdoc"))

    lazy val `vnd.3gpp.mcptt-location-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcptt-location-info+xml", compressible = true, binary = true)

    lazy val `vnd.ctct.ws+xml`: MediaType =
      new MediaType("application", "vnd.ctct.ws+xml", compressible = true, binary = true)

    lazy val `vnd.trueapp`: MediaType =
      new MediaType("application", "vnd.trueapp", compressible = false, binary = true, List("tra"))

    lazy val `vnd.geogebra.tool`: MediaType =
      new MediaType("application", "vnd.geogebra.tool", compressible = false, binary = true, List("ggt"))

    lazy val `vnd.ms-works`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-works",
        compressible = false,
        binary = true,
        List("wps", "wks", "wcm", "wdb"),
      )

    lazy val `vnd.hc+json`: MediaType =
      new MediaType("application", "vnd.hc+json", compressible = true, binary = false)

    lazy val `vnd.ims.lti.v2.toolconsumerprofile+json`: MediaType =
      new MediaType("application", "vnd.ims.lti.v2.toolconsumerprofile+json", compressible = true, binary = false)

    lazy val `vnd.3gpp.pfcp`: MediaType =
      new MediaType("application", "vnd.3gpp.pfcp", compressible = false, binary = true)

    lazy val `wordperfect5.1`: MediaType =
      new MediaType("application", "wordperfect5.1", compressible = false, binary = true)

    lazy val `ace+cbor`: MediaType =
      new MediaType("application", "ace+cbor", compressible = false, binary = true)

    lazy val `vnd.kodak-descriptor`: MediaType =
      new MediaType("application", "vnd.kodak-descriptor", compressible = false, binary = true, List("sse"))

    lazy val `tetra_isi`: MediaType =
      new MediaType("application", "tetra_isi", compressible = false, binary = true)

    lazy val `vnd.collabio.xodocuments.presentation-template`: MediaType =
      new MediaType(
        "application",
        "vnd.collabio.xodocuments.presentation-template",
        compressible = false,
        binary = true,
      )

    lazy val `vnd.oasis.opendocument.text`: MediaType =
      new MediaType("application", "vnd.oasis.opendocument.text", compressible = false, binary = true, List("odt"))

    lazy val `vnd.fujitsu.oasys2`: MediaType =
      new MediaType("application", "vnd.fujitsu.oasys2", compressible = false, binary = true, List("oa2"))

    lazy val `commonground`: MediaType =
      new MediaType("application", "commonground", compressible = false, binary = true)

    lazy val `vnd.evolv.ecig.profile`: MediaType =
      new MediaType("application", "vnd.evolv.ecig.profile", compressible = false, binary = true)

    lazy val `vnd.gov.sk.xmldatacontainer+xml`: MediaType =
      new MediaType("application", "vnd.gov.sk.xmldatacontainer+xml", compressible = true, binary = true)

    lazy val `simple-filter+xml`: MediaType =
      new MediaType("application", "simple-filter+xml", compressible = true, binary = true)

    lazy val `vnd.chess-pgn`: MediaType =
      new MediaType("application", "vnd.chess-pgn", compressible = false, binary = true)

    lazy val `vnd.oma.lwm2m+tlv`: MediaType =
      new MediaType("application", "vnd.oma.lwm2m+tlv", compressible = false, binary = true)

    lazy val `vnd.gov.sk.e-form+xml`: MediaType =
      new MediaType("application", "vnd.gov.sk.e-form+xml", compressible = true, binary = true)

    lazy val `jwk-set+json`: MediaType =
      new MediaType("application", "jwk-set+json", compressible = true, binary = false)

    lazy val `index.response`: MediaType =
      new MediaType("application", "index.response", compressible = false, binary = true)

    lazy val `vnd.novadigm.edx`: MediaType =
      new MediaType("application", "vnd.novadigm.edx", compressible = false, binary = true, List("edx"))

    lazy val `mathml-presentation+xml`: MediaType =
      new MediaType("application", "mathml-presentation+xml", compressible = true, binary = true)

    lazy val `urc-targetdesc+xml`: MediaType =
      new MediaType("application", "urc-targetdesc+xml", compressible = true, binary = true, List("td"))

    lazy val `vnd.nokia.conml+xml`: MediaType =
      new MediaType("application", "vnd.nokia.conml+xml", compressible = true, binary = true)

    lazy val `vnd.anser-web-funds-transfer-initiation`: MediaType =
      new MediaType(
        "application",
        "vnd.anser-web-funds-transfer-initiation",
        compressible = false,
        binary = true,
        List("fti"),
      )

    lazy val `vnd.dvb.service`: MediaType =
      new MediaType("application", "vnd.dvb.service", compressible = false, binary = true, List("svc"))

    lazy val `x-compress`: MediaType =
      new MediaType("application", "x-compress", compressible = false, binary = true)

    lazy val `vnd.ms-wmdrm.meter-resp`: MediaType =
      new MediaType("application", "vnd.ms-wmdrm.meter-resp", compressible = false, binary = true)

    lazy val `vnd.etsi.pstn+xml`: MediaType =
      new MediaType("application", "vnd.etsi.pstn+xml", compressible = true, binary = true)

    lazy val `route-usd+xml`: MediaType =
      new MediaType("application", "route-usd+xml", compressible = true, binary = true, List("rusd"))

    lazy val `x-msmoney`: MediaType =
      new MediaType("application", "x-msmoney", compressible = false, binary = true, List("mny"))

    lazy val `vnd.tcpdump.pcap`: MediaType =
      new MediaType("application", "vnd.tcpdump.pcap", compressible = false, binary = true, List("pcap", "cap", "dmp"))

    lazy val `vnd.smintio.portals.archive`: MediaType =
      new MediaType("application", "vnd.smintio.portals.archive", compressible = false, binary = true)

    lazy val `vnd.medcalcdata`: MediaType =
      new MediaType("application", "vnd.medcalcdata", compressible = false, binary = true, List("mc1"))

    lazy val `cbor-seq`: MediaType =
      new MediaType("application", "cbor-seq", compressible = false, binary = true)

    lazy val `vnd.3gpp.mcdata-msgstore-ctrl-request+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcdata-msgstore-ctrl-request+xml", compressible = true, binary = true)

    lazy val `vnd.oma.poc.groups+xml`: MediaType =
      new MediaType("application", "vnd.oma.poc.groups+xml", compressible = true, binary = true)

    lazy val `yang-patch+json`: MediaType =
      new MediaType("application", "yang-patch+json", compressible = true, binary = false)

    lazy val `vnd.3gpp2.sms`: MediaType =
      new MediaType("application", "vnd.3gpp2.sms", compressible = false, binary = true)

    lazy val `passport`: MediaType =
      new MediaType("application", "passport", compressible = false, binary = true)

    lazy val `atomdeleted+xml`: MediaType =
      new MediaType("application", "atomdeleted+xml", compressible = true, binary = true, List("atomdeleted"))

    lazy val `x-blorb`: MediaType =
      new MediaType("application", "x-blorb", compressible = false, binary = true, List("blb", "blorb"))

    lazy val `marcxml+xml`: MediaType =
      new MediaType("application", "marcxml+xml", compressible = true, binary = true, List("mrcx"))

    lazy val `ocsp-request`: MediaType =
      new MediaType("application", "ocsp-request", compressible = false, binary = true)

    lazy val `vnd.cirpack.isdn-ext`: MediaType =
      new MediaType("application", "vnd.cirpack.isdn-ext", compressible = false, binary = true)

    lazy val `vnd.truedoc`: MediaType =
      new MediaType("application", "vnd.truedoc", compressible = false, binary = true)

    lazy val `tzif`: MediaType =
      new MediaType("application", "tzif", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.vmldrawing`: MediaType =
      new MediaType("application", "vnd.openxmlformats-officedocument.vmldrawing", compressible = false, binary = true)

    lazy val `yang-data+cbor`: MediaType =
      new MediaType("application", "yang-data+cbor", compressible = false, binary = true)

    lazy val `vnd.ecowin.series`: MediaType =
      new MediaType("application", "vnd.ecowin.series", compressible = false, binary = true)

    lazy val `vnd.groove-identity-message`: MediaType =
      new MediaType("application", "vnd.groove-identity-message", compressible = false, binary = true, List("gim"))

    lazy val `vnd.s3sms`: MediaType =
      new MediaType("application", "vnd.s3sms", compressible = false, binary = true)

    lazy val `vnd.nacamar.ybrid+json`: MediaType =
      new MediaType("application", "vnd.nacamar.ybrid+json", compressible = true, binary = false)

    lazy val `x-ms-xbap`: MediaType =
      new MediaType("application", "x-ms-xbap", compressible = false, binary = true, List("xbap"))

    lazy val `vnd.ipld.dag-cbor`: MediaType =
      new MediaType("application", "vnd.ipld.dag-cbor", compressible = false, binary = true)

    lazy val `macwriteii`: MediaType =
      new MediaType("application", "macwriteii", compressible = false, binary = true)

    lazy val `vnd.ezpix-album`: MediaType =
      new MediaType("application", "vnd.ezpix-album", compressible = false, binary = true, List("ez2"))

    lazy val `vnd.openeye.oeb`: MediaType =
      new MediaType("application", "vnd.openeye.oeb", compressible = false, binary = true)

    lazy val `vnd.cryptomator.vault`: MediaType =
      new MediaType("application", "vnd.cryptomator.vault", compressible = false, binary = true)

    lazy val `3gpp-ims+xml`: MediaType =
      new MediaType("application", "3gpp-ims+xml", compressible = true, binary = true)

    lazy val `vnd.sybyl.mol2`: MediaType =
      new MediaType("application", "vnd.sybyl.mol2", compressible = false, binary = true)

    lazy val `vnd.informix-visionary`: MediaType =
      new MediaType("application", "vnd.informix-visionary", compressible = false, binary = true)

    lazy val `pkcs8-encrypted`: MediaType =
      new MediaType("application", "pkcs8-encrypted", compressible = false, binary = true)

    lazy val `vnd.radisys.msml-dialog-base+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-dialog-base+xml", compressible = true, binary = true)

    lazy val `vnd.wmc`: MediaType =
      new MediaType("application", "vnd.wmc", compressible = false, binary = true)

    lazy val `vnd.mfmp`: MediaType =
      new MediaType("application", "vnd.mfmp", compressible = false, binary = true, List("mfm"))

    lazy val `xcap-att+xml`: MediaType =
      new MediaType("application", "xcap-att+xml", compressible = true, binary = true, List("xav"))

    lazy val `spirits-event+xml`: MediaType =
      new MediaType("application", "spirits-event+xml", compressible = true, binary = true)

    lazy val `oauth-authz-req+jwt`: MediaType =
      new MediaType("application", "oauth-authz-req+jwt", compressible = false, binary = true)

    lazy val `alto-propmapparams+json`: MediaType =
      new MediaType("application", "alto-propmapparams+json", compressible = true, binary = false)

    lazy val `pskc+xml`: MediaType =
      new MediaType("application", "pskc+xml", compressible = true, binary = true, List("pskcxml"))

    lazy val `vnd.data-vision.rdz`: MediaType =
      new MediaType("application", "vnd.data-vision.rdz", compressible = false, binary = true, List("rdz"))

    lazy val `vnd.visio`: MediaType =
      new MediaType("application", "vnd.visio", compressible = false, binary = true, List("vsd", "vst", "vss", "vsw"))

    lazy val `vnd.oma.bcast.stkm`: MediaType =
      new MediaType("application", "vnd.oma.bcast.stkm", compressible = false, binary = true)

    lazy val `vnd.mfer`: MediaType =
      new MediaType("application", "vnd.mfer", compressible = false, binary = true, List("mwf"))

    lazy val `vnd.ntt-local.ogw_remote-access`: MediaType =
      new MediaType("application", "vnd.ntt-local.ogw_remote-access", compressible = false, binary = true)

    lazy val `logout+jwt`: MediaType =
      new MediaType("application", "logout+jwt", compressible = false, binary = true)

    lazy val `cwt`: MediaType =
      new MediaType("application", "cwt", compressible = false, binary = true)

    lazy val `load-control+xml`: MediaType =
      new MediaType("application", "load-control+xml", compressible = true, binary = true)

    lazy val `vnd.gentoo.manifest`: MediaType =
      new MediaType("application", "vnd.gentoo.manifest", compressible = false, binary = true)

    lazy val `vnd.smaf`: MediaType =
      new MediaType("application", "vnd.smaf", compressible = false, binary = true, List("mmf"))

    lazy val `vnd.otps.ct-kip+xml`: MediaType =
      new MediaType("application", "vnd.otps.ct-kip+xml", compressible = true, binary = true)

    lazy val `vnd.nokia.pcd+xml`: MediaType =
      new MediaType("application", "vnd.nokia.pcd+xml", compressible = true, binary = true)

    lazy val `vnd.scribus`: MediaType =
      new MediaType("application", "vnd.scribus", compressible = false, binary = true)

    lazy val `vnd.ntt-local.sip-ta_tcp_stream`: MediaType =
      new MediaType("application", "vnd.ntt-local.sip-ta_tcp_stream", compressible = false, binary = true)

    lazy val `geo+json`: MediaType =
      new MediaType("application", "geo+json", compressible = true, binary = false, List("geojson"))

    lazy val `ocsp-response`: MediaType =
      new MediaType("application", "ocsp-response", compressible = false, binary = true)

    lazy val `vnd.apple.pages`: MediaType =
      new MediaType("application", "vnd.apple.pages", compressible = false, binary = true, List("pages"))

    lazy val `vnd.micrografx.igx`: MediaType =
      new MediaType("application", "vnd.micrografx.igx", compressible = false, binary = true, List("igx"))

    lazy val `cbor`: MediaType =
      new MediaType("application", "cbor", compressible = false, binary = true)

    lazy val `3gpphal+json`: MediaType =
      new MediaType("application", "3gpphal+json", compressible = true, binary = false)

    lazy val `vnd.kde.kpresenter`: MediaType =
      new MediaType("application", "vnd.kde.kpresenter", compressible = false, binary = true, List("kpr", "kpt"))

    lazy val `json`: MediaType =
      new MediaType("application", "json", compressible = true, binary = false, List("json", "map"))

    lazy val `vnd.iptc.g2.conceptitem+xml`: MediaType =
      new MediaType("application", "vnd.iptc.g2.conceptitem+xml", compressible = true, binary = true)

    lazy val `vnd.cups-raster`: MediaType =
      new MediaType("application", "vnd.cups-raster", compressible = false, binary = true)

    lazy val `vnd.amazon.ebook`: MediaType =
      new MediaType("application", "vnd.amazon.ebook", compressible = false, binary = true, List("azw"))

    lazy val `vnd.musician`: MediaType =
      new MediaType("application", "vnd.musician", compressible = false, binary = true, List("mus"))

    lazy val `vnd.oftn.l10n+json`: MediaType =
      new MediaType("application", "vnd.oftn.l10n+json", compressible = true, binary = false)

    lazy val `sdp`: MediaType =
      new MediaType("application", "sdp", compressible = false, binary = true, List("sdp"))

    lazy val `vnd.kde.kformula`: MediaType =
      new MediaType("application", "vnd.kde.kformula", compressible = false, binary = true, List("kfo"))

    lazy val `x-nzb`: MediaType =
      new MediaType("application", "x-nzb", compressible = false, binary = true, List("nzb"))

    lazy val `vnd.uplanet.cacheop`: MediaType =
      new MediaType("application", "vnd.uplanet.cacheop", compressible = false, binary = true)

    lazy val `vnd.ruckus.download`: MediaType =
      new MediaType("application", "vnd.ruckus.download", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.base`: MediaType =
      new MediaType("application", "vnd.oasis.opendocument.base", compressible = false, binary = true)

    lazy val `x-java-jnlp-file`: MediaType =
      new MediaType("application", "x-java-jnlp-file", compressible = false, binary = true, List("jnlp"))

    lazy val `pkcs12`: MediaType =
      new MediaType("application", "pkcs12", compressible = false, binary = true)

    lazy val `resource-lists+xml`: MediaType =
      new MediaType("application", "resource-lists+xml", compressible = true, binary = true, List("rl"))

    lazy val `odm+xml`: MediaType =
      new MediaType("application", "odm+xml", compressible = true, binary = true)

    lazy val `vnd.jsk.isdn-ngn`: MediaType =
      new MediaType("application", "vnd.jsk.isdn-ngn", compressible = false, binary = true)

    lazy val `iotp`: MediaType =
      new MediaType("application", "iotp", compressible = false, binary = true)

    lazy val `pkix-crl`: MediaType =
      new MediaType("application", "pkix-crl", compressible = false, binary = true, List("crl"))

    lazy val `vnd.geogebra.file`: MediaType =
      new MediaType("application", "vnd.geogebra.file", compressible = false, binary = true, List("ggb"))

    lazy val `ace+json`: MediaType =
      new MediaType("application", "ace+json", compressible = true, binary = false)

    lazy val `x-gca-compressed`: MediaType =
      new MediaType("application", "x-gca-compressed", compressible = false, binary = true, List("gca"))

    lazy val `sparql-results+xml`: MediaType =
      new MediaType("application", "sparql-results+xml", compressible = true, binary = true, List("srx"))

    lazy val `xspf+xml`: MediaType =
      new MediaType("application", "xspf+xml", compressible = true, binary = true, List("xspf"))

    lazy val `vnd.crypto-shade-file`: MediaType =
      new MediaType("application", "vnd.crypto-shade-file", compressible = false, binary = true)

    lazy val `vnd.is-xpr`: MediaType =
      new MediaType("application", "vnd.is-xpr", compressible = false, binary = true, List("xpr"))

    lazy val `beep+xml`: MediaType =
      new MediaType("application", "beep+xml", compressible = true, binary = true)

    lazy val `vnd.filmit.zfc`: MediaType =
      new MediaType("application", "vnd.filmit.zfc", compressible = false, binary = true)

    lazy val `vnd.oma.bcast.simple-symbol-container`: MediaType =
      new MediaType("application", "vnd.oma.bcast.simple-symbol-container", compressible = false, binary = true)

    lazy val `framework-attributes+xml`: MediaType =
      new MediaType("application", "framework-attributes+xml", compressible = true, binary = true)

    lazy val `vnd.collabio.xodocuments.spreadsheet-template`: MediaType =
      new MediaType("application", "vnd.collabio.xodocuments.spreadsheet-template", compressible = false, binary = true)

    lazy val `vnd.groove-account`: MediaType =
      new MediaType("application", "vnd.groove-account", compressible = false, binary = true, List("gac"))

    lazy val `clue_info+xml`: MediaType =
      new MediaType("application", "clue_info+xml", compressible = true, binary = true)

    lazy val `vnd.software602.filler.form+xml`: MediaType =
      new MediaType("application", "vnd.software602.filler.form+xml", compressible = true, binary = true, List("fo"))

    lazy val `x-font-sunos-news`: MediaType =
      new MediaType("application", "x-font-sunos-news", compressible = false, binary = true)

    lazy val `vnd.fujixerox.docuworks.container`: MediaType =
      new MediaType("application", "vnd.fujixerox.docuworks.container", compressible = false, binary = true)

    lazy val `pls+xml`: MediaType =
      new MediaType("application", "pls+xml", compressible = true, binary = true, List("pls"))

    lazy val `dicom+json`: MediaType =
      new MediaType("application", "dicom+json", compressible = true, binary = false)

    lazy val `vnd.oasis.opendocument.text-template`: MediaType =
      new MediaType(
        "application",
        "vnd.oasis.opendocument.text-template",
        compressible = false,
        binary = true,
        List("ott"),
      )

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.epson.salt`: MediaType =
      new MediaType("application", "vnd.epson.salt", compressible = false, binary = true, List("slt"))

    lazy val `vnd.onepagertatx`: MediaType =
      new MediaType("application", "vnd.onepagertatx", compressible = false, binary = true)

    lazy val `vnd.nokia.radio-presets`: MediaType =
      new MediaType("application", "vnd.nokia.radio-presets", compressible = false, binary = true, List("rpss"))

    lazy val `x-keepass2`: MediaType =
      new MediaType("application", "x-keepass2", compressible = false, binary = true, List("kdbx"))

    lazy val `sieve`: MediaType =
      new MediaType("application", "sieve", compressible = false, binary = true, List("siv", "sieve"))

    lazy val `vnd.geometry-explorer`: MediaType =
      new MediaType("application", "vnd.geometry-explorer", compressible = false, binary = true, List("gex", "gre"))

    lazy val `vnd.yamaha.openscoreformat`: MediaType =
      new MediaType("application", "vnd.yamaha.openscoreformat", compressible = false, binary = true, List("osf"))

    lazy val `msc-mixer+xml`: MediaType =
      new MediaType("application", "msc-mixer+xml", compressible = true, binary = true)

    lazy val `vnd.ciedi`: MediaType =
      new MediaType("application", "vnd.ciedi", compressible = false, binary = true)

    lazy val `vnd.jcp.javame.midlet-rms`: MediaType =
      new MediaType("application", "vnd.jcp.javame.midlet-rms", compressible = false, binary = true, List("rms"))

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml",
        compressible = true,
        binary = true,
      )

    lazy val `edi-consent`: MediaType =
      new MediaType("application", "edi-consent", compressible = false, binary = true)

    lazy val `x-virtualbox-hdd`: MediaType =
      new MediaType("application", "x-virtualbox-hdd", compressible = true, binary = true, List("hdd"))

    lazy val `vnd.aether.imp`: MediaType =
      new MediaType("application", "vnd.aether.imp", compressible = false, binary = true)

    lazy val `json5`: MediaType =
      new MediaType("application", "json5", compressible = false, binary = true, List("json5"))

    lazy val `vnd.oma.cab-subs-invite+xml`: MediaType =
      new MediaType("application", "vnd.oma.cab-subs-invite+xml", compressible = true, binary = true)

    lazy val `flexfec`: MediaType =
      new MediaType("application", "flexfec", compressible = false, binary = true)

    lazy val `vnd.3gpp.mcptt-user-profile+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcptt-user-profile+xml", compressible = true, binary = true)

    lazy val `cybercash`: MediaType =
      new MediaType("application", "cybercash", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.presentation`: MediaType =
      new MediaType(
        "application",
        "vnd.oasis.opendocument.presentation",
        compressible = false,
        binary = true,
        List("odp"),
      )

    lazy val `atomcat+xml`: MediaType =
      new MediaType("application", "atomcat+xml", compressible = true, binary = true, List("atomcat"))

    lazy val `dash+xml`: MediaType =
      new MediaType("application", "dash+xml", compressible = true, binary = true, List("mpd"))

    lazy val `vnd.uri-map`: MediaType =
      new MediaType("application", "vnd.uri-map", compressible = false, binary = true)

    lazy val `vnd.radisys.msml-dialog-group+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-dialog-group+xml", compressible = true, binary = true)

    lazy val `xcap-diff+xml`: MediaType =
      new MediaType("application", "xcap-diff+xml", compressible = true, binary = true, List("xdf"))

    lazy val `tamp-apex-update-confirm`: MediaType =
      new MediaType("application", "tamp-apex-update-confirm", compressible = false, binary = true)

    lazy val `vnd.ms-ims`: MediaType =
      new MediaType("application", "vnd.ms-ims", compressible = false, binary = true, List("ims"))

    lazy val `x-virtualbox-vbox-extpack`: MediaType =
      new MediaType(
        "application",
        "x-virtualbox-vbox-extpack",
        compressible = false,
        binary = true,
        List("vbox-extpack"),
      )

    lazy val `concise-problem-details+cbor`: MediaType =
      new MediaType("application", "concise-problem-details+cbor", compressible = false, binary = true)

    lazy val `alto-networkmapfilter+json`: MediaType =
      new MediaType("application", "alto-networkmapfilter+json", compressible = true, binary = false)

    lazy val `vnd.noblenet-web`: MediaType =
      new MediaType("application", "vnd.noblenet-web", compressible = false, binary = true, List("nnw"))

    lazy val `vnd.tableschema+json`: MediaType =
      new MediaType("application", "vnd.tableschema+json", compressible = true, binary = false)

    lazy val `elm+xml`: MediaType =
      new MediaType("application", "elm+xml", compressible = true, binary = true)

    lazy val `x-dvi`: MediaType =
      new MediaType("application", "x-dvi", compressible = false, binary = true, List("dvi"))

    lazy val `vnd.nokia.iptv.config+xml`: MediaType =
      new MediaType("application", "vnd.nokia.iptv.config+xml", compressible = true, binary = true)

    lazy val `whoispp-response`: MediaType =
      new MediaType("application", "whoispp-response", compressible = false, binary = true)

    lazy val `vnd.afpc.foca-codedfont`: MediaType =
      new MediaType("application", "vnd.afpc.foca-codedfont", compressible = false, binary = true)

    lazy val `x-msmediaview`: MediaType =
      new MediaType("application", "x-msmediaview", compressible = false, binary = true, List("mvb", "m13", "m14"))

    lazy val `emergencycalldata.serviceinfo+xml`: MediaType =
      new MediaType("application", "emergencycalldata.serviceinfo+xml", compressible = true, binary = true)

    lazy val `vnd.sbm.cid`: MediaType =
      new MediaType("application", "vnd.sbm.cid", compressible = false, binary = true)

    lazy val `vnd.yamaha.smaf-audio`: MediaType =
      new MediaType("application", "vnd.yamaha.smaf-audio", compressible = false, binary = true, List("saf"))

    lazy val `vnd.3gpp.mcptt-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcptt-info+xml", compressible = true, binary = true)

    lazy val `vnd.oipf.userprofile+xml`: MediaType =
      new MediaType("application", "vnd.oipf.userprofile+xml", compressible = true, binary = true)

    lazy val `vnd.eln+zip`: MediaType =
      new MediaType("application", "vnd.eln+zip", compressible = false, binary = true)

    lazy val `cose`: MediaType =
      new MediaType("application", "cose", compressible = false, binary = true)

    lazy val `prs.rdf-xml-crypt`: MediaType =
      new MediaType("application", "prs.rdf-xml-crypt", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.image-template`: MediaType =
      new MediaType(
        "application",
        "vnd.oasis.opendocument.image-template",
        compressible = false,
        binary = true,
        List("oti"),
      )

    lazy val `vnd.innopath.wamp.notification`: MediaType =
      new MediaType("application", "vnd.innopath.wamp.notification", compressible = false, binary = true)

    lazy val `vnd.evolv.ecig.theme`: MediaType =
      new MediaType("application", "vnd.evolv.ecig.theme", compressible = false, binary = true)

    lazy val `vnd.onepagertat`: MediaType =
      new MediaType("application", "vnd.onepagertat", compressible = false, binary = true)

    lazy val `vnd.wolfram.mathematica`: MediaType =
      new MediaType("application", "vnd.wolfram.mathematica", compressible = false, binary = true)

    lazy val `vnd.pwg-xhtml-print+xml`: MediaType =
      new MediaType("application", "vnd.pwg-xhtml-print+xml", compressible = true, binary = true, List("xhtm"))

    lazy val `vnd.gnu.taler.merchant+json`: MediaType =
      new MediaType("application", "vnd.gnu.taler.merchant+json", compressible = true, binary = false)

    lazy val `voicexml+xml`: MediaType =
      new MediaType("application", "voicexml+xml", compressible = true, binary = true, List("vxml"))

    lazy val `vnd.geospace`: MediaType =
      new MediaType("application", "vnd.geospace", compressible = false, binary = true, List("g3w"))

    lazy val `vnd.vd-study`: MediaType =
      new MediaType("application", "vnd.vd-study", compressible = false, binary = true)

    lazy val `vnd.3gpp.mcvideo-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcvideo-info+xml", compressible = true, binary = true)

    lazy val `sbe`: MediaType =
      new MediaType("application", "sbe", compressible = false, binary = true)

    lazy val `x-chrome-extension`: MediaType =
      new MediaType("application", "x-chrome-extension", compressible = false, binary = true, List("crx"))

    lazy val `vnd.omads-email+xml`: MediaType =
      new MediaType("application", "vnd.omads-email+xml", compressible = true, binary = true)

    lazy val `x-ms-wmz`: MediaType =
      new MediaType("application", "x-ms-wmz", compressible = false, binary = true, List("wmz"))

    lazy val `vnd.apache.arrow.stream`: MediaType =
      new MediaType("application", "vnd.apache.arrow.stream", compressible = false, binary = true)

    lazy val `vnd.kde.kchart`: MediaType =
      new MediaType("application", "vnd.kde.kchart", compressible = false, binary = true, List("chrt"))

    lazy val `vnd.crick.clicker.keyboard`: MediaType =
      new MediaType("application", "vnd.crick.clicker.keyboard", compressible = false, binary = true, List("clkk"))

    lazy val `vnd.loom`: MediaType =
      new MediaType("application", "vnd.loom", compressible = false, binary = true)

    lazy val `vnd.sqlite3`: MediaType =
      new MediaType("application", "vnd.sqlite3", compressible = false, binary = true)

    lazy val `vnd.dolby.mlp`: MediaType =
      new MediaType("application", "vnd.dolby.mlp", compressible = false, binary = true, List("mlp"))

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.sheet`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.sheet",
        compressible = false,
        binary = true,
        List("xlsx"),
      )

    lazy val `vnd.stardivision.impress`: MediaType =
      new MediaType("application", "vnd.stardivision.impress", compressible = false, binary = true, List("sdd"))

    lazy val `vnd.mozilla.xul+xml`: MediaType =
      new MediaType("application", "vnd.mozilla.xul+xml", compressible = true, binary = true, List("xul"))

    lazy val `x-zmachine`: MediaType =
      new MediaType(
        "application",
        "x-zmachine",
        compressible = false,
        binary = true,
        List("z1", "z2", "z3", "z4", "z5", "z6", "z7", "z8"),
      )

    lazy val `vnd.3gpp.mc-signalling-ear`: MediaType =
      new MediaType("application", "vnd.3gpp.mc-signalling-ear", compressible = false, binary = true)

    lazy val `vnd.dvb.notif-aggregate-root+xml`: MediaType =
      new MediaType("application", "vnd.dvb.notif-aggregate-root+xml", compressible = true, binary = true)

    lazy val `vnd.noblenet-directory`: MediaType =
      new MediaType("application", "vnd.noblenet-directory", compressible = false, binary = true, List("nnd"))

    lazy val `automationml-aml+xml`: MediaType =
      new MediaType("application", "automationml-aml+xml", compressible = true, binary = true, List("aml"))

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml",
        compressible = true,
        binary = true,
      )

    lazy val `x-httpd-php`: MediaType =
      new MediaType("application", "x-httpd-php", compressible = true, binary = true, List("php"))

    lazy val `vnd.pwg-multiplexed`: MediaType =
      new MediaType("application", "vnd.pwg-multiplexed", compressible = false, binary = true)

    lazy val `vnd.pawaafile`: MediaType =
      new MediaType("application", "vnd.pawaafile", compressible = false, binary = true, List("paw"))

    lazy val `activemessage`: MediaType =
      new MediaType("application", "activemessage", compressible = false, binary = true)

    lazy val `vnd.balsamiq.bmml+xml`: MediaType =
      new MediaType("application", "vnd.balsamiq.bmml+xml", compressible = true, binary = true, List("bmml"))

    lazy val `emergencycalldata.deviceinfo+xml`: MediaType =
      new MediaType("application", "emergencycalldata.deviceinfo+xml", compressible = true, binary = true)

    lazy val `vnd.android.ota`: MediaType =
      new MediaType("application", "vnd.android.ota", compressible = false, binary = true)

    lazy val `vnd.motorola.flexsuite.kmr`: MediaType =
      new MediaType("application", "vnd.motorola.flexsuite.kmr", compressible = false, binary = true)

    lazy val `csvm+json`: MediaType =
      new MediaType("application", "csvm+json", compressible = true, binary = false)

    lazy val `vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml",
        compressible = true,
        binary = true,
      )

    lazy val `x-texinfo`: MediaType =
      new MediaType("application", "x-texinfo", compressible = false, binary = true, List("texinfo", "texi"))

    lazy val `vnd.fujitsu.oasysgp`: MediaType =
      new MediaType("application", "vnd.fujitsu.oasysgp", compressible = false, binary = true, List("fg5"))

    lazy val `vividence.scriptfile`: MediaType =
      new MediaType("application", "vividence.scriptfile", compressible = false, binary = true)

    lazy val `vnd.crick.clicker`: MediaType =
      new MediaType("application", "vnd.crick.clicker", compressible = false, binary = true, List("clkx"))

    lazy val `vnd.rainstor.data`: MediaType =
      new MediaType("application", "vnd.rainstor.data", compressible = false, binary = true)

    lazy val `shf+xml`: MediaType =
      new MediaType("application", "shf+xml", compressible = true, binary = true, List("shf"))

    lazy val `vnd.etsi.cug+xml`: MediaType =
      new MediaType("application", "vnd.etsi.cug+xml", compressible = true, binary = true)

    lazy val `senml-etch+json`: MediaType =
      new MediaType("application", "senml-etch+json", compressible = true, binary = false)

    lazy val `cccex`: MediaType =
      new MediaType("application", "cccex", compressible = false, binary = true)

    lazy val `vnd.d2l.coursepackage1p0+zip`: MediaType =
      new MediaType("application", "vnd.d2l.coursepackage1p0+zip", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml",
        compressible = true,
        binary = true,
      )

    lazy val `prs.plucker`: MediaType =
      new MediaType("application", "prs.plucker", compressible = false, binary = true)

    lazy val `vnd.dxr`: MediaType =
      new MediaType("application", "vnd.dxr", compressible = false, binary = true)

    lazy val `vnd.ecowin.chart`: MediaType =
      new MediaType("application", "vnd.ecowin.chart", compressible = false, binary = true, List("mag"))

    lazy val `vnd.etsi.aoc+xml`: MediaType =
      new MediaType("application", "vnd.etsi.aoc+xml", compressible = true, binary = true)

    lazy val `atsc-rsat+xml`: MediaType =
      new MediaType("application", "atsc-rsat+xml", compressible = true, binary = true, List("rsat"))

    lazy val `vnd.cinderella`: MediaType =
      new MediaType("application", "vnd.cinderella", compressible = false, binary = true, List("cdy"))

    lazy val `vnd.renlearn.rlprint`: MediaType =
      new MediaType("application", "vnd.renlearn.rlprint", compressible = false, binary = true)

    lazy val `dart`: MediaType =
      new MediaType("application", "dart", compressible = true, binary = true)

    lazy val `json-patch+json`: MediaType =
      new MediaType("application", "json-patch+json", compressible = true, binary = false)

    lazy val `scim+json`: MediaType =
      new MediaType("application", "scim+json", compressible = true, binary = false)

    lazy val `pgp-keys`: MediaType =
      new MediaType("application", "pgp-keys", compressible = false, binary = true, List("asc"))

    lazy val `vnd.3gpp.mcptt-signed+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcptt-signed+xml", compressible = true, binary = true)

    lazy val `x-tex`: MediaType =
      new MediaType("application", "x-tex", compressible = false, binary = true, List("tex"))

    lazy val `x-shar`: MediaType =
      new MediaType("application", "x-shar", compressible = false, binary = true, List("shar"))

    lazy val `lgr+xml`: MediaType =
      new MediaType("application", "lgr+xml", compressible = true, binary = true, List("lgr"))

    lazy val `x-dgc-compressed`: MediaType =
      new MediaType("application", "x-dgc-compressed", compressible = false, binary = true, List("dgc"))

    lazy val `vnd.intertrust.nncp`: MediaType =
      new MediaType("application", "vnd.intertrust.nncp", compressible = false, binary = true)

    lazy val `vnd.ms-xpsdocument`: MediaType =
      new MediaType("application", "vnd.ms-xpsdocument", compressible = false, binary = true, List("xps"))

    lazy val `1d-interleaved-parityfec`: MediaType =
      new MediaType("application", "1d-interleaved-parityfec", compressible = false, binary = true)

    lazy val `vnd.artisan+json`: MediaType =
      new MediaType("application", "vnd.artisan+json", compressible = true, binary = false)

    lazy val `vnd.etsi.iptvservice+xml`: MediaType =
      new MediaType("application", "vnd.etsi.iptvservice+xml", compressible = true, binary = true)

    lazy val `vnd.sun.xml.impress`: MediaType =
      new MediaType("application", "vnd.sun.xml.impress", compressible = false, binary = true, List("sxi"))

    lazy val `vnd.fujixerox.art4`: MediaType =
      new MediaType("application", "vnd.fujixerox.art4", compressible = false, binary = true)

    lazy val `atsc-held+xml`: MediaType =
      new MediaType("application", "atsc-held+xml", compressible = true, binary = true, List("held"))

    lazy val `tamp-update-confirm`: MediaType =
      new MediaType("application", "tamp-update-confirm", compressible = false, binary = true)

    lazy val `vnd.sigrok.session`: MediaType =
      new MediaType("application", "vnd.sigrok.session", compressible = false, binary = true)

    lazy val `vnd.dvb.notif-container+xml`: MediaType =
      new MediaType("application", "vnd.dvb.notif-container+xml", compressible = true, binary = true)

    lazy val `nss`: MediaType =
      new MediaType("application", "nss", compressible = false, binary = true)

    lazy val `vnd.denovo.fcselayout-link`: MediaType =
      new MediaType("application", "vnd.denovo.fcselayout-link", compressible = false, binary = true, List("fe_launch"))

    lazy val `vnd.etsi.asic-s+zip`: MediaType =
      new MediaType("application", "vnd.etsi.asic-s+zip", compressible = false, binary = true)

    lazy val `senml+json`: MediaType =
      new MediaType("application", "senml+json", compressible = true, binary = false)

    lazy val `vnd.nokia.pcd+wbxml`: MediaType =
      new MediaType("application", "vnd.nokia.pcd+wbxml", compressible = false, binary = true)

    lazy val `city+json`: MediaType =
      new MediaType("application", "city+json", compressible = true, binary = false)

    lazy val `vnd.openxmlformats-officedocument.theme+xml`: MediaType =
      new MediaType("application", "vnd.openxmlformats-officedocument.theme+xml", compressible = true, binary = true)

    lazy val `dit`: MediaType =
      new MediaType("application", "dit", compressible = false, binary = true)

    lazy val `p21`: MediaType =
      new MediaType("application", "p21", compressible = false, binary = true)

    lazy val `cals-1840`: MediaType =
      new MediaType("application", "cals-1840", compressible = false, binary = true)

    lazy val `yang-data+json`: MediaType =
      new MediaType("application", "yang-data+json", compressible = true, binary = false)

    lazy val `vnd.nokia.n-gage.symbian.install`: MediaType =
      new MediaType(
        "application",
        "vnd.nokia.n-gage.symbian.install",
        compressible = false,
        binary = true,
        List("n-gage"),
      )

    lazy val `encaprtp`: MediaType =
      new MediaType("application", "encaprtp", compressible = false, binary = true)

    lazy val `vnd.ms-windows.devicepairing`: MediaType =
      new MediaType("application", "vnd.ms-windows.devicepairing", compressible = false, binary = true)

    lazy val `vnd.japannet-payment-wakeup`: MediaType =
      new MediaType("application", "vnd.japannet-payment-wakeup", compressible = false, binary = true)

    lazy val `problem+xml`: MediaType =
      new MediaType("application", "problem+xml", compressible = true, binary = true)

    lazy val `vnd.cluetrust.cartomobile-config-pkg`: MediaType =
      new MediaType(
        "application",
        "vnd.cluetrust.cartomobile-config-pkg",
        compressible = false,
        binary = true,
        List("c11amz"),
      )

    lazy val `sensml+xml`: MediaType =
      new MediaType("application", "sensml+xml", compressible = true, binary = true, List("sensmlx"))

    lazy val `parityfec`: MediaType =
      new MediaType("application", "parityfec", compressible = false, binary = true)

    lazy val `vnd.desmume.movie`: MediaType =
      new MediaType("application", "vnd.desmume.movie", compressible = false, binary = true)

    lazy val `vnd.osgi.subsystem`: MediaType =
      new MediaType("application", "vnd.osgi.subsystem", compressible = false, binary = true, List("esa"))

    lazy val `vnd.ubisoft.webplayer`: MediaType =
      new MediaType("application", "vnd.ubisoft.webplayer", compressible = false, binary = true)

    lazy val `vnd.3gpp.mcdata-user-profile+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcdata-user-profile+xml", compressible = true, binary = true)

    lazy val `jrd+json`: MediaType =
      new MediaType("application", "jrd+json", compressible = true, binary = false)

    lazy val `vnd.onepagertamp`: MediaType =
      new MediaType("application", "vnd.onepagertamp", compressible = false, binary = true)

    lazy val `vnd.fujitsu.oasysprs`: MediaType =
      new MediaType("application", "vnd.fujitsu.oasysprs", compressible = false, binary = true, List("bh2"))

    lazy val `vnd.antix.game-component`: MediaType =
      new MediaType("application", "vnd.antix.game-component", compressible = false, binary = true, List("atx"))

    lazy val `gzip`: MediaType =
      new MediaType("application", "gzip", compressible = false, binary = true, List("gz"))

    lazy val `vnd.3gpp.gtpc`: MediaType =
      new MediaType("application", "vnd.3gpp.gtpc", compressible = false, binary = true)

    lazy val `vnd.capasystems-pg+json`: MediaType =
      new MediaType("application", "vnd.capasystems-pg+json", compressible = true, binary = false)

    lazy val `vnd.apexlang`: MediaType =
      new MediaType("application", "vnd.apexlang", compressible = false, binary = true)

    lazy val `x-xpinstall`: MediaType =
      new MediaType("application", "x-xpinstall", compressible = false, binary = true, List("xpi"))

    lazy val `vnd.uplanet.listcmd-wbxml`: MediaType =
      new MediaType("application", "vnd.uplanet.listcmd-wbxml", compressible = false, binary = true)

    lazy val `vnd.muvee.style`: MediaType =
      new MediaType("application", "vnd.muvee.style", compressible = false, binary = true, List("msty"))

    lazy val `vnd.immervision-ivp`: MediaType =
      new MediaType("application", "vnd.immervision-ivp", compressible = false, binary = true, List("ivp"))

    lazy val `x-font-ghostscript`: MediaType =
      new MediaType("application", "x-font-ghostscript", compressible = false, binary = true, List("gsf"))

    lazy val `x-debian-package`: MediaType =
      new MediaType("application", "x-debian-package", compressible = false, binary = true, List("deb", "udeb"))

    lazy val `vnd.sun.xml.draw.template`: MediaType =
      new MediaType("application", "vnd.sun.xml.draw.template", compressible = false, binary = true, List("std"))

    lazy val `vnd.3gpp.mcdata-payload`: MediaType =
      new MediaType("application", "vnd.3gpp.mcdata-payload", compressible = false, binary = true)

    lazy val `moss-signature`: MediaType =
      new MediaType("application", "moss-signature", compressible = false, binary = true)

    lazy val `vnd.sailingtracker.track`: MediaType =
      new MediaType("application", "vnd.sailingtracker.track", compressible = false, binary = true, List("st"))

    lazy val `vnd.openxmlformats-officedocument.presentationml.notesmaster+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.notesmaster+xml",
        compressible = true,
        binary = true,
      )

    lazy val `raml+yaml`: MediaType =
      new MediaType("application", "raml+yaml", compressible = true, binary = true, List("raml"))

    lazy val `vnd.fujixerox.hbpl`: MediaType =
      new MediaType("application", "vnd.fujixerox.hbpl", compressible = false, binary = true)

    lazy val `vnd.gnu.taler.exchange+json`: MediaType =
      new MediaType("application", "vnd.gnu.taler.exchange+json", compressible = true, binary = false)

    lazy val `vnd.oipf.dae.xhtml+xml`: MediaType =
      new MediaType("application", "vnd.oipf.dae.xhtml+xml", compressible = true, binary = true)

    lazy val `x-envoy`: MediaType =
      new MediaType("application", "x-envoy", compressible = false, binary = true, List("evy"))

    lazy val `vnd.fastcopy-disk-image`: MediaType =
      new MediaType("application", "vnd.fastcopy-disk-image", compressible = false, binary = true)

    lazy val `vnd.webturbo`: MediaType =
      new MediaType("application", "vnd.webturbo", compressible = false, binary = true, List("wtb"))

    lazy val `linkset+json`: MediaType =
      new MediaType("application", "linkset+json", compressible = true, binary = false)

    lazy val `vnd.omads-file+xml`: MediaType =
      new MediaType("application", "vnd.omads-file+xml", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-officedocument.presentationml.slideshow`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.slideshow",
        compressible = false,
        binary = true,
        List("ppsx"),
      )

    lazy val `jwk+json`: MediaType =
      new MediaType("application", "jwk+json", compressible = true, binary = false)

    lazy val `vnd.multiad.creator.cif`: MediaType =
      new MediaType("application", "vnd.multiad.creator.cif", compressible = false, binary = true)

    lazy val `vq-rtcpxr`: MediaType =
      new MediaType("application", "vq-rtcpxr", compressible = false, binary = true)

    lazy val `3gpdash-qoe-report+xml`: MediaType =
      new MediaType("application", "3gpdash-qoe-report+xml", compressible = true, binary = true)

    lazy val `soap+fastinfoset`: MediaType =
      new MediaType("application", "soap+fastinfoset", compressible = false, binary = true)

    lazy val `vnd.tao.intent-module-archive`: MediaType =
      new MediaType("application", "vnd.tao.intent-module-archive", compressible = false, binary = true, List("tao"))

    lazy val `x-msaccess`: MediaType =
      new MediaType("application", "x-msaccess", compressible = false, binary = true, List("mdb"))

    lazy val `vnd.xmpie.xlim`: MediaType =
      new MediaType("application", "vnd.xmpie.xlim", compressible = false, binary = true)

    lazy val `vnd.quobject-quoxdocument`: MediaType =
      new MediaType("application", "vnd.quobject-quoxdocument", compressible = false, binary = true)

    lazy val `tnauthlist`: MediaType =
      new MediaType("application", "tnauthlist", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.footer+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.footer+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.firemonkeys.cloudcell`: MediaType =
      new MediaType("application", "vnd.firemonkeys.cloudcell", compressible = false, binary = true)

    lazy val `vnd.nokia.isds-radio-presets`: MediaType =
      new MediaType("application", "vnd.nokia.isds-radio-presets", compressible = false, binary = true)

    lazy val `vnd.gmx`: MediaType =
      new MediaType("application", "vnd.gmx", compressible = false, binary = true, List("gmx"))

    lazy val `vnd.d3m-problem`: MediaType =
      new MediaType("application", "vnd.d3m-problem", compressible = false, binary = true)

    lazy val `vnd.vsf`: MediaType =
      new MediaType("application", "vnd.vsf", compressible = false, binary = true, List("vsf"))

    lazy val `sql`: MediaType =
      new MediaType("application", "sql", compressible = false, binary = true, List("sql"))

    lazy val `vnd.mason+json`: MediaType =
      new MediaType("application", "vnd.mason+json", compressible = true, binary = false)

    lazy val `x-tgif`: MediaType =
      new MediaType("application", "x-tgif", compressible = false, binary = true, List("obj"))

    lazy val `x-www-form-urlencoded`: MediaType =
      new MediaType("application", "x-www-form-urlencoded", compressible = true, binary = true)

    lazy val `epub+zip`: MediaType =
      new MediaType("application", "epub+zip", compressible = false, binary = true, List("epub"))

    lazy val `vnd.onvif.metadata`: MediaType =
      new MediaType("application", "vnd.onvif.metadata", compressible = false, binary = true)

    lazy val `odx`: MediaType =
      new MediaType("application", "odx", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.presentationml.slide`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.slide",
        compressible = false,
        binary = true,
        List("sldx"),
      )

    lazy val `vnd.dvb.ipdcesgaccess2`: MediaType =
      new MediaType("application", "vnd.dvb.ipdcesgaccess2", compressible = false, binary = true)

    lazy val `x-font-framemaker`: MediaType =
      new MediaType("application", "x-font-framemaker", compressible = false, binary = true)

    lazy val `vnd.ms-word.template.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-word.template.macroenabled.12",
        compressible = false,
        binary = true,
        List("dotm"),
      )

    lazy val `vnd.openxmlformats-officedocument.presentationml.slide+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.slide+xml",
        compressible = true,
        binary = true,
      )

    lazy val `zip`: MediaType =
      new MediaType("application", "zip", compressible = false, binary = true, List("zip"))

    lazy val `vnd.dvb.ait`: MediaType =
      new MediaType("application", "vnd.dvb.ait", compressible = false, binary = true, List("ait"))

    lazy val `vnd.afpc.modca-objectcontainer`: MediaType =
      new MediaType("application", "vnd.afpc.modca-objectcontainer", compressible = false, binary = true)

    lazy val `vnd.sun.xml.writer.global`: MediaType =
      new MediaType("application", "vnd.sun.xml.writer.global", compressible = false, binary = true, List("sxg"))

    lazy val `vnd.tmd.mediaflex.api+xml`: MediaType =
      new MediaType("application", "vnd.tmd.mediaflex.api+xml", compressible = true, binary = true)

    lazy val `watcherinfo+xml`: MediaType =
      new MediaType("application", "watcherinfo+xml", compressible = true, binary = true, List("wif"))

    lazy val `dash-patch+xml`: MediaType =
      new MediaType("application", "dash-patch+xml", compressible = true, binary = true, List("mpp"))

    lazy val `x-gnumeric`: MediaType =
      new MediaType("application", "x-gnumeric", compressible = false, binary = true, List("gnumeric"))

    lazy val `mods+xml`: MediaType =
      new MediaType("application", "mods+xml", compressible = true, binary = true, List("mods"))

    lazy val `spdx+json`: MediaType =
      new MediaType("application", "spdx+json", compressible = true, binary = false)

    lazy val `vnd.amadeus+json`: MediaType =
      new MediaType("application", "vnd.amadeus+json", compressible = true, binary = false)

    lazy val `andrew-inset`: MediaType =
      new MediaType("application", "andrew-inset", compressible = false, binary = true, List("ez"))

    lazy val `vnd.cncf.helm.chart.content.v1.tar+gzip`: MediaType =
      new MediaType("application", "vnd.cncf.helm.chart.content.v1.tar+gzip", compressible = false, binary = true)

    lazy val `vnd.shade-save-file`: MediaType =
      new MediaType("application", "vnd.shade-save-file", compressible = false, binary = true)

    lazy val `vnd.motorola.flexsuite.wem`: MediaType =
      new MediaType("application", "vnd.motorola.flexsuite.wem", compressible = false, binary = true)

    lazy val `x-tcl`: MediaType =
      new MediaType("application", "x-tcl", compressible = false, binary = true, List("tcl", "tk"))

    lazy val `vnd.fdf`: MediaType =
      new MediaType("application", "vnd.fdf", compressible = false, binary = true, List("fdf"))

    lazy val `tamp-community-update-confirm`: MediaType =
      new MediaType("application", "tamp-community-update-confirm", compressible = false, binary = true)

    lazy val `vnd.ms-fontobject`: MediaType =
      new MediaType("application", "vnd.ms-fontobject", compressible = true, binary = true, List("eot"))

    lazy val `ccxml+xml`: MediaType =
      new MediaType("application", "ccxml+xml", compressible = true, binary = true, List("ccxml"))

    lazy val `vnd.shx`: MediaType =
      new MediaType("application", "vnd.shx", compressible = false, binary = true)

    lazy val `vnd.afpc.foca-charset`: MediaType =
      new MediaType("application", "vnd.afpc.foca-charset", compressible = false, binary = true)

    lazy val `mp4`: MediaType =
      new MediaType("application", "mp4", compressible = false, binary = true, List("mp4", "mpg4", "mp4s", "m4p"))

    lazy val `mxf`: MediaType =
      new MediaType("application", "mxf", compressible = false, binary = true, List("mxf"))

    lazy val `vnd.oma.bcast.ltkm`: MediaType =
      new MediaType("application", "vnd.oma.bcast.ltkm", compressible = false, binary = true)

    lazy val `vnd.ms-office.activex+xml`: MediaType =
      new MediaType("application", "vnd.ms-office.activex+xml", compressible = true, binary = true)

    lazy val `vnd.multiad.creator`: MediaType =
      new MediaType("application", "vnd.multiad.creator", compressible = false, binary = true)

    lazy val `edi-x12`: MediaType =
      new MediaType("application", "edi-x12", compressible = false, binary = true)

    lazy val `vnd.ms-lrm`: MediaType =
      new MediaType("application", "vnd.ms-lrm", compressible = false, binary = true, List("lrm"))

    lazy val `vnd.trid.tpt`: MediaType =
      new MediaType("application", "vnd.trid.tpt", compressible = false, binary = true, List("tpt"))

    lazy val `vnd.ms-pki.stl`: MediaType =
      new MediaType("application", "vnd.ms-pki.stl", compressible = false, binary = true, List("stl"))

    lazy val `rtploopback`: MediaType =
      new MediaType("application", "rtploopback", compressible = false, binary = true)

    lazy val `set-registration-initiation`: MediaType =
      new MediaType("application", "set-registration-initiation", compressible = false, binary = true, List("setreg"))

    lazy val `call-completion`: MediaType =
      new MediaType("application", "call-completion", compressible = false, binary = true)

    lazy val `vnd.lotus-1-2-3`: MediaType =
      new MediaType("application", "vnd.lotus-1-2-3", compressible = false, binary = true, List("123"))

    lazy val `x-mpegurl`: MediaType =
      new MediaType("application", "x-mpegurl", compressible = false, binary = true)

    lazy val `mbms-reception-report+xml`: MediaType =
      new MediaType("application", "mbms-reception-report+xml", compressible = true, binary = true)

    lazy val `vnd.olpc-sugar`: MediaType =
      new MediaType("application", "vnd.olpc-sugar", compressible = false, binary = true, List("xo"))

    lazy val `sipc`: MediaType =
      new MediaType("application", "sipc", compressible = false, binary = true)

    lazy val `vnd.eu.kasparian.car+json`: MediaType =
      new MediaType("application", "vnd.eu.kasparian.car+json", compressible = true, binary = false)

    lazy val `x-glulx`: MediaType =
      new MediaType("application", "x-glulx", compressible = false, binary = true, List("ulx"))

    lazy val `geo+json-seq`: MediaType =
      new MediaType("application", "geo+json-seq", compressible = false, binary = true)

    lazy val `vnd.ahead.space`: MediaType =
      new MediaType("application", "vnd.ahead.space", compressible = false, binary = true, List("ahead"))

    lazy val `vnd.xmpie.cpkg`: MediaType =
      new MediaType("application", "vnd.xmpie.cpkg", compressible = false, binary = true)

    lazy val `cdmi-capability`: MediaType =
      new MediaType("application", "cdmi-capability", compressible = false, binary = true, List("cdmia"))

    lazy val `trickle-ice-sdpfrag`: MediaType =
      new MediaType("application", "trickle-ice-sdpfrag", compressible = false, binary = true)

    lazy val `vnd.mobius.dis`: MediaType =
      new MediaType("application", "vnd.mobius.dis", compressible = false, binary = true, List("dis"))

    lazy val `vnd.cncf.helm.chart.provenance.v1.prov`: MediaType =
      new MediaType("application", "vnd.cncf.helm.chart.provenance.v1.prov", compressible = false, binary = true)

    lazy val `vnd.avalon+json`: MediaType =
      new MediaType("application", "vnd.avalon+json", compressible = true, binary = false)

    lazy val `vnd.lotus-screencam`: MediaType =
      new MediaType("application", "vnd.lotus-screencam", compressible = false, binary = true, List("scm"))

    lazy val `x-perl`: MediaType =
      new MediaType("application", "x-perl", compressible = false, binary = true, List("pl", "pm"))

    lazy val `vnd.datapackage+json`: MediaType =
      new MediaType("application", "vnd.datapackage+json", compressible = true, binary = false)

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.template`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.template",
        compressible = false,
        binary = true,
        List("dotx"),
      )

    lazy val `vnd.ms-opentype`: MediaType =
      new MediaType("application", "vnd.ms-opentype", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-officedocument.presentationml.template`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.template",
        compressible = false,
        binary = true,
        List("potx"),
      )

    lazy val `vnd.collabio.xodocuments.spreadsheet`: MediaType =
      new MediaType("application", "vnd.collabio.xodocuments.spreadsheet", compressible = false, binary = true)

    lazy val `vnd.cryptomator.encrypted`: MediaType =
      new MediaType("application", "vnd.cryptomator.encrypted", compressible = false, binary = true)

    lazy val `vnd.afpc.modca`: MediaType =
      new MediaType("application", "vnd.afpc.modca", compressible = false, binary = true)

    lazy val `onenote`: MediaType =
      new MediaType(
        "application",
        "onenote",
        compressible = false,
        binary = true,
        List("onetoc", "onetoc2", "onetmp", "onepkg"),
      )

    lazy val `cdmi-domain`: MediaType =
      new MediaType("application", "cdmi-domain", compressible = false, binary = true, List("cdmid"))

    lazy val `vnd.hal+xml`: MediaType =
      new MediaType("application", "vnd.hal+xml", compressible = true, binary = true, List("hal"))

    lazy val `vnd.canon-cpdl`: MediaType =
      new MediaType("application", "vnd.canon-cpdl", compressible = false, binary = true)

    lazy val `vnd.mcd`: MediaType =
      new MediaType("application", "vnd.mcd", compressible = false, binary = true, List("mcd"))

    lazy val `vnd.ibm.electronic-media`: MediaType =
      new MediaType("application", "vnd.ibm.electronic-media", compressible = false, binary = true)

    lazy val `fhir+xml`: MediaType =
      new MediaType("application", "fhir+xml", compressible = true, binary = true)

    lazy val `tamp-error`: MediaType =
      new MediaType("application", "tamp-error", compressible = false, binary = true)

    lazy val `vnd.dvb.notif-generic+xml`: MediaType =
      new MediaType("application", "vnd.dvb.notif-generic+xml", compressible = true, binary = true)

    lazy val `vnd.3gpp.ussd+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.ussd+xml", compressible = true, binary = true)

    lazy val `vnd.semf`: MediaType =
      new MediaType("application", "vnd.semf", compressible = false, binary = true, List("semf"))

    lazy val `vnd.dvb.ipdcdftnotifaccess`: MediaType =
      new MediaType("application", "vnd.dvb.ipdcdftnotifaccess", compressible = false, binary = true)

    lazy val `vnd.marlin.drm.license+xml`: MediaType =
      new MediaType("application", "vnd.marlin.drm.license+xml", compressible = true, binary = true)

    lazy val `ogg`: MediaType =
      new MediaType("application", "ogg", compressible = false, binary = true, List("ogx"))

    lazy val `geopackage+sqlite3`: MediaType =
      new MediaType("application", "geopackage+sqlite3", compressible = false, binary = true)

    lazy val `dashdelta`: MediaType =
      new MediaType("application", "dashdelta", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.ufdl`: MediaType =
      new MediaType("application", "vnd.ufdl", compressible = false, binary = true, List("ufd", "ufdl"))

    lazy val `senml-exi`: MediaType =
      new MediaType("application", "senml-exi", compressible = false, binary = true)

    lazy val `vnd.powerbuilder7-s`: MediaType =
      new MediaType("application", "vnd.powerbuilder7-s", compressible = false, binary = true)

    lazy val `index`: MediaType =
      new MediaType("application", "index", compressible = false, binary = true)

    lazy val `mbms-deregister+xml`: MediaType =
      new MediaType("application", "mbms-deregister+xml", compressible = true, binary = true)

    lazy val `vnd.easykaraoke.cdgdownload`: MediaType =
      new MediaType("application", "vnd.easykaraoke.cdgdownload", compressible = false, binary = true)

    lazy val `vnd.cups-ppd`: MediaType =
      new MediaType("application", "vnd.cups-ppd", compressible = false, binary = true, List("ppd"))

    lazy val `vnd.oma.bcast.sgdu`: MediaType =
      new MediaType("application", "vnd.oma.bcast.sgdu", compressible = false, binary = true)

    lazy val `x-chess-pgn`: MediaType =
      new MediaType("application", "x-chess-pgn", compressible = false, binary = true, List("pgn"))

    lazy val `vnd.ms-playready.initiator+xml`: MediaType =
      new MediaType("application", "vnd.ms-playready.initiator+xml", compressible = true, binary = true)

    lazy val `cose-x509`: MediaType =
      new MediaType("application", "cose-x509", compressible = false, binary = true)

    lazy val `vnd.dir-bi.plate-dl-nosuffix`: MediaType =
      new MediaType("application", "vnd.dir-bi.plate-dl-nosuffix", compressible = false, binary = true)

    lazy val `vnd.crick.clicker.template`: MediaType =
      new MediaType("application", "vnd.crick.clicker.template", compressible = false, binary = true, List("clkt"))

    lazy val `vnd.uiq.theme`: MediaType =
      new MediaType("application", "vnd.uiq.theme", compressible = false, binary = true, List("utz"))

    lazy val `json-seq`: MediaType =
      new MediaType("application", "json-seq", compressible = false, binary = true)

    lazy val `vnd.lotus-wordpro`: MediaType =
      new MediaType("application", "vnd.lotus-wordpro", compressible = false, binary = true, List("lwp"))

    lazy val `vnd.adobe.partial-upload`: MediaType =
      new MediaType("application", "vnd.adobe.partial-upload", compressible = false, binary = true)

    lazy val `sep+xml`: MediaType =
      new MediaType("application", "sep+xml", compressible = true, binary = true)

    lazy val `vnd.claymore`: MediaType =
      new MediaType("application", "vnd.claymore", compressible = false, binary = true, List("cla"))

    lazy val `tar`: MediaType =
      new MediaType("application", "tar", compressible = true, binary = true)

    lazy val `rpki-roa`: MediaType =
      new MediaType("application", "rpki-roa", compressible = false, binary = true, List("roa"))

    lazy val `clr`: MediaType =
      new MediaType("application", "clr", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.formula-template`: MediaType =
      new MediaType(
        "application",
        "vnd.oasis.opendocument.formula-template",
        compressible = false,
        binary = true,
        List("odft"),
      )

    lazy val `vnd.oma.dd2+xml`: MediaType =
      new MediaType("application", "vnd.oma.dd2+xml", compressible = true, binary = true, List("dd2"))

    lazy val `vnd.sealed.doc`: MediaType =
      new MediaType("application", "vnd.sealed.doc", compressible = false, binary = true)

    lazy val `vnd.wrq-hp3000-labelled`: MediaType =
      new MediaType("application", "vnd.wrq-hp3000-labelled", compressible = false, binary = true)

    lazy val `vnd.arastra.swi`: MediaType =
      new MediaType("application", "vnd.arastra.swi", compressible = false, binary = true)

    lazy val `vnd.flographit`: MediaType =
      new MediaType("application", "vnd.flographit", compressible = false, binary = true, List("gph"))

    lazy val `winhlp`: MediaType =
      new MediaType("application", "winhlp", compressible = false, binary = true, List("hlp"))

    lazy val `vnd.dbf`: MediaType =
      new MediaType("application", "vnd.dbf", compressible = false, binary = true, List("dbf"))

    lazy val `x-latex`: MediaType =
      new MediaType("application", "x-latex", compressible = false, binary = true, List("latex"))

    lazy val `td+json`: MediaType =
      new MediaType("application", "td+json", compressible = true, binary = false)

    lazy val `vnd.3gpp-prose-pc3ch+xml`: MediaType =
      new MediaType("application", "vnd.3gpp-prose-pc3ch+xml", compressible = true, binary = true)

    lazy val `cda+xml`: MediaType =
      new MediaType("application", "cda+xml", compressible = true, binary = true)

    lazy val `vnd.gridmp`: MediaType =
      new MediaType("application", "vnd.gridmp", compressible = false, binary = true)

    lazy val `vnd.dataresource+json`: MediaType =
      new MediaType("application", "vnd.dataresource+json", compressible = true, binary = false)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml",
        compressible = true,
        binary = true,
      )

    lazy val `news-checkgroups`: MediaType =
      new MediaType("application", "news-checkgroups", compressible = false, binary = true)

    lazy val `vnd.solent.sdkm+xml`: MediaType =
      new MediaType("application", "vnd.solent.sdkm+xml", compressible = true, binary = true, List("sdkm", "sdkd"))

    lazy val `atfx`: MediaType =
      new MediaType("application", "atfx", compressible = false, binary = true)

    lazy val `vnd.globalplatform.card-content-mgt`: MediaType =
      new MediaType("application", "vnd.globalplatform.card-content-mgt", compressible = false, binary = true)

    lazy val `vnd.acucobol`: MediaType =
      new MediaType("application", "vnd.acucobol", compressible = false, binary = true, List("acu"))

    lazy val `vnd.adobe.fxp`: MediaType =
      new MediaType("application", "vnd.adobe.fxp", compressible = false, binary = true, List("fxp", "fxpl"))

    lazy val `vnd.ms-wpl`: MediaType =
      new MediaType("application", "vnd.ms-wpl", compressible = false, binary = true, List("wpl"))

    lazy val `x-bzip`: MediaType =
      new MediaType("application", "x-bzip", compressible = false, binary = true, List("bz"))

    lazy val `vnd.leap+json`: MediaType =
      new MediaType("application", "vnd.leap+json", compressible = true, binary = false)

    lazy val `vnd.dynageo`: MediaType =
      new MediaType("application", "vnd.dynageo", compressible = false, binary = true, List("geo"))

    lazy val `sensml+json`: MediaType =
      new MediaType("application", "sensml+json", compressible = true, binary = false)

    lazy val `vnd.collection.next+json`: MediaType =
      new MediaType("application", "vnd.collection.next+json", compressible = true, binary = false)

    lazy val `coap-payload`: MediaType =
      new MediaType("application", "coap-payload", compressible = false, binary = true)

    lazy val `vnd.sss-dtf`: MediaType =
      new MediaType("application", "vnd.sss-dtf", compressible = false, binary = true)

    lazy val `postscript`: MediaType =
      new MediaType("application", "postscript", compressible = true, binary = true, List("ai", "eps", "ps"))

    lazy val `timestamp-reply`: MediaType =
      new MediaType("application", "timestamp-reply", compressible = false, binary = true)

    lazy val `vnd.etsi.mheg5`: MediaType =
      new MediaType("application", "vnd.etsi.mheg5", compressible = false, binary = true)

    lazy val `vnd.fuzzysheet`: MediaType =
      new MediaType("application", "vnd.fuzzysheet", compressible = false, binary = true, List("fzs"))

    lazy val `vnd.oipf.spdlist+xml`: MediaType =
      new MediaType("application", "vnd.oipf.spdlist+xml", compressible = true, binary = true)

    lazy val `x-cocoa`: MediaType =
      new MediaType("application", "x-cocoa", compressible = false, binary = true, List("cco"))

    lazy val `vnd.3gpp.gmop+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.gmop+xml", compressible = true, binary = true)

    lazy val `vnd.exstream-empower+zip`: MediaType =
      new MediaType("application", "vnd.exstream-empower+zip", compressible = false, binary = true)

    lazy val `vnd.omads-folder+xml`: MediaType =
      new MediaType("application", "vnd.omads-folder+xml", compressible = true, binary = true)

    lazy val `vnd.google-apps.presentation`: MediaType =
      new MediaType("application", "vnd.google-apps.presentation", compressible = false, binary = true, List("gslides"))

    lazy val `vnd.syncml.dm.notification`: MediaType =
      new MediaType("application", "vnd.syncml.dm.notification", compressible = false, binary = true)

    lazy val `x-stuffit`: MediaType =
      new MediaType("application", "x-stuffit", compressible = false, binary = true, List("sit"))

    lazy val `vnd.motorola.flexsuite.adsi`: MediaType =
      new MediaType("application", "vnd.motorola.flexsuite.adsi", compressible = false, binary = true)

    lazy val `xcon-conference-info-diff+xml`: MediaType =
      new MediaType("application", "xcon-conference-info-diff+xml", compressible = true, binary = true)

    lazy val `docbook+xml`: MediaType =
      new MediaType("application", "docbook+xml", compressible = true, binary = true, List("dbk"))

    lazy val `vnd.eudora.data`: MediaType =
      new MediaType("application", "vnd.eudora.data", compressible = false, binary = true)

    lazy val `vnd.ntt-local.content-share`: MediaType =
      new MediaType("application", "vnd.ntt-local.content-share", compressible = false, binary = true)

    lazy val `vnd.etsi.iptvprofile+xml`: MediaType =
      new MediaType("application", "vnd.etsi.iptvprofile+xml", compressible = true, binary = true)

    lazy val `vnd.mediastation.cdkey`: MediaType =
      new MediaType("application", "vnd.mediastation.cdkey", compressible = false, binary = true, List("cdkey"))

    lazy val `sgml-open-catalog`: MediaType =
      new MediaType("application", "sgml-open-catalog", compressible = false, binary = true)

    lazy val `x-lzh-compressed`: MediaType =
      new MediaType("application", "x-lzh-compressed", compressible = false, binary = true, List("lzh", "lha"))

    lazy val `vnd.sealed.eml`: MediaType =
      new MediaType("application", "vnd.sealed.eml", compressible = false, binary = true)

    lazy val `aml`: MediaType =
      new MediaType("application", "aml", compressible = false, binary = true)

    lazy val `vnd.oma.bcast.sgboot`: MediaType =
      new MediaType("application", "vnd.oma.bcast.sgboot", compressible = false, binary = true)

    lazy val `scvp-cv-response`: MediaType =
      new MediaType("application", "scvp-cv-response", compressible = false, binary = true, List("scs"))

    lazy val `vnd.cyclonedx+json`: MediaType =
      new MediaType("application", "vnd.cyclonedx+json", compressible = true, binary = false)

    lazy val `vnd.ms-wmdrm.meter-chlg-req`: MediaType =
      new MediaType("application", "vnd.ms-wmdrm.meter-chlg-req", compressible = false, binary = true)

    lazy val `vnd.fujifilm.fb.jfi+xml`: MediaType =
      new MediaType("application", "vnd.fujifilm.fb.jfi+xml", compressible = true, binary = true)

    lazy val `xproc+xml`: MediaType =
      new MediaType("application", "xproc+xml", compressible = true, binary = true, List("xpl"))

    lazy val `vnd.rn-realmedia`: MediaType =
      new MediaType("application", "vnd.rn-realmedia", compressible = false, binary = true, List("rm"))

    lazy val `ulpfec`: MediaType =
      new MediaType("application", "ulpfec", compressible = false, binary = true)

    lazy val `vnd.genozip`: MediaType =
      new MediaType("application", "vnd.genozip", compressible = false, binary = true)

    lazy val `vnd.opentimestamps.ots`: MediaType =
      new MediaType("application", "vnd.opentimestamps.ots", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.text-web`: MediaType =
      new MediaType("application", "vnd.oasis.opendocument.text-web", compressible = false, binary = true, List("oth"))

    lazy val `dcd`: MediaType =
      new MediaType("application", "dcd", compressible = false, binary = true)

    lazy val `vnd.oipf.ueprofile+xml`: MediaType =
      new MediaType("application", "vnd.oipf.ueprofile+xml", compressible = true, binary = true)

    lazy val `vnd.ms-word.document.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-word.document.macroenabled.12",
        compressible = false,
        binary = true,
        List("docm"),
      )

    lazy val `vnd.vidsoft.vidconference`: MediaType =
      new MediaType("application", "vnd.vidsoft.vidconference", compressible = false, binary = true)

    lazy val `vnd.etsi.iptvdiscovery+xml`: MediaType =
      new MediaType("application", "vnd.etsi.iptvdiscovery+xml", compressible = true, binary = true)

    lazy val `vnd.oma.poc.invocation-descriptor+xml`: MediaType =
      new MediaType("application", "vnd.oma.poc.invocation-descriptor+xml", compressible = true, binary = true)

    lazy val `x-arj`: MediaType =
      new MediaType("application", "x-arj", compressible = false, binary = true, List("arj"))

    lazy val `slate`: MediaType =
      new MediaType("application", "slate", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.graphics`: MediaType =
      new MediaType("application", "vnd.oasis.opendocument.graphics", compressible = false, binary = true, List("odg"))

    lazy val `vnd.patientecommsdoc`: MediaType =
      new MediaType("application", "vnd.patientecommsdoc", compressible = false, binary = true)

    lazy val `x-director`: MediaType =
      new MediaType(
        "application",
        "x-director",
        compressible = false,
        binary = true,
        List("dir", "dcr", "dxr", "cst", "cct", "cxt", "w3d", "fgd", "swa"),
      )

    lazy val `gpx+xml`: MediaType =
      new MediaType("application", "gpx+xml", compressible = true, binary = true, List("gpx"))

    lazy val `vnd.rig.cryptonote`: MediaType =
      new MediaType("application", "vnd.rig.cryptonote", compressible = false, binary = true, List("cryptonote"))

    lazy val `vnd.syncml.dmddf+wbxml`: MediaType =
      new MediaType("application", "vnd.syncml.dmddf+wbxml", compressible = false, binary = true)

    lazy val `x-javascript`: MediaType =
      new MediaType("application", "x-javascript", compressible = true, binary = false)

    lazy val `x-pkcs7-certreqresp`: MediaType =
      new MediaType("application", "x-pkcs7-certreqresp", compressible = false, binary = true, List("p7r"))

    lazy val `patch-ops-error+xml`: MediaType =
      new MediaType("application", "patch-ops-error+xml", compressible = true, binary = true, List("xer"))

    lazy val `vnd.fujifilm.fb.docuworks`: MediaType =
      new MediaType("application", "vnd.fujifilm.fb.docuworks", compressible = false, binary = true)

    lazy val `vnd.etsi.iptvsad-bc+xml`: MediaType =
      new MediaType("application", "vnd.etsi.iptvsad-bc+xml", compressible = true, binary = true)

    lazy val `vnd.criticaltools.wbs+xml`: MediaType =
      new MediaType("application", "vnd.criticaltools.wbs+xml", compressible = true, binary = true, List("wbs"))

    lazy val `pidf-diff+xml`: MediaType =
      new MediaType("application", "pidf-diff+xml", compressible = true, binary = true)

    lazy val `vnd.familysearch.gedcom+zip`: MediaType =
      new MediaType("application", "vnd.familysearch.gedcom+zip", compressible = false, binary = true)

    lazy val `x-xz`: MediaType =
      new MediaType("application", "x-xz", compressible = false, binary = true, List("xz"))

    lazy val `cose-key`: MediaType =
      new MediaType("application", "cose-key", compressible = false, binary = true)

    lazy val `jscalendar+json`: MediaType =
      new MediaType("application", "jscalendar+json", compressible = true, binary = false)

    lazy val `dicom+xml`: MediaType =
      new MediaType("application", "dicom+xml", compressible = true, binary = true)

    lazy val `vnd.kde.kword`: MediaType =
      new MediaType("application", "vnd.kde.kword", compressible = false, binary = true, List("kwd", "kwt"))

    lazy val `vnd.syncml.dmddf+xml`: MediaType =
      new MediaType("application", "vnd.syncml.dmddf+xml", compressible = true, binary = true, List("ddf"))

    lazy val `vnd.oma.xcap-directory+xml`: MediaType =
      new MediaType("application", "vnd.oma.xcap-directory+xml", compressible = true, binary = true)

    lazy val `vnd.nokia.catalogs`: MediaType =
      new MediaType("application", "vnd.nokia.catalogs", compressible = false, binary = true)

    lazy val `reputon+json`: MediaType =
      new MediaType("application", "reputon+json", compressible = true, binary = false)

    lazy val `vnd.acucorp`: MediaType =
      new MediaType("application", "vnd.acucorp", compressible = false, binary = true, List("atc", "acutc"))

    lazy val `vnd.jam`: MediaType =
      new MediaType("application", "vnd.jam", compressible = false, binary = true, List("jam"))

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.styles+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.styles+xml",
        compressible = true,
        binary = true,
      )

    lazy val `pvd+json`: MediaType =
      new MediaType("application", "pvd+json", compressible = true, binary = false)

    lazy val `vnd.uplanet.list`: MediaType =
      new MediaType("application", "vnd.uplanet.list", compressible = false, binary = true)

    lazy val `vnd.verimatrix.vcas`: MediaType =
      new MediaType("application", "vnd.verimatrix.vcas", compressible = false, binary = true)

    lazy val `vnd.bint.med-content`: MediaType =
      new MediaType("application", "vnd.bint.med-content", compressible = false, binary = true)

    lazy val `ld+json`: MediaType =
      new MediaType("application", "ld+json", compressible = true, binary = false, List("jsonld"))

    lazy val `x-virtualbox-ova`: MediaType =
      new MediaType("application", "x-virtualbox-ova", compressible = true, binary = true, List("ova"))

    lazy val `tei+xml`: MediaType =
      new MediaType("application", "tei+xml", compressible = true, binary = true, List("tei", "teicorpus"))

    lazy val `rpki-ghostbusters`: MediaType =
      new MediaType("application", "rpki-ghostbusters", compressible = false, binary = true, List("gbr"))

    lazy val `vnd.oipf.contentaccessstreaming+xml`: MediaType =
      new MediaType("application", "vnd.oipf.contentaccessstreaming+xml", compressible = true, binary = true)

    lazy val `atf`: MediaType =
      new MediaType("application", "atf", compressible = false, binary = true)

    lazy val `smil`: MediaType =
      new MediaType("application", "smil", compressible = false, binary = true)

    lazy val `vnd.afpc.foca-codepage`: MediaType =
      new MediaType("application", "vnd.afpc.foca-codepage", compressible = false, binary = true)

    lazy val `vnd.ficlab.flb+zip`: MediaType =
      new MediaType("application", "vnd.ficlab.flb+zip", compressible = false, binary = true)

    lazy val `vnd.afpc.afplinedata`: MediaType =
      new MediaType("application", "vnd.afpc.afplinedata", compressible = false, binary = true)

    lazy val `opc-nodeset+xml`: MediaType =
      new MediaType("application", "opc-nodeset+xml", compressible = true, binary = true)

    lazy val `vnd.ibm.rights-management`: MediaType =
      new MediaType("application", "vnd.ibm.rights-management", compressible = false, binary = true, List("irm"))

    lazy val `x-silverlight-app`: MediaType =
      new MediaType("application", "x-silverlight-app", compressible = false, binary = true, List("xap"))

    lazy val `x-font-libgrx`: MediaType =
      new MediaType("application", "x-font-libgrx", compressible = false, binary = true)

    lazy val `alto-directory+json`: MediaType =
      new MediaType("application", "alto-directory+json", compressible = true, binary = false)

    lazy val `zlib`: MediaType =
      new MediaType("application", "zlib", compressible = false, binary = true)

    lazy val `vnd.japannet-verification`: MediaType =
      new MediaType("application", "vnd.japannet-verification", compressible = false, binary = true)

    lazy val `vnd.patentdive`: MediaType =
      new MediaType("application", "vnd.patentdive", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.drawing+xml`: MediaType =
      new MediaType("application", "vnd.openxmlformats-officedocument.drawing+xml", compressible = true, binary = true)

    lazy val `vnd.commerce-battelle`: MediaType =
      new MediaType("application", "vnd.commerce-battelle", compressible = false, binary = true)

    lazy val `vnd.wap.wmlscriptc`: MediaType =
      new MediaType("application", "vnd.wap.wmlscriptc", compressible = false, binary = true, List("wmlsc"))

    lazy val `atxml`: MediaType =
      new MediaType("application", "atxml", compressible = false, binary = true)

    lazy val `secevent+jwt`: MediaType =
      new MediaType("application", "secevent+jwt", compressible = false, binary = true)

    lazy val `multipart-core`: MediaType =
      new MediaType("application", "multipart-core", compressible = false, binary = true)

    lazy val `cms`: MediaType =
      new MediaType("application", "cms", compressible = false, binary = true)

    lazy val `vnd.panoply`: MediaType =
      new MediaType("application", "vnd.panoply", compressible = false, binary = true)

    lazy val `srgs+xml`: MediaType =
      new MediaType("application", "srgs+xml", compressible = true, binary = true, List("grxml"))

    lazy val `x-csh`: MediaType =
      new MediaType("application", "x-csh", compressible = false, binary = true, List("csh"))

    lazy val `vnd.oma.bcast.associated-procedure-parameter+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.oma.bcast.associated-procedure-parameter+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.radisys.msml-dialog+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-dialog+xml", compressible = true, binary = true)

    lazy val `vnd.dvb.notif-init+xml`: MediaType =
      new MediaType("application", "vnd.dvb.notif-init+xml", compressible = true, binary = true)

    lazy val `vnd.ecowin.seriesrequest`: MediaType =
      new MediaType("application", "vnd.ecowin.seriesrequest", compressible = false, binary = true)

    lazy val `vnd.oma.bcast.sgdd+xml`: MediaType =
      new MediaType("application", "vnd.oma.bcast.sgdd+xml", compressible = true, binary = true)

    lazy val `vnd.3gpp.pic-bw-var`: MediaType =
      new MediaType("application", "vnd.3gpp.pic-bw-var", compressible = false, binary = true, List("pvb"))

    lazy val `iges`: MediaType =
      new MediaType("application", "iges", compressible = false, binary = true)

    lazy val `msixbundle`: MediaType =
      new MediaType("application", "msixbundle", compressible = false, binary = true, List("msixbundle"))

    lazy val `vnd.noblenet-sealer`: MediaType =
      new MediaType("application", "vnd.noblenet-sealer", compressible = false, binary = true, List("nns"))

    lazy val `dec-dx`: MediaType =
      new MediaType("application", "dec-dx", compressible = false, binary = true)

    lazy val `manifest+json`: MediaType =
      new MediaType("application", "manifest+json", compressible = true, binary = false, List("webmanifest"))

    lazy val `vnd.apple.mpegurl`: MediaType =
      new MediaType("application", "vnd.apple.mpegurl", compressible = false, binary = true, List("m3u8"))

    lazy val `vnd.adobe.formscentral.fcdt`: MediaType =
      new MediaType("application", "vnd.adobe.formscentral.fcdt", compressible = false, binary = true, List("fcdt"))

    lazy val `vnd.gentoo.gpkg`: MediaType =
      new MediaType("application", "vnd.gentoo.gpkg", compressible = false, binary = true)

    lazy val `mosskey-request`: MediaType =
      new MediaType("application", "mosskey-request", compressible = false, binary = true)

    lazy val `yang-data+xml`: MediaType =
      new MediaType("application", "yang-data+xml", compressible = true, binary = true)

    lazy val `x-abiword`: MediaType =
      new MediaType("application", "x-abiword", compressible = false, binary = true, List("abw"))

    lazy val `mbox`: MediaType =
      new MediaType("application", "mbox", compressible = false, binary = true, List("mbox"))

    lazy val `vnd.apache.thrift.binary`: MediaType =
      new MediaType("application", "vnd.apache.thrift.binary", compressible = false, binary = true)

    lazy val `x-makeself`: MediaType =
      new MediaType("application", "x-makeself", compressible = false, binary = true, List("run"))

    lazy val `vnd.debian.binary-package`: MediaType =
      new MediaType("application", "vnd.debian.binary-package", compressible = false, binary = true)

    lazy val `vnd.google-earth.kmz`: MediaType =
      new MediaType("application", "vnd.google-earth.kmz", compressible = false, binary = true, List("kmz"))

    lazy val `x-shockwave-flash`: MediaType =
      new MediaType("application", "x-shockwave-flash", compressible = false, binary = true, List("swf"))

    lazy val `emergencycalldata.providerinfo+xml`: MediaType =
      new MediaType("application", "emergencycalldata.providerinfo+xml", compressible = true, binary = true)

    lazy val `fdt+xml`: MediaType =
      new MediaType("application", "fdt+xml", compressible = true, binary = true, List("fdt"))

    lazy val `rtx`: MediaType =
      new MediaType("application", "rtx", compressible = false, binary = true)

    lazy val `vnd.nokia.landmark+wbxml`: MediaType =
      new MediaType("application", "vnd.nokia.landmark+wbxml", compressible = false, binary = true)

    lazy val `vnd.intu.qfx`: MediaType =
      new MediaType("application", "vnd.intu.qfx", compressible = false, binary = true, List("qfx"))

    lazy val `lpf+zip`: MediaType =
      new MediaType("application", "lpf+zip", compressible = false, binary = true)

    lazy val `vnd.ims.lti.v2.toolsettings+json`: MediaType =
      new MediaType("application", "vnd.ims.lti.v2.toolsettings+json", compressible = true, binary = false)

    lazy val `vnd.afpc.modca-overlay`: MediaType =
      new MediaType("application", "vnd.afpc.modca-overlay", compressible = false, binary = true)

    lazy val `vnd.osgeo.mapguide.package`: MediaType =
      new MediaType("application", "vnd.osgeo.mapguide.package", compressible = false, binary = true, List("mgp"))

    lazy val `vnd.yamaha.remote-setup`: MediaType =
      new MediaType("application", "vnd.yamaha.remote-setup", compressible = false, binary = true)

    lazy val `vnd.cyan.dean.root+xml`: MediaType =
      new MediaType("application", "vnd.cyan.dean.root+xml", compressible = true, binary = true)

    lazy val `ubjson`: MediaType =
      new MediaType("application", "ubjson", compressible = false, binary = false, List("ubj"))

    lazy val `vnd.dolby.mobile.1`: MediaType =
      new MediaType("application", "vnd.dolby.mobile.1", compressible = false, binary = true)

    lazy val `mbms-envelope+xml`: MediaType =
      new MediaType("application", "mbms-envelope+xml", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-officedocument.presentationml.presentation`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.presentation",
        compressible = false,
        binary = true,
        List("pptx"),
      )

    lazy val `cdfx+xml`: MediaType =
      new MediaType("application", "cdfx+xml", compressible = true, binary = true, List("cdfx"))

    lazy val `vnd.hydrostatix.sof-data`: MediaType =
      new MediaType("application", "vnd.hydrostatix.sof-data", compressible = false, binary = true, List("sfd-hdstx"))

    lazy val `vnd.afpc.afplinedata-pagedef`: MediaType =
      new MediaType("application", "vnd.afpc.afplinedata-pagedef", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml",
        compressible = true,
        binary = true,
      )

    lazy val `aif+cbor`: MediaType =
      new MediaType("application", "aif+cbor", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.template`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.template",
        compressible = false,
        binary = true,
        List("xltx"),
      )

    lazy val `appxbundle`: MediaType =
      new MediaType("application", "appxbundle", compressible = false, binary = true, List("appxbundle"))

    lazy val `vnd.koan`: MediaType =
      new MediaType("application", "vnd.koan", compressible = false, binary = true, List("skp", "skd", "skt", "skm"))

    lazy val `vnd.osa.netdeploy`: MediaType =
      new MediaType("application", "vnd.osa.netdeploy", compressible = false, binary = true)

    lazy val `mbms-msk+xml`: MediaType =
      new MediaType("application", "mbms-msk+xml", compressible = true, binary = true)

    lazy val `vnd.dece.unspecified`: MediaType =
      new MediaType("application", "vnd.dece.unspecified", compressible = false, binary = true, List("uvx", "uvvx"))

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.fujifilm.fb.docuworks.binder`: MediaType =
      new MediaType("application", "vnd.fujifilm.fb.docuworks.binder", compressible = false, binary = true)

    lazy val `x-ms-application`: MediaType =
      new MediaType("application", "x-ms-application", compressible = false, binary = true, List("application"))

    lazy val `n-quads`: MediaType =
      new MediaType("application", "n-quads", compressible = false, binary = true, List("nq"))

    lazy val `davmount+xml`: MediaType =
      new MediaType("application", "davmount+xml", compressible = true, binary = true, List("davmount"))

    lazy val `vnd.oasis.opendocument.graphics-template`: MediaType =
      new MediaType(
        "application",
        "vnd.oasis.opendocument.graphics-template",
        compressible = false,
        binary = true,
        List("otg"),
      )

    lazy val `vnd.emclient.accessrequest+xml`: MediaType =
      new MediaType("application", "vnd.emclient.accessrequest+xml", compressible = true, binary = true)

    lazy val `vnd.efi.img`: MediaType =
      new MediaType("application", "vnd.efi.img", compressible = false, binary = true)

    lazy val `x-iwork-pages-sffpages`: MediaType =
      new MediaType("application", "x-iwork-pages-sffpages", compressible = false, binary = true, List("pages"))

    lazy val `mipc`: MediaType =
      new MediaType("application", "mipc", compressible = false, binary = true)

    lazy val `vnd.lotus-approach`: MediaType =
      new MediaType("application", "vnd.lotus-approach", compressible = false, binary = true, List("apr"))

    lazy val `vnd.bmi`: MediaType =
      new MediaType("application", "vnd.bmi", compressible = false, binary = true, List("bmi"))

    lazy val `vnd.dece.ttml+xml`: MediaType =
      new MediaType("application", "vnd.dece.ttml+xml", compressible = true, binary = true, List("uvt", "uvvt"))

    lazy val `vnd.shana.informed.formtemplate`: MediaType =
      new MediaType("application", "vnd.shana.informed.formtemplate", compressible = false, binary = true, List("itp"))

    lazy val `vnd.3gpp.mcdata-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcdata-info+xml", compressible = true, binary = true)

    lazy val `vnd.oma-scws-http-request`: MediaType =
      new MediaType("application", "vnd.oma-scws-http-request", compressible = false, binary = true)

    lazy val `vnd.hbci`: MediaType =
      new MediaType("application", "vnd.hbci", compressible = false, binary = true, List("hbci"))

    lazy val `x-xfig`: MediaType =
      new MediaType("application", "x-xfig", compressible = false, binary = true, List("fig"))

    lazy val `vnd.3gpp.ngap`: MediaType =
      new MediaType("application", "vnd.3gpp.ngap", compressible = false, binary = true)

    lazy val `route-s-tsid+xml`: MediaType =
      new MediaType("application", "route-s-tsid+xml", compressible = true, binary = true, List("sls"))

    lazy val `vnd.kenameaapp`: MediaType =
      new MediaType("application", "vnd.kenameaapp", compressible = false, binary = true, List("htke"))

    lazy val `vnd.kahootz`: MediaType =
      new MediaType("application", "vnd.kahootz", compressible = false, binary = true, List("ktz", "ktr"))

    lazy val `vnd.cluetrust.cartomobile-config`: MediaType =
      new MediaType(
        "application",
        "vnd.cluetrust.cartomobile-config",
        compressible = false,
        binary = true,
        List("c11amc"),
      )

    lazy val `vnd.uplanet.alert`: MediaType =
      new MediaType("application", "vnd.uplanet.alert", compressible = false, binary = true)

    lazy val `vnd.rar`: MediaType =
      new MediaType("application", "vnd.rar", compressible = false, binary = true, List("rar"))

    lazy val `vnd.nokia.landmark+xml`: MediaType =
      new MediaType("application", "vnd.nokia.landmark+xml", compressible = true, binary = true)

    lazy val `vnd.ms-windows.nwprinting.oob`: MediaType =
      new MediaType("application", "vnd.ms-windows.nwprinting.oob", compressible = false, binary = true)

    lazy val `vnd.yamaha.hv-script`: MediaType =
      new MediaType("application", "vnd.yamaha.hv-script", compressible = false, binary = true, List("hvs"))

    lazy val `x-install-instructions`: MediaType =
      new MediaType("application", "x-install-instructions", compressible = false, binary = true, List("install"))

    lazy val `vnd.evolv.ecig.settings`: MediaType =
      new MediaType("application", "vnd.evolv.ecig.settings", compressible = false, binary = true)

    lazy val `vnd.pg.osasli`: MediaType =
      new MediaType("application", "vnd.pg.osasli", compressible = false, binary = true, List("ei6"))

    lazy val `pkcs8`: MediaType =
      new MediaType("application", "pkcs8", compressible = false, binary = true, List("p8"))

    lazy val `at+jwt`: MediaType =
      new MediaType("application", "at+jwt", compressible = false, binary = true)

    lazy val `vnd.ntt-local.sip-ta_remote`: MediaType =
      new MediaType("application", "vnd.ntt-local.sip-ta_remote", compressible = false, binary = true)

    lazy val `vnd.dm.delegation+xml`: MediaType =
      new MediaType("application", "vnd.dm.delegation+xml", compressible = true, binary = true)

    lazy val `vnd.intergeo`: MediaType =
      new MediaType("application", "vnd.intergeo", compressible = false, binary = true, List("i2g"))

    lazy val `tamp-apex-update`: MediaType =
      new MediaType("application", "tamp-apex-update", compressible = false, binary = true)

    lazy val `x-bzip2`: MediaType =
      new MediaType("application", "x-bzip2", compressible = false, binary = true, List("bz2", "boz"))

    lazy val `vnd.fujixerox.docuworks`: MediaType =
      new MediaType("application", "vnd.fujixerox.docuworks", compressible = false, binary = true, List("xdw"))

    lazy val `ccmp+xml`: MediaType =
      new MediaType("application", "ccmp+xml", compressible = true, binary = true)

    lazy val `vnd.ffsns`: MediaType =
      new MediaType("application", "vnd.ffsns", compressible = false, binary = true)

    lazy val `x-chat`: MediaType =
      new MediaType("application", "x-chat", compressible = false, binary = true, List("chat"))

    lazy val `vnd.ves.encrypted`: MediaType =
      new MediaType("application", "vnd.ves.encrypted", compressible = false, binary = true)

    lazy val `vnd.xmpie.ppkg`: MediaType =
      new MediaType("application", "vnd.xmpie.ppkg", compressible = false, binary = true)

    lazy val `held+xml`: MediaType =
      new MediaType("application", "held+xml", compressible = true, binary = true)

    lazy val `vnd.ms-wmdrm.lic-resp`: MediaType =
      new MediaType("application", "vnd.ms-wmdrm.lic-resp", compressible = false, binary = true)

    lazy val `qsig`: MediaType =
      new MediaType("application", "qsig", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.presentation-template`: MediaType =
      new MediaType(
        "application",
        "vnd.oasis.opendocument.presentation-template",
        compressible = false,
        binary = true,
        List("otp"),
      )

    lazy val `vnd.iptc.g2.packageitem+xml`: MediaType =
      new MediaType("application", "vnd.iptc.g2.packageitem+xml", compressible = true, binary = true)

    lazy val `vnd.realvnc.bed`: MediaType =
      new MediaType("application", "vnd.realvnc.bed", compressible = false, binary = true, List("bed"))

    lazy val `mets+xml`: MediaType =
      new MediaType("application", "mets+xml", compressible = true, binary = true, List("mets"))

    lazy val `atsc-dynamic-event-message`: MediaType =
      new MediaType("application", "atsc-dynamic-event-message", compressible = false, binary = true)

    lazy val `nasdata`: MediaType =
      new MediaType("application", "nasdata", compressible = false, binary = true)

    lazy val `x-pilot`: MediaType =
      new MediaType("application", "x-pilot", compressible = false, binary = true, List("prc", "pdb"))

    lazy val `java-serialized-object`: MediaType =
      new MediaType("application", "java-serialized-object", compressible = false, binary = true, List("ser"))

    lazy val `x-stuffitx`: MediaType =
      new MediaType("application", "x-stuffitx", compressible = false, binary = true, List("sitx"))

    lazy val `simple-message-summary`: MediaType =
      new MediaType("application", "simple-message-summary", compressible = false, binary = true)

    lazy val `zstd`: MediaType =
      new MediaType("application", "zstd", compressible = false, binary = true)

    lazy val `news-transmission`: MediaType =
      new MediaType("application", "news-transmission", compressible = false, binary = true)

    lazy val `vnd.fujitsu.oasys`: MediaType =
      new MediaType("application", "vnd.fujitsu.oasys", compressible = false, binary = true, List("oas"))

    lazy val `vnd.adobe.xfdf`: MediaType =
      new MediaType("application", "vnd.adobe.xfdf", compressible = false, binary = true, List("xfdf"))

    lazy val `dssc+xml`: MediaType =
      new MediaType("application", "dssc+xml", compressible = true, binary = true, List("xdssc"))

    lazy val `vnd.netfpx`: MediaType =
      new MediaType("application", "vnd.netfpx", compressible = false, binary = true)

    lazy val `vnd.etsi.tsl+xml`: MediaType =
      new MediaType("application", "vnd.etsi.tsl+xml", compressible = true, binary = true)

    lazy val `vnd.palm`: MediaType =
      new MediaType("application", "vnd.palm", compressible = false, binary = true, List("pdb", "pqa", "oprc"))

    lazy val `expect-ct-report+json`: MediaType =
      new MediaType("application", "expect-ct-report+json", compressible = true, binary = false)

    lazy val `applixware`: MediaType =
      new MediaType("application", "applixware", compressible = false, binary = true, List("aw"))

    lazy val `vnd.adobe.air-application-installer-package+zip`: MediaType =
      new MediaType(
        "application",
        "vnd.adobe.air-application-installer-package+zip",
        compressible = false,
        binary = true,
        List("air"),
      )

    lazy val `vnd.dart`: MediaType =
      new MediaType("application", "vnd.dart", compressible = true, binary = true, List("dart"))

    lazy val `vnd.osgi.dp`: MediaType =
      new MediaType("application", "vnd.osgi.dp", compressible = false, binary = true, List("dp"))

    lazy val `vnd.sun.xml.impress.template`: MediaType =
      new MediaType("application", "vnd.sun.xml.impress.template", compressible = false, binary = true, List("sti"))

    lazy val `vnd.cups-raw`: MediaType =
      new MediaType("application", "vnd.cups-raw", compressible = false, binary = true)

    lazy val `alto-cdnifilter+json`: MediaType =
      new MediaType("application", "alto-cdnifilter+json", compressible = true, binary = false)

    lazy val `vnd.shana.informed.formdata`: MediaType =
      new MediaType("application", "vnd.shana.informed.formdata", compressible = false, binary = true, List("ifm"))

    lazy val `its+xml`: MediaType =
      new MediaType("application", "its+xml", compressible = true, binary = true, List("its"))

    lazy val `vnd.zul`: MediaType =
      new MediaType("application", "vnd.zul", compressible = false, binary = true, List("zir", "zirz"))

    lazy val `vnd.pvi.ptid1`: MediaType =
      new MediaType("application", "vnd.pvi.ptid1", compressible = false, binary = true, List("ptid"))

    lazy val `vnd.3gpp.mcvideo-location-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcvideo-location-info+xml", compressible = true, binary = true)

    lazy val `alto-endpointcost+json`: MediaType =
      new MediaType("application", "alto-endpointcost+json", compressible = true, binary = false)

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.settings+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.settings+xml",
        compressible = true,
        binary = true,
      )

    lazy val `stix+json`: MediaType =
      new MediaType("application", "stix+json", compressible = true, binary = false)

    lazy val `vnd.wqd`: MediaType =
      new MediaType("application", "vnd.wqd", compressible = false, binary = true, List("wqd"))

    lazy val `vnd.japannet-setstore-wakeup`: MediaType =
      new MediaType("application", "vnd.japannet-setstore-wakeup", compressible = false, binary = true)

    lazy val `vnd.ericsson.quickcall`: MediaType =
      new MediaType("application", "vnd.ericsson.quickcall", compressible = false, binary = true)

    lazy val `efi`: MediaType =
      new MediaType("application", "efi", compressible = false, binary = true)

    lazy val `vnd.android.package-archive`: MediaType =
      new MediaType("application", "vnd.android.package-archive", compressible = false, binary = true, List("apk"))

    lazy val `vnd.3gpp.mcptt-ue-config+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcptt-ue-config+xml", compressible = true, binary = true)

    lazy val `vnd.ms-powerpoint.presentation.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-powerpoint.presentation.macroenabled.12",
        compressible = false,
        binary = true,
        List("pptm"),
      )

    lazy val `set-registration`: MediaType =
      new MediaType("application", "set-registration", compressible = false, binary = true)

    lazy val `vnd.laszip`: MediaType =
      new MediaType("application", "vnd.laszip", compressible = false, binary = true)

    lazy val `vnd.stardivision.writer`: MediaType =
      new MediaType("application", "vnd.stardivision.writer", compressible = false, binary = true, List("sdw", "vor"))

    lazy val `gml+xml`: MediaType =
      new MediaType("application", "gml+xml", compressible = true, binary = true, List("gml"))

    lazy val `ppsp-tracker+json`: MediaType =
      new MediaType("application", "ppsp-tracker+json", compressible = true, binary = false)

    lazy val `cdmi-container`: MediaType =
      new MediaType("application", "cdmi-container", compressible = false, binary = true, List("cdmic"))

    lazy val `x-mswrite`: MediaType =
      new MediaType("application", "x-mswrite", compressible = false, binary = true, List("wri"))

    lazy val `x-sv4crc`: MediaType =
      new MediaType("application", "x-sv4crc", compressible = false, binary = true, List("sv4crc"))

    lazy val `vnd.ms-printdevicecapabilities+xml`: MediaType =
      new MediaType("application", "vnd.ms-printdevicecapabilities+xml", compressible = true, binary = true)

    lazy val `vnd.mobius.mbk`: MediaType =
      new MediaType("application", "vnd.mobius.mbk", compressible = false, binary = true, List("mbk"))

    lazy val `vnd.fujifilm.fb.docuworks.container`: MediaType =
      new MediaType("application", "vnd.fujifilm.fb.docuworks.container", compressible = false, binary = true)

    lazy val `tamp-sequence-adjust-confirm`: MediaType =
      new MediaType("application", "tamp-sequence-adjust-confirm", compressible = false, binary = true)

    lazy val `fastinfoset`: MediaType =
      new MediaType("application", "fastinfoset", compressible = false, binary = true)

    lazy val `vnd.veryant.thin`: MediaType =
      new MediaType("application", "vnd.veryant.thin", compressible = false, binary = true)

    lazy val `vcard+json`: MediaType =
      new MediaType("application", "vcard+json", compressible = true, binary = false)

    lazy val `vnd.audiograph`: MediaType =
      new MediaType("application", "vnd.audiograph", compressible = false, binary = true, List("aep"))

    lazy val `vnd.heroku+json`: MediaType =
      new MediaType("application", "vnd.heroku+json", compressible = true, binary = false)

    lazy val `vnd.mobius.msl`: MediaType =
      new MediaType("application", "vnd.mobius.msl", compressible = false, binary = true, List("msl"))

    lazy val `vnd.dvb.pfr`: MediaType =
      new MediaType("application", "vnd.dvb.pfr", compressible = false, binary = true)

    lazy val `vnd.enliven`: MediaType =
      new MediaType("application", "vnd.enliven", compressible = false, binary = true, List("nml"))

    lazy val `x-dtbook+xml`: MediaType =
      new MediaType("application", "x-dtbook+xml", compressible = true, binary = true, List("dtb"))

    lazy val `pdx`: MediaType =
      new MediaType("application", "pdx", compressible = false, binary = true)

    lazy val `vnd.3gpp-prose-pc8+xml`: MediaType =
      new MediaType("application", "vnd.3gpp-prose-pc8+xml", compressible = true, binary = true)

    lazy val `atom+xml`: MediaType =
      new MediaType("application", "atom+xml", compressible = true, binary = true, List("atom"))

    lazy val `vnd.fut-misnet`: MediaType =
      new MediaType("application", "vnd.fut-misnet", compressible = false, binary = true)

    lazy val `x-iwork-numbers-sffnumbers`: MediaType =
      new MediaType("application", "x-iwork-numbers-sffnumbers", compressible = false, binary = true, List("numbers"))

    lazy val `vnd.micro+json`: MediaType =
      new MediaType("application", "vnd.micro+json", compressible = true, binary = false)

    lazy val `vnd.blueice.multipass`: MediaType =
      new MediaType("application", "vnd.blueice.multipass", compressible = false, binary = true, List("mpm"))

    lazy val `vnd.3gpp.mcvideo-transmission-request+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcvideo-transmission-request+xml", compressible = true, binary = true)

    lazy val `mbms-associated-procedure-description+xml`: MediaType =
      new MediaType("application", "mbms-associated-procedure-description+xml", compressible = true, binary = true)

    lazy val `vnd.bbf.usp.msg+json`: MediaType =
      new MediaType("application", "vnd.bbf.usp.msg+json", compressible = true, binary = false)

    lazy val `vnd.radisys.msml-conf+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-conf+xml", compressible = true, binary = true)

    lazy val `vnd.futoin+json`: MediaType =
      new MediaType("application", "vnd.futoin+json", compressible = true, binary = false)

    lazy val `vnd.mophun.application`: MediaType =
      new MediaType("application", "vnd.mophun.application", compressible = false, binary = true, List("mpn"))

    lazy val `x-rar-compressed`: MediaType =
      new MediaType("application", "x-rar-compressed", compressible = false, binary = true, List("rar"))

    lazy val `vnd.3gpp.mcvideo-affiliation-command+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcvideo-affiliation-command+xml", compressible = true, binary = true)

    lazy val `vnd.publishare-delta-tree`: MediaType =
      new MediaType("application", "vnd.publishare-delta-tree", compressible = false, binary = true, List("qps"))

    lazy val `vnd.font-fontforge-sfd`: MediaType =
      new MediaType("application", "vnd.font-fontforge-sfd", compressible = false, binary = true)

    lazy val `vnd.autopackage`: MediaType =
      new MediaType("application", "vnd.autopackage", compressible = false, binary = true)

    lazy val `vnd.airzip.filesecure.azs`: MediaType =
      new MediaType("application", "vnd.airzip.filesecure.azs", compressible = false, binary = true, List("azs"))

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.americandynamics.acc`: MediaType =
      new MediaType("application", "vnd.americandynamics.acc", compressible = false, binary = true, List("acc"))

    lazy val `xslt+xml`: MediaType =
      new MediaType("application", "xslt+xml", compressible = true, binary = true, List("xsl", "xslt"))

    lazy val `rls-services+xml`: MediaType =
      new MediaType("application", "rls-services+xml", compressible = true, binary = true, List("rs"))

    lazy val `moss-keys`: MediaType =
      new MediaType("application", "moss-keys", compressible = false, binary = true)

    lazy val `vnd.ibm.afplinedata`: MediaType =
      new MediaType("application", "vnd.ibm.afplinedata", compressible = false, binary = true)

    lazy val `x-font-bdf`: MediaType =
      new MediaType("application", "x-font-bdf", compressible = false, binary = true, List("bdf"))

    lazy val `vnd.hp-hps`: MediaType =
      new MediaType("application", "vnd.hp-hps", compressible = false, binary = true, List("hps"))

    lazy val `vnd.apothekende.reservation+json`: MediaType =
      new MediaType("application", "vnd.apothekende.reservation+json", compressible = true, binary = false)

    lazy val `vnd.hzn-3d-crossword`: MediaType =
      new MediaType("application", "vnd.hzn-3d-crossword", compressible = false, binary = true)

    lazy val `vnd.japannet-registration`: MediaType =
      new MediaType("application", "vnd.japannet-registration", compressible = false, binary = true)

    lazy val `vnd.sun.xml.calc`: MediaType =
      new MediaType("application", "vnd.sun.xml.calc", compressible = false, binary = true, List("sxc"))

    lazy val `vnd.wolfram.mathematica.package`: MediaType =
      new MediaType("application", "vnd.wolfram.mathematica.package", compressible = false, binary = true)

    lazy val `vnd.framemaker`: MediaType =
      new MediaType(
        "application",
        "vnd.framemaker",
        compressible = false,
        binary = true,
        List("fm", "frame", "maker", "book"),
      )

    lazy val `vnd.3gpp.5gnas`: MediaType =
      new MediaType("application", "vnd.3gpp.5gnas", compressible = false, binary = true)

    lazy val `vnd.zzazz.deck+xml`: MediaType =
      new MediaType("application", "vnd.zzazz.deck+xml", compressible = true, binary = true, List("zaz"))

    lazy val `index.obj`: MediaType =
      new MediaType("application", "index.obj", compressible = false, binary = true)

    lazy val `vnd.pagerduty+json`: MediaType =
      new MediaType("application", "vnd.pagerduty+json", compressible = true, binary = false)

    lazy val `vnd.uplanet.bearer-choice`: MediaType =
      new MediaType("application", "vnd.uplanet.bearer-choice", compressible = false, binary = true)

    lazy val `vnd.llamagraphics.life-balance.desktop`: MediaType =
      new MediaType(
        "application",
        "vnd.llamagraphics.life-balance.desktop",
        compressible = false,
        binary = true,
        List("lbd"),
      )

    lazy val `ttml+xml`: MediaType =
      new MediaType("application", "ttml+xml", compressible = true, binary = true, List("ttml"))

    lazy val `vnd.xmi+xml`: MediaType =
      new MediaType("application", "vnd.xmi+xml", compressible = true, binary = true)

    lazy val `vnd.nebumind.line`: MediaType =
      new MediaType("application", "vnd.nebumind.line", compressible = false, binary = true)

    lazy val `x-pkcs7-certificates`: MediaType =
      new MediaType("application", "x-pkcs7-certificates", compressible = false, binary = true, List("p7b", "spc"))

    lazy val `sparql-query`: MediaType =
      new MediaType("application", "sparql-query", compressible = false, binary = true, List("rq"))

    lazy val `vnd.hp-hpid`: MediaType =
      new MediaType("application", "vnd.hp-hpid", compressible = false, binary = true, List("hpid"))

    lazy val `mrb-consumer+xml`: MediaType =
      new MediaType("application", "mrb-consumer+xml", compressible = true, binary = true)

    lazy val `vnd.sbm.mid2`: MediaType =
      new MediaType("application", "vnd.sbm.mid2", compressible = false, binary = true)

    lazy val `mosskey-data`: MediaType =
      new MediaType("application", "mosskey-data", compressible = false, binary = true)

    lazy val `vnd.hp-pcl`: MediaType =
      new MediaType("application", "vnd.hp-pcl", compressible = false, binary = true, List("pcl"))

    lazy val `vnd.openxmlformats-officedocument.presentationml.tags+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.tags+xml",
        compressible = true,
        binary = true,
      )

    lazy val `linkset`: MediaType =
      new MediaType("application", "linkset", compressible = false, binary = true)

    lazy val `vnd.coreos.ignition+json`: MediaType =
      new MediaType("application", "vnd.coreos.ignition+json", compressible = true, binary = false)

    lazy val `vnd.ims.imsccv1p2`: MediaType =
      new MediaType("application", "vnd.ims.imsccv1p2", compressible = false, binary = true)

    lazy val `vnd.dzr`: MediaType =
      new MediaType("application", "vnd.dzr", compressible = false, binary = true)

    lazy val `vnd.hcl-bireports`: MediaType =
      new MediaType("application", "vnd.hcl-bireports", compressible = false, binary = true)

    lazy val `vnd.mophun.certificate`: MediaType =
      new MediaType("application", "vnd.mophun.certificate", compressible = false, binary = true, List("mpc"))

    lazy val `vnd.ims.lti.v2.toolproxy+json`: MediaType =
      new MediaType("application", "vnd.ims.lti.v2.toolproxy+json", compressible = true, binary = false)

    lazy val `vnd.piaccess.application-licence`: MediaType =
      new MediaType("application", "vnd.piaccess.application-licence", compressible = false, binary = true)

    lazy val `vnd.cloanto.rp9`: MediaType =
      new MediaType("application", "vnd.cloanto.rp9", compressible = false, binary = true, List("rp9"))

    lazy val `vnd.openxmlformats-officedocument.presentationml.slidemaster+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.slidemaster+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.paos.xml`: MediaType =
      new MediaType("application", "vnd.paos.xml", compressible = false, binary = true)

    lazy val `vnd.dvb.notif-ia-registration-response+xml`: MediaType =
      new MediaType("application", "vnd.dvb.notif-ia-registration-response+xml", compressible = true, binary = true)

    lazy val `x-cpio`: MediaType =
      new MediaType("application", "x-cpio", compressible = false, binary = true, List("cpio"))

    lazy val `vnd.recordare.musicxml`: MediaType =
      new MediaType("application", "vnd.recordare.musicxml", compressible = false, binary = true, List("mxl"))

    lazy val `atomicmail`: MediaType =
      new MediaType("application", "atomicmail", compressible = false, binary = true)

    lazy val `vnd.uplanet.cacheop-wbxml`: MediaType =
      new MediaType("application", "vnd.uplanet.cacheop-wbxml", compressible = false, binary = true)

    lazy val `set-payment-initiation`: MediaType =
      new MediaType("application", "set-payment-initiation", compressible = false, binary = true, List("setpay"))

    lazy val `vnd.stardivision.draw`: MediaType =
      new MediaType("application", "vnd.stardivision.draw", compressible = false, binary = true, List("sda"))

    lazy val `vnd.nimn`: MediaType =
      new MediaType("application", "vnd.nimn", compressible = false, binary = true)

    lazy val `vnd.powerbuilder7`: MediaType =
      new MediaType("application", "vnd.powerbuilder7", compressible = false, binary = true)

    lazy val `vnd.apple.pkpass`: MediaType =
      new MediaType("application", "vnd.apple.pkpass", compressible = false, binary = true, List("pkpass"))

    lazy val `vnd.uplanet.listcmd`: MediaType =
      new MediaType("application", "vnd.uplanet.listcmd", compressible = false, binary = true)

    lazy val `oebps-package+xml`: MediaType =
      new MediaType("application", "oebps-package+xml", compressible = true, binary = true, List("opf"))

    lazy val `vnd.wfa.dpp`: MediaType =
      new MediaType("application", "vnd.wfa.dpp", compressible = false, binary = true)

    lazy val `gltf-buffer`: MediaType =
      new MediaType("application", "gltf-buffer", compressible = false, binary = true)

    lazy val `x-dtbresource+xml`: MediaType =
      new MediaType("application", "x-dtbresource+xml", compressible = true, binary = true, List("res"))

    lazy val `x-deb`: MediaType =
      new MediaType("application", "x-deb", compressible = false, binary = true)

    lazy val `vnd.street-stream`: MediaType =
      new MediaType("application", "vnd.street-stream", compressible = false, binary = true)

    lazy val `vnd.3gpp-v2x-local-service-information`: MediaType =
      new MediaType("application", "vnd.3gpp-v2x-local-service-information", compressible = false, binary = true)

    lazy val `vnd.dvb.ipdcesgpdd`: MediaType =
      new MediaType("application", "vnd.dvb.ipdcesgpdd", compressible = false, binary = true)

    lazy val `vnd.fdsn.mseed`: MediaType =
      new MediaType("application", "vnd.fdsn.mseed", compressible = false, binary = true, List("mseed"))

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.uplanet.channel-wbxml`: MediaType =
      new MediaType("application", "vnd.uplanet.channel-wbxml", compressible = false, binary = true)

    lazy val `vnd.yamaha.hv-voice`: MediaType =
      new MediaType("application", "vnd.yamaha.hv-voice", compressible = false, binary = true, List("hvp"))

    lazy val `alto-propmap+json`: MediaType =
      new MediaType("application", "alto-propmap+json", compressible = true, binary = false)

    lazy val `vnd.1000minds.decision-model+xml`: MediaType =
      new MediaType("application", "vnd.1000minds.decision-model+xml", compressible = true, binary = true, List("1km"))

    lazy val `mathematica`: MediaType =
      new MediaType("application", "mathematica", compressible = false, binary = true, List("ma", "nb", "mb"))

    lazy val `problem+json`: MediaType =
      new MediaType("application", "problem+json", compressible = true, binary = false)

    lazy val `vnd.iptc.g2.newsitem+xml`: MediaType =
      new MediaType("application", "vnd.iptc.g2.newsitem+xml", compressible = true, binary = true)

    lazy val `vnd.nokia.landmarkcollection+xml`: MediaType =
      new MediaType("application", "vnd.nokia.landmarkcollection+xml", compressible = true, binary = true)

    lazy val `x-xliff+xml`: MediaType =
      new MediaType("application", "x-xliff+xml", compressible = true, binary = true, List("xlf"))

    lazy val `atsc-dwd+xml`: MediaType =
      new MediaType("application", "atsc-dwd+xml", compressible = true, binary = true, List("dwd"))

    lazy val `automationml-amlx+zip`: MediaType =
      new MediaType("application", "automationml-amlx+zip", compressible = false, binary = true, List("amlx"))

    lazy val `vnd.bluetooth.ep.oob`: MediaType =
      new MediaType("application", "vnd.bluetooth.ep.oob", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.styles+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.styles+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.cendio.thinlinc.clientconf`: MediaType =
      new MediaType("application", "vnd.cendio.thinlinc.clientconf", compressible = false, binary = true)

    lazy val `vnd.etsi.overload-control-policy-dataset+xml`: MediaType =
      new MediaType("application", "vnd.etsi.overload-control-policy-dataset+xml", compressible = true, binary = true)

    lazy val `urc-uisocketdesc+xml`: MediaType =
      new MediaType("application", "urc-uisocketdesc+xml", compressible = true, binary = true)

    lazy val `vnd.radisys.msml+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml+xml", compressible = true, binary = true)

    lazy val `vnd.dvb.dvbj`: MediaType =
      new MediaType("application", "vnd.dvb.dvbj", compressible = false, binary = true)

    lazy val `vnd.windows.devicepairing`: MediaType =
      new MediaType("application", "vnd.windows.devicepairing", compressible = false, binary = true)

    lazy val `vnd.comicbook-rar`: MediaType =
      new MediaType("application", "vnd.comicbook-rar", compressible = false, binary = true)

    lazy val `captive+json`: MediaType =
      new MediaType("application", "captive+json", compressible = true, binary = false)

    lazy val `vnd.etsi.iptvcommand+xml`: MediaType =
      new MediaType("application", "vnd.etsi.iptvcommand+xml", compressible = true, binary = true)

    lazy val `vnd.cups-postscript`: MediaType =
      new MediaType("application", "vnd.cups-postscript", compressible = false, binary = true)

    lazy val `vnd.gentoo.catmetadata+xml`: MediaType =
      new MediaType("application", "vnd.gentoo.catmetadata+xml", compressible = true, binary = true)

    lazy val `vnd.collection+json`: MediaType =
      new MediaType("application", "vnd.collection+json", compressible = true, binary = false)

    lazy val `vnd.oma.lwm2m+json`: MediaType =
      new MediaType("application", "vnd.oma.lwm2m+json", compressible = true, binary = false)

    lazy val `vnd.hp-jlyt`: MediaType =
      new MediaType("application", "vnd.hp-jlyt", compressible = false, binary = true, List("jlt"))

    lazy val `vnd.veritone.aion+json`: MediaType =
      new MediaType("application", "vnd.veritone.aion+json", compressible = true, binary = false)

    lazy val `wasm`: MediaType =
      new MediaType("application", "wasm", compressible = true, binary = true, List("wasm"))

    lazy val `vnd.oma.drm.risd+xml`: MediaType =
      new MediaType("application", "vnd.oma.drm.risd+xml", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.adobe.xdp+xml`: MediaType =
      new MediaType("application", "vnd.adobe.xdp+xml", compressible = true, binary = true, List("xdp"))

    lazy val `vnd.adobe.flash.movie`: MediaType =
      new MediaType("application", "vnd.adobe.flash.movie", compressible = false, binary = true)

    lazy val `vnd.novadigm.ext`: MediaType =
      new MediaType("application", "vnd.novadigm.ext", compressible = false, binary = true, List("ext"))

    lazy val `vnd.las.las+json`: MediaType =
      new MediaType("application", "vnd.las.las+json", compressible = true, binary = false)

    lazy val `x-msbinder`: MediaType =
      new MediaType("application", "x-msbinder", compressible = false, binary = true, List("obd"))

    lazy val `coap-group+json`: MediaType =
      new MediaType("application", "coap-group+json", compressible = true, binary = false)

    lazy val `vnd.oma-scws-config`: MediaType =
      new MediaType("application", "vnd.oma-scws-config", compressible = false, binary = true)

    lazy val `vnd.xfdl`: MediaType =
      new MediaType("application", "vnd.xfdl", compressible = false, binary = true, List("xfdl"))

    lazy val `vnd.oma.bcast.notification+xml`: MediaType =
      new MediaType("application", "vnd.oma.bcast.notification+xml", compressible = true, binary = true)

    lazy val `x-msclip`: MediaType =
      new MediaType("application", "x-msclip", compressible = false, binary = true, List("clp"))

    lazy val `vnd.apple.installer+xml`: MediaType =
      new MediaType("application", "vnd.apple.installer+xml", compressible = true, binary = true, List("mpkg"))

    lazy val `vnd.marlin.drm.actiontoken+xml`: MediaType =
      new MediaType("application", "vnd.marlin.drm.actiontoken+xml", compressible = true, binary = true)

    lazy val `marc`: MediaType =
      new MediaType("application", "marc", compressible = false, binary = true, List("mrc"))

    lazy val `vnd.etsi.iptvsync+xml`: MediaType =
      new MediaType("application", "vnd.etsi.iptvsync+xml", compressible = true, binary = true)

    lazy val `x-conference`: MediaType =
      new MediaType("application", "x-conference", compressible = false, binary = true, List("nsc"))

    lazy val `vnd.epson.esf`: MediaType =
      new MediaType("application", "vnd.epson.esf", compressible = false, binary = true, List("esf"))

    lazy val `vnd.oma.bcast.provisioningtrigger`: MediaType =
      new MediaType("application", "vnd.oma.bcast.provisioningtrigger", compressible = false, binary = true)

    lazy val `vnd.dna`: MediaType =
      new MediaType("application", "vnd.dna", compressible = false, binary = true, List("dna"))

    lazy val `soap+xml`: MediaType =
      new MediaType("application", "soap+xml", compressible = true, binary = true)

    lazy val `vnd.etsi.simservs+xml`: MediaType =
      new MediaType("application", "vnd.etsi.simservs+xml", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.document`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.document",
        compressible = false,
        binary = true,
        List("docx"),
      )

    lazy val `vnd.microsoft.portable-executable`: MediaType =
      new MediaType("application", "vnd.microsoft.portable-executable", compressible = false, binary = true)

    lazy val `vnd.ms-powerpoint.addin.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-powerpoint.addin.macroenabled.12",
        compressible = false,
        binary = true,
        List("ppam"),
      )

    lazy val `vnd.think-cell.ppttc+json`: MediaType =
      new MediaType("application", "vnd.think-cell.ppttc+json", compressible = true, binary = false)

    lazy val `vnd.avistar+xml`: MediaType =
      new MediaType("application", "vnd.avistar+xml", compressible = true, binary = true)

    lazy val `vnd.las.las+xml`: MediaType =
      new MediaType("application", "vnd.las.las+xml", compressible = true, binary = true, List("lasxml"))

    lazy val `vnd.ms-powerpoint.slideshow.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-powerpoint.slideshow.macroenabled.12",
        compressible = false,
        binary = true,
        List("ppsm"),
      )

    lazy val `vnd.ims.lti.v2.toolproxy.id+json`: MediaType =
      new MediaType("application", "vnd.ims.lti.v2.toolproxy.id+json", compressible = true, binary = false)

    lazy val `vnd.nintendo.nitro.rom`: MediaType =
      new MediaType("application", "vnd.nintendo.nitro.rom", compressible = false, binary = true)

    lazy val `vnd.apache.arrow.file`: MediaType =
      new MediaType("application", "vnd.apache.arrow.file", compressible = false, binary = true)

    lazy val `ipfix`: MediaType =
      new MediaType("application", "ipfix", compressible = false, binary = true, List("ipfix"))

    lazy val `vnd.3gpp.mcptt-floor-request+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcptt-floor-request+xml", compressible = true, binary = true)

    lazy val `alto-updatestreamparams+json`: MediaType =
      new MediaType("application", "alto-updatestreamparams+json", compressible = true, binary = false)

    lazy val `vnd.ibm.minipay`: MediaType =
      new MediaType("application", "vnd.ibm.minipay", compressible = false, binary = true, List("mpy"))

    lazy val `vnd.document+json`: MediaType =
      new MediaType("application", "vnd.document+json", compressible = true, binary = false)

    lazy val `vnd.groove-tool-template`: MediaType =
      new MediaType("application", "vnd.groove-tool-template", compressible = false, binary = true, List("tpl"))

    lazy val `vnd.oasis.opendocument.chart-template`: MediaType =
      new MediaType(
        "application",
        "vnd.oasis.opendocument.chart-template",
        compressible = false,
        binary = true,
        List("otc"),
      )

    lazy val `vnd.ms-wmdrm.lic-chlg-req`: MediaType =
      new MediaType("application", "vnd.ms-wmdrm.lic-chlg-req", compressible = false, binary = true)

    lazy val `vnd.wasmflow.wafl`: MediaType =
      new MediaType("application", "vnd.wasmflow.wafl", compressible = false, binary = true)

    lazy val `vnd.google-earth.kml+xml`: MediaType =
      new MediaType("application", "vnd.google-earth.kml+xml", compressible = true, binary = true, List("kml"))

    lazy val `alto-endpointcostparams+json`: MediaType =
      new MediaType("application", "alto-endpointcostparams+json", compressible = true, binary = false)

    lazy val `vnd.radisys.msml-dialog-transform+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-dialog-transform+xml", compressible = true, binary = true)

    lazy val `emergencycalldata.ecall.msd`: MediaType =
      new MediaType("application", "emergencycalldata.ecall.msd", compressible = false, binary = true)

    lazy val `vnd.3gpp.mcptt-affiliation-command+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcptt-affiliation-command+xml", compressible = true, binary = true)

    lazy val `mbms-schedule+xml`: MediaType =
      new MediaType("application", "mbms-schedule+xml", compressible = true, binary = true)

    lazy val `vnd.nervana`: MediaType =
      new MediaType("application", "vnd.nervana", compressible = false, binary = true)

    lazy val `vnd.smart.notebook`: MediaType =
      new MediaType("application", "vnd.smart.notebook", compressible = false, binary = true)

    lazy val `vnd.pcos`: MediaType =
      new MediaType("application", "vnd.pcos", compressible = false, binary = true)

    lazy val `vnd.valve.source.material`: MediaType =
      new MediaType("application", "vnd.valve.source.material", compressible = false, binary = true)

    lazy val `java-archive`: MediaType =
      new MediaType("application", "java-archive", compressible = false, binary = true, List("jar", "war", "ear"))

    lazy val `vnd.miele+json`: MediaType =
      new MediaType("application", "vnd.miele+json", compressible = true, binary = false)

    lazy val `vnd.3gpp.mcptt-mbms-usage-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcptt-mbms-usage-info+xml", compressible = true, binary = true)

    lazy val `vnd.infotech.project`: MediaType =
      new MediaType("application", "vnd.infotech.project", compressible = false, binary = true)

    lazy val `vnd.yamaha.tunnel-udpencap`: MediaType =
      new MediaType("application", "vnd.yamaha.tunnel-udpencap", compressible = false, binary = true)

    lazy val `appx`: MediaType =
      new MediaType("application", "appx", compressible = false, binary = true, List("appx"))

    lazy val `smpte336m`: MediaType =
      new MediaType("application", "smpte336m", compressible = false, binary = true)

    lazy val `x-sv4cpio`: MediaType =
      new MediaType("application", "x-sv4cpio", compressible = false, binary = true, List("sv4cpio"))

    lazy val `mbms-user-service-description+xml`: MediaType =
      new MediaType("application", "mbms-user-service-description+xml", compressible = true, binary = true)

    lazy val `jwt`: MediaType =
      new MediaType("application", "jwt", compressible = false, binary = true)

    lazy val `vnd.fdsn.seed`: MediaType =
      new MediaType("application", "vnd.fdsn.seed", compressible = false, binary = true, List("seed", "dataless"))

    lazy val `ipp`: MediaType =
      new MediaType("application", "ipp", compressible = false, binary = true)

    lazy val `vnd.yamaha.through-ngn`: MediaType =
      new MediaType("application", "vnd.yamaha.through-ngn", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.spreadsheet`: MediaType =
      new MediaType(
        "application",
        "vnd.oasis.opendocument.spreadsheet",
        compressible = false,
        binary = true,
        List("ods"),
      )

    lazy val `vnd.etsi.iptvsad-npvr+xml`: MediaType =
      new MediaType("application", "vnd.etsi.iptvsad-npvr+xml", compressible = true, binary = true)

    lazy val `mpeg4-iod-xmt`: MediaType =
      new MediaType("application", "mpeg4-iod-xmt", compressible = false, binary = true)

    lazy val `vnd.wv.csp+xml`: MediaType =
      new MediaType("application", "vnd.wv.csp+xml", compressible = true, binary = true)

    lazy val `vnd.vectorworks`: MediaType =
      new MediaType("application", "vnd.vectorworks", compressible = false, binary = true)

    lazy val `vnd.mynfc`: MediaType =
      new MediaType("application", "vnd.mynfc", compressible = false, binary = true, List("taglet"))

    lazy val `vnd.century-systems.tcp_stream`: MediaType =
      new MediaType("application", "vnd.century-systems.tcp_stream", compressible = false, binary = true)

    lazy val `clue+xml`: MediaType =
      new MediaType("application", "clue+xml", compressible = true, binary = true)

    lazy val `senml+cbor`: MediaType =
      new MediaType("application", "senml+cbor", compressible = false, binary = true)

    lazy val `elm+json`: MediaType =
      new MediaType("application", "elm+json", compressible = true, binary = false)

    lazy val `vnd.music-niff`: MediaType =
      new MediaType("application", "vnd.music-niff", compressible = false, binary = true)

    lazy val `vnd.ibm.modcap`: MediaType =
      new MediaType(
        "application",
        "vnd.ibm.modcap",
        compressible = false,
        binary = true,
        List("afp", "listafp", "list3820"),
      )

    lazy val `vnd.ctc-posml`: MediaType =
      new MediaType("application", "vnd.ctc-posml", compressible = false, binary = true, List("pml"))

    lazy val `p2p-overlay+xml`: MediaType =
      new MediaType("application", "p2p-overlay+xml", compressible = true, binary = true, List("relo"))

    lazy val `rfc+xml`: MediaType =
      new MediaType("application", "rfc+xml", compressible = true, binary = true)

    lazy val `x-authorware-seg`: MediaType =
      new MediaType("application", "x-authorware-seg", compressible = false, binary = true, List("aas"))

    lazy val `vnd.sealed.csf`: MediaType =
      new MediaType("application", "vnd.sealed.csf", compressible = false, binary = true)

    lazy val `samlmetadata+xml`: MediaType =
      new MediaType("application", "samlmetadata+xml", compressible = true, binary = true)

    lazy val `ssdl+xml`: MediaType =
      new MediaType("application", "ssdl+xml", compressible = true, binary = true, List("ssdl"))

    lazy val `missing-blocks+cbor-seq`: MediaType =
      new MediaType("application", "missing-blocks+cbor-seq", compressible = false, binary = true)

    lazy val `vnd.mobius.txf`: MediaType =
      new MediaType("application", "vnd.mobius.txf", compressible = false, binary = true, List("txf"))

    lazy val `vnd.radisys.msml-audit-conn+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-audit-conn+xml", compressible = true, binary = true)

    lazy val `vnd.futoin+cbor`: MediaType =
      new MediaType("application", "vnd.futoin+cbor", compressible = false, binary = true)

    lazy val `vnd.intertrust.digibox`: MediaType =
      new MediaType("application", "vnd.intertrust.digibox", compressible = false, binary = true)

    lazy val `vnd.radisys.msml-audit+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-audit+xml", compressible = true, binary = true)

    lazy val `vnd.oma-scws-http-response`: MediaType =
      new MediaType("application", "vnd.oma-scws-http-response", compressible = false, binary = true)

    lazy val `x-tar`: MediaType =
      new MediaType("application", "x-tar", compressible = true, binary = true, List("tar"))

    lazy val `vnd.banana-accounting`: MediaType =
      new MediaType("application", "vnd.banana-accounting", compressible = false, binary = true)

    lazy val `token-introspection+jwt`: MediaType =
      new MediaType("application", "token-introspection+jwt", compressible = false, binary = true)

    lazy val `kpml-response+xml`: MediaType =
      new MediaType("application", "kpml-response+xml", compressible = true, binary = true)

    lazy val `vnd.sealed.mht`: MediaType =
      new MediaType("application", "vnd.sealed.mht", compressible = false, binary = true)

    lazy val `vnd.yamaha.hv-dic`: MediaType =
      new MediaType("application", "vnd.yamaha.hv-dic", compressible = false, binary = true, List("hvd"))

    lazy val `applefile`: MediaType =
      new MediaType("application", "applefile", compressible = false, binary = true)

    lazy val `xhtml+xml`: MediaType =
      new MediaType("application", "xhtml+xml", compressible = true, binary = true, List("xhtml", "xht"))

    lazy val `mmt-aei+xml`: MediaType =
      new MediaType("application", "mmt-aei+xml", compressible = true, binary = true, List("maei"))

    lazy val `vnd.oma.bcast.drm-trigger+xml`: MediaType =
      new MediaType("application", "vnd.oma.bcast.drm-trigger+xml", compressible = true, binary = true)

    lazy val `vnd.sealed.xls`: MediaType =
      new MediaType("application", "vnd.sealed.xls", compressible = false, binary = true)

    lazy val `vnd.snesdev-page-table`: MediaType =
      new MediaType("application", "vnd.snesdev-page-table", compressible = false, binary = true)

    lazy val `exi`: MediaType =
      new MediaType("application", "exi", compressible = false, binary = true, List("exi"))

    lazy val `vnd.wap.wmlc`: MediaType =
      new MediaType("application", "vnd.wap.wmlc", compressible = false, binary = true, List("wmlc"))

    lazy val `vnd.oma.cab-feature-handler+xml`: MediaType =
      new MediaType("application", "vnd.oma.cab-feature-handler+xml", compressible = true, binary = true)

    lazy val `media_control+xml`: MediaType =
      new MediaType("application", "media_control+xml", compressible = true, binary = true)

    lazy val `vnd.curl.car`: MediaType =
      new MediaType("application", "vnd.curl.car", compressible = false, binary = true, List("car"))

    lazy val `vnd.openxmlformats-officedocument.presentationml.viewprops+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.viewprops+xml",
        compressible = true,
        binary = true,
      )

    lazy val `xaml+xml`: MediaType =
      new MediaType("application", "xaml+xml", compressible = true, binary = true, List("xaml"))

    lazy val `vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml",
        compressible = true,
        binary = true,
      )

    lazy val `tlsrpt+gzip`: MediaType =
      new MediaType("application", "tlsrpt+gzip", compressible = false, binary = true)

    lazy val `vnd.citationstyles.style+xml`: MediaType =
      new MediaType("application", "vnd.citationstyles.style+xml", compressible = true, binary = true, List("csl"))

    lazy val `urc-grpsheet+xml`: MediaType =
      new MediaType("application", "urc-grpsheet+xml", compressible = true, binary = true)

    lazy val `vnd.frogans.fnc`: MediaType =
      new MediaType("application", "vnd.frogans.fnc", compressible = false, binary = true, List("fnc"))

    lazy val `vnd.onepager`: MediaType =
      new MediaType("application", "vnd.onepager", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.dvb.iptv.alfec-base`: MediaType =
      new MediaType("application", "vnd.dvb.iptv.alfec-base", compressible = false, binary = true)

    lazy val `vnd.joost.joda-archive`: MediaType =
      new MediaType("application", "vnd.joost.joda-archive", compressible = false, binary = true, List("joda"))

    lazy val `pgp-encrypted`: MediaType =
      new MediaType("application", "pgp-encrypted", compressible = false, binary = true, List("pgp"))

    lazy val `x-freearc`: MediaType =
      new MediaType("application", "x-freearc", compressible = false, binary = true, List("arc"))

    lazy val `vnd.3gpp.lpp`: MediaType =
      new MediaType("application", "vnd.3gpp.lpp", compressible = false, binary = true)

    lazy val `vnd.curl.pcurl`: MediaType =
      new MediaType("application", "vnd.curl.pcurl", compressible = false, binary = true, List("pcurl"))

    lazy val `rpki-manifest`: MediaType =
      new MediaType("application", "rpki-manifest", compressible = false, binary = true, List("mft"))

    lazy val `vnd.3gpp.sms+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.sms+xml", compressible = true, binary = true)

    lazy val `vnd.spotfire.sfs`: MediaType =
      new MediaType("application", "vnd.spotfire.sfs", compressible = false, binary = true, List("sfs"))

    lazy val `vnd.liberty-request+xml`: MediaType =
      new MediaType("application", "vnd.liberty-request+xml", compressible = true, binary = true)

    lazy val `node`: MediaType =
      new MediaType("application", "node", compressible = false, binary = true, List("cjs"))

    lazy val `xacml+xml`: MediaType =
      new MediaType("application", "xacml+xml", compressible = true, binary = true)

    lazy val `vnd.ecowin.seriesupdate`: MediaType =
      new MediaType("application", "vnd.ecowin.seriesupdate", compressible = false, binary = true)

    lazy val `vnd.geonext`: MediaType =
      new MediaType("application", "vnd.geonext", compressible = false, binary = true, List("gxt"))

    lazy val `prs.xsf+xml`: MediaType =
      new MediaType("application", "prs.xsf+xml", compressible = true, binary = true, List("xsf"))

    lazy val `srgs`: MediaType =
      new MediaType("application", "srgs", compressible = false, binary = true, List("gram"))

    lazy val `vnd.etsi.timestamp-token`: MediaType =
      new MediaType("application", "vnd.etsi.timestamp-token", compressible = false, binary = true)

    lazy val `vnd.3gpp.mcdata-signalling`: MediaType =
      new MediaType("application", "vnd.3gpp.mcdata-signalling", compressible = false, binary = true)

    lazy val `x-font-dos`: MediaType =
      new MediaType("application", "x-font-dos", compressible = false, binary = true)

    lazy val `x-pki-message`: MediaType =
      new MediaType("application", "x-pki-message", compressible = false, binary = true)

    lazy val `vnd.hsl`: MediaType =
      new MediaType("application", "vnd.hsl", compressible = false, binary = true)

    lazy val `vnd.motorola.flexsuite.ttc`: MediaType =
      new MediaType("application", "vnd.motorola.flexsuite.ttc", compressible = false, binary = true)

    lazy val `x-mspublisher`: MediaType =
      new MediaType("application", "x-mspublisher", compressible = false, binary = true, List("pub"))

    lazy val `vnd.3lightssoftware.imagescal`: MediaType =
      new MediaType("application", "vnd.3lightssoftware.imagescal", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.connections+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.connections+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.fujitsu.oasys3`: MediaType =
      new MediaType("application", "vnd.fujitsu.oasys3", compressible = false, binary = true, List("oa3"))

    lazy val `wspolicy+xml`: MediaType =
      new MediaType("application", "wspolicy+xml", compressible = true, binary = true, List("wspolicy"))

    lazy val `xml-external-parsed-entity`: MediaType =
      new MediaType("application", "xml-external-parsed-entity", compressible = false, binary = false)

    lazy val `vnd.shp`: MediaType =
      new MediaType("application", "vnd.shp", compressible = false, binary = true)

    lazy val `vnd.hyper+json`: MediaType =
      new MediaType("application", "vnd.hyper+json", compressible = true, binary = false)

    lazy val `vnd.age`: MediaType =
      new MediaType("application", "vnd.age", compressible = false, binary = true, List("age"))

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.crick.clicker.wordbank`: MediaType =
      new MediaType("application", "vnd.crick.clicker.wordbank", compressible = false, binary = true, List("clkw"))

    lazy val `x-amf`: MediaType =
      new MediaType("application", "x-amf", compressible = false, binary = true)

    lazy val `vnd.eszigno3+xml`: MediaType =
      new MediaType("application", "vnd.eszigno3+xml", compressible = true, binary = true, List("es3", "et3"))

    lazy val `ecmascript`: MediaType =
      new MediaType("application", "ecmascript", compressible = true, binary = true, List("ecma"))

    lazy val `vnd.rs-274x`: MediaType =
      new MediaType("application", "vnd.rs-274x", compressible = false, binary = true)

    lazy val `lostsync+xml`: MediaType =
      new MediaType("application", "lostsync+xml", compressible = true, binary = true)

    lazy val `vnd.curl`: MediaType =
      new MediaType("application", "vnd.curl", compressible = false, binary = true)

    lazy val `vnd.api+json`: MediaType =
      new MediaType("application", "vnd.api+json", compressible = true, binary = false)

    lazy val `vnd.ims.imsccv1p3`: MediaType =
      new MediaType("application", "vnd.ims.imsccv1p3", compressible = false, binary = true)

    lazy val `vnd.logipipe.circuit+zip`: MediaType =
      new MediaType("application", "vnd.logipipe.circuit+zip", compressible = false, binary = true)

    lazy val `x-authorware-bin`: MediaType =
      new MediaType(
        "application",
        "x-authorware-bin",
        compressible = false,
        binary = true,
        List("aab", "x32", "u32", "vox"),
      )

    lazy val `geoxacml+xml`: MediaType =
      new MediaType("application", "geoxacml+xml", compressible = true, binary = true)

    lazy val `toml`: MediaType =
      new MediaType("application", "toml", compressible = true, binary = true, List("toml"))

    lazy val `vnd.anser-web-certificate-issue-initiation`: MediaType =
      new MediaType(
        "application",
        "vnd.anser-web-certificate-issue-initiation",
        compressible = false,
        binary = true,
        List("cii"),
      )

    lazy val `scvp-vp-request`: MediaType =
      new MediaType("application", "scvp-vp-request", compressible = false, binary = true, List("spq"))

    lazy val `vnd.openxmlformats-officedocument.themeoverride+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.themeoverride+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.psfs`: MediaType =
      new MediaType("application", "vnd.psfs", compressible = false, binary = true)

    lazy val `voucher-cms+json`: MediaType =
      new MediaType("application", "voucher-cms+json", compressible = true, binary = false)

    lazy val `xmpp+xml`: MediaType =
      new MediaType("application", "xmpp+xml", compressible = true, binary = true)

    lazy val `bdoc`: MediaType =
      new MediaType("application", "bdoc", compressible = false, binary = true, List("bdoc"))

    lazy val `vnd.wfa.p2p`: MediaType =
      new MediaType("application", "vnd.wfa.p2p", compressible = false, binary = true)

    lazy val `vnd.uplanet.channel`: MediaType =
      new MediaType("application", "vnd.uplanet.channel", compressible = false, binary = true)

    lazy val `mbms-protection-description+xml`: MediaType =
      new MediaType("application", "mbms-protection-description+xml", compressible = true, binary = true)

    lazy val `vnd.sus-calendar`: MediaType =
      new MediaType("application", "vnd.sus-calendar", compressible = false, binary = true, List("sus", "susp"))

    lazy val `senml-etch+cbor`: MediaType =
      new MediaType("application", "senml-etch+cbor", compressible = false, binary = true)

    lazy val `vnd.motorola.flexsuite`: MediaType =
      new MediaType("application", "vnd.motorola.flexsuite", compressible = false, binary = true)

    lazy val `x-authorware-map`: MediaType =
      new MediaType("application", "x-authorware-map", compressible = false, binary = true, List("aam"))

    lazy val `vnd.3gpp.seal-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.seal-info+xml", compressible = true, binary = true)

    lazy val `dssc+der`: MediaType =
      new MediaType("application", "dssc+der", compressible = false, binary = true, List("dssc"))

    lazy val `vnd.rapid`: MediaType =
      new MediaType("application", "vnd.rapid", compressible = false, binary = true)

    lazy val `vnd.sun.xml.writer.template`: MediaType =
      new MediaType("application", "vnd.sun.xml.writer.template", compressible = false, binary = true, List("stw"))

    lazy val `vnd.3gpp.mcdata-service-config+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcdata-service-config+xml", compressible = true, binary = true)

    lazy val `mikey`: MediaType =
      new MediaType("application", "mikey", compressible = false, binary = true)

    lazy val `vnd.ms-excel.sheet.binary.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-excel.sheet.binary.macroenabled.12",
        compressible = false,
        binary = true,
        List("xlsb"),
      )

    lazy val `batch-smtp`: MediaType =
      new MediaType("application", "batch-smtp", compressible = false, binary = true)

    lazy val `vnd.powerbuilder6-s`: MediaType =
      new MediaType("application", "vnd.powerbuilder6-s", compressible = false, binary = true)

    lazy val `cpl+xml`: MediaType =
      new MediaType("application", "cpl+xml", compressible = true, binary = true, List("cpl"))

    lazy val `cellml+xml`: MediaType =
      new MediaType("application", "cellml+xml", compressible = true, binary = true)

    lazy val `vnd.oma.poc.final-report+xml`: MediaType =
      new MediaType("application", "vnd.oma.poc.final-report+xml", compressible = true, binary = true)

    lazy val `x-mobipocket-ebook`: MediaType =
      new MediaType("application", "x-mobipocket-ebook", compressible = false, binary = true, List("prc", "mobi"))

    lazy val `vnd.ipld.dag-json`: MediaType =
      new MediaType("application", "vnd.ipld.dag-json", compressible = false, binary = false)

    lazy val `isup`: MediaType =
      new MediaType("application", "isup", compressible = false, binary = true)

    lazy val `cwl+json`: MediaType =
      new MediaType("application", "cwl+json", compressible = true, binary = false)

    lazy val `omdoc+xml`: MediaType =
      new MediaType("application", "omdoc+xml", compressible = true, binary = true, List("omdoc"))

    lazy val `vnd.artsquare`: MediaType =
      new MediaType("application", "vnd.artsquare", compressible = false, binary = true)

    lazy val `vnd.obn`: MediaType =
      new MediaType("application", "vnd.obn", compressible = false, binary = true)

    lazy val `vnd.neurolanguage.nlu`: MediaType =
      new MediaType("application", "vnd.neurolanguage.nlu", compressible = false, binary = true, List("nlu"))

    lazy val `vnd.lotus-organizer`: MediaType =
      new MediaType("application", "vnd.lotus-organizer", compressible = false, binary = true, List("org"))

    lazy val `x-font-snf`: MediaType =
      new MediaType("application", "x-font-snf", compressible = false, binary = true, List("snf"))

    lazy val `vnd.syft+json`: MediaType =
      new MediaType("application", "vnd.syft+json", compressible = true, binary = false)

    lazy val `vnd.uoml+xml`: MediaType =
      new MediaType("application", "vnd.uoml+xml", compressible = true, binary = true, List("uoml", "uo"))

    lazy val `x-msschedule`: MediaType =
      new MediaType("application", "x-msschedule", compressible = false, binary = true, List("scd"))

    lazy val `vnd.afpc.cmoca-cmresource`: MediaType =
      new MediaType("application", "vnd.afpc.cmoca-cmresource", compressible = false, binary = true)

    lazy val `x-mscardfile`: MediaType =
      new MediaType("application", "x-mscardfile", compressible = false, binary = true, List("crd"))

    lazy val `vnd.stepmania.stepchart`: MediaType =
      new MediaType("application", "vnd.stepmania.stepchart", compressible = false, binary = true, List("sm"))

    lazy val `eshop`: MediaType =
      new MediaType("application", "eshop", compressible = false, binary = true)

    lazy val `emotionml+xml`: MediaType =
      new MediaType("application", "emotionml+xml", compressible = true, binary = true, List("emotionml"))

    lazy val `tve-trigger`: MediaType =
      new MediaType("application", "tve-trigger", compressible = false, binary = true)

    lazy val `vnd.exstream-package`: MediaType =
      new MediaType("application", "vnd.exstream-package", compressible = false, binary = true)

    lazy val `vnd.svd`: MediaType =
      new MediaType("application", "vnd.svd", compressible = false, binary = true, List("svd"))

    lazy val `vnd.openxmlformats-officedocument.drawingml.diagramdata+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.drawingml.diagramdata+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.afpc.modca-formdef`: MediaType =
      new MediaType("application", "vnd.afpc.modca-formdef", compressible = false, binary = true)

    lazy val `vnd.3gpp.state-and-event-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.state-and-event-info+xml", compressible = true, binary = true)

    lazy val `mbms-msk-response+xml`: MediaType =
      new MediaType("application", "mbms-msk-response+xml", compressible = true, binary = true)

    lazy val `vnd.sealedmedia.softseal.html`: MediaType =
      new MediaType("application", "vnd.sealedmedia.softseal.html", compressible = false, binary = true)

    lazy val `vnd.groove-tool-message`: MediaType =
      new MediaType("application", "vnd.groove-tool-message", compressible = false, binary = true, List("gtm"))

    lazy val `vnd.ecip.rlp`: MediaType =
      new MediaType("application", "vnd.ecip.rlp", compressible = false, binary = true)

    lazy val `hl7v2+xml`: MediaType =
      new MediaType("application", "hl7v2+xml", compressible = true, binary = true)

    lazy val `vnd.afpc.modca-pagesegment`: MediaType =
      new MediaType("application", "vnd.afpc.modca-pagesegment", compressible = false, binary = true)

    lazy val `vnd.httphone`: MediaType =
      new MediaType("application", "vnd.httphone", compressible = false, binary = true)

    lazy val `vnd.smart.teacher`: MediaType =
      new MediaType("application", "vnd.smart.teacher", compressible = false, binary = true, List("teacher"))

    lazy val `vnd.oasis.opendocument.text-master`: MediaType =
      new MediaType(
        "application",
        "vnd.oasis.opendocument.text-master",
        compressible = false,
        binary = true,
        List("odm"),
      )

    lazy val `mediaservercontrol+xml`: MediaType =
      new MediaType("application", "mediaservercontrol+xml", compressible = true, binary = true, List("mscml"))

    lazy val `ibe-key-request+xml`: MediaType =
      new MediaType("application", "ibe-key-request+xml", compressible = true, binary = true)

    lazy val `index.cmd`: MediaType =
      new MediaType("application", "index.cmd", compressible = false, binary = true)

    lazy val `dns+json`: MediaType =
      new MediaType("application", "dns+json", compressible = true, binary = false)

    lazy val `rsd+xml`: MediaType =
      new MediaType("application", "rsd+xml", compressible = true, binary = true, List("rsd"))

    lazy val `vnd.chemdraw+xml`: MediaType =
      new MediaType("application", "vnd.chemdraw+xml", compressible = true, binary = true, List("cdxml"))

    lazy val `mathml-content+xml`: MediaType =
      new MediaType("application", "mathml-content+xml", compressible = true, binary = true)

    lazy val `vnd.motorola.flexsuite.fis`: MediaType =
      new MediaType("application", "vnd.motorola.flexsuite.fis", compressible = false, binary = true)

    lazy val `vnd.vcx`: MediaType =
      new MediaType("application", "vnd.vcx", compressible = false, binary = true, List("vcx"))

    lazy val `tm+json`: MediaType =
      new MediaType("application", "tm+json", compressible = true, binary = false)

    lazy val `vnd.frogans.ltf`: MediaType =
      new MediaType("application", "vnd.frogans.ltf", compressible = false, binary = true, List("ltf"))

    lazy val `pgp-signature`: MediaType =
      new MediaType("application", "pgp-signature", compressible = false, binary = true, List("sig", "asc"))

    lazy val `x-redhat-package-manager`: MediaType =
      new MediaType("application", "x-redhat-package-manager", compressible = false, binary = true, List("rpm"))

    lazy val `vnd.wap.wbxml`: MediaType =
      new MediaType("application", "vnd.wap.wbxml", compressible = false, binary = true, List("wbxml"))

    lazy val `oscore`: MediaType =
      new MediaType("application", "oscore", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.spreadsheet-template`: MediaType =
      new MediaType(
        "application",
        "vnd.oasis.opendocument.spreadsheet-template",
        compressible = false,
        binary = true,
        List("ots"),
      )

    lazy val `vnd.maxmind.maxmind-db`: MediaType =
      new MediaType("application", "vnd.maxmind.maxmind-db", compressible = false, binary = true)

    lazy val `fastsoap`: MediaType =
      new MediaType("application", "fastsoap", compressible = false, binary = true)

    lazy val `vnd.llamagraphics.life-balance.exchange+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.llamagraphics.life-balance.exchange+xml",
        compressible = true,
        binary = true,
        List("lbe"),
      )

    lazy val `mads+xml`: MediaType =
      new MediaType("application", "mads+xml", compressible = true, binary = true, List("mads"))

    lazy val `vnd.triscape.mxs`: MediaType =
      new MediaType("application", "vnd.triscape.mxs", compressible = false, binary = true, List("mxs"))

    lazy val `x-ace-compressed`: MediaType =
      new MediaType("application", "x-ace-compressed", compressible = false, binary = true, List("ace"))

    lazy val `x-iwork-keynote-sffkey`: MediaType =
      new MediaType("application", "x-iwork-keynote-sffkey", compressible = false, binary = true, List("key"))

    lazy val `sarif-external-properties+json`: MediaType =
      new MediaType("application", "sarif-external-properties+json", compressible = true, binary = false)

    lazy val `vnd.sss-cod`: MediaType =
      new MediaType("application", "vnd.sss-cod", compressible = false, binary = true)

    lazy val `mrb-publish+xml`: MediaType =
      new MediaType("application", "mrb-publish+xml", compressible = true, binary = true)

    lazy val `vnd.oipf.pae.gem`: MediaType =
      new MediaType("application", "vnd.oipf.pae.gem", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml",
        compressible = true,
        binary = true,
      )

    lazy val `xop+xml`: MediaType =
      new MediaType("application", "xop+xml", compressible = true, binary = true, List("xop"))

    lazy val `vnd.intu.qbo`: MediaType =
      new MediaType("application", "vnd.intu.qbo", compressible = false, binary = true, List("qbo"))

    lazy val `set-payment`: MediaType =
      new MediaType("application", "set-payment", compressible = false, binary = true)

    lazy val `appinstaller`: MediaType =
      new MediaType("application", "appinstaller", compressible = false, binary = true, List("appinstaller"))

    lazy val `vnd.biopax.rdf+xml`: MediaType =
      new MediaType("application", "vnd.biopax.rdf+xml", compressible = true, binary = true)

    lazy val `vnd.uplanet.signal`: MediaType =
      new MediaType("application", "vnd.uplanet.signal", compressible = false, binary = true)

    lazy val `vnd.macports.portpkg`: MediaType =
      new MediaType("application", "vnd.macports.portpkg", compressible = false, binary = true, List("portpkg"))

    lazy val `activity+json`: MediaType =
      new MediaType("application", "activity+json", compressible = true, binary = false)

    lazy val `whoispp-query`: MediaType =
      new MediaType("application", "whoispp-query", compressible = false, binary = true)

    lazy val `auth-policy+xml`: MediaType =
      new MediaType("application", "auth-policy+xml", compressible = true, binary = true)

    lazy val `x-sea`: MediaType =
      new MediaType("application", "x-sea", compressible = false, binary = true, List("sea"))

    lazy val `vnd.semd`: MediaType =
      new MediaType("application", "vnd.semd", compressible = false, binary = true, List("semd"))

    lazy val `vnd.google-apps.spreadsheet`: MediaType =
      new MediaType("application", "vnd.google-apps.spreadsheet", compressible = false, binary = true, List("gsheet"))

    lazy val `x-virtualbox-vmdk`: MediaType =
      new MediaType("application", "x-virtualbox-vmdk", compressible = true, binary = true, List("vmdk"))

    lazy val `vnd.aristanetworks.swi`: MediaType =
      new MediaType("application", "vnd.aristanetworks.swi", compressible = false, binary = true, List("swi"))

    lazy val `xcap-el+xml`: MediaType =
      new MediaType("application", "xcap-el+xml", compressible = true, binary = true, List("xel"))

    lazy val `emma+xml`: MediaType =
      new MediaType("application", "emma+xml", compressible = true, binary = true, List("emma"))

    lazy val `cdni`: MediaType =
      new MediaType("application", "cdni", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.table+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.table+xml",
        compressible = true,
        binary = true,
      )

    lazy val `x-doom`: MediaType =
      new MediaType("application", "x-doom", compressible = false, binary = true, List("wad"))

    lazy val `vnd.etsi.sci+xml`: MediaType =
      new MediaType("application", "vnd.etsi.sci+xml", compressible = true, binary = true)

    lazy val `swid+cbor`: MediaType =
      new MediaType("application", "swid+cbor", compressible = false, binary = true)

    lazy val `font-tdpfr`: MediaType =
      new MediaType("application", "font-tdpfr", compressible = false, binary = true, List("pfr"))

    lazy val `vnd.gentics.grd+json`: MediaType =
      new MediaType("application", "vnd.gentics.grd+json", compressible = true, binary = false)

    lazy val `x-ustar`: MediaType =
      new MediaType("application", "x-ustar", compressible = false, binary = true, List("ustar"))

    lazy val `urc-ressheet+xml`: MediaType =
      new MediaType("application", "urc-ressheet+xml", compressible = true, binary = true, List("rsheet"))

    lazy val `vnd.dtg.local`: MediaType =
      new MediaType("application", "vnd.dtg.local", compressible = false, binary = true)

    lazy val `http`: MediaType =
      new MediaType("application", "http", compressible = false, binary = true)

    lazy val `vnd.dvb.dvbisl+xml`: MediaType =
      new MediaType("application", "vnd.dvb.dvbisl+xml", compressible = true, binary = true)

    lazy val `vnd.cryptii.pipe+json`: MediaType =
      new MediaType("application", "vnd.cryptii.pipe+json", compressible = true, binary = false)

    lazy val `vnd.quark.quarkxpress`: MediaType =
      new MediaType(
        "application",
        "vnd.quark.quarkxpress",
        compressible = false,
        binary = true,
        List("qxd", "qxt", "qwd", "qwt", "qxl", "qxb"),
      )

    lazy val `vnd.kde.kontour`: MediaType =
      new MediaType("application", "vnd.kde.kontour", compressible = false, binary = true, List("kon"))

    lazy val `vnd.igloader`: MediaType =
      new MediaType("application", "vnd.igloader", compressible = false, binary = true, List("igl"))

    lazy val `vnd.yamaha.smaf-phrase`: MediaType =
      new MediaType("application", "vnd.yamaha.smaf-phrase", compressible = false, binary = true, List("spf"))

    lazy val `vnd.drive+json`: MediaType =
      new MediaType("application", "vnd.drive+json", compressible = true, binary = false)

    lazy val `jsonml+json`: MediaType =
      new MediaType("application", "jsonml+json", compressible = true, binary = false, List("jsonml"))

    lazy val `oblivious-dns-message`: MediaType =
      new MediaType("application", "oblivious-dns-message", compressible = false, binary = true)

    lazy val `vnd.hyper-item+json`: MediaType =
      new MediaType("application", "vnd.hyper-item+json", compressible = true, binary = false)

    lazy val `x-virtualbox-vdi`: MediaType =
      new MediaType("application", "x-virtualbox-vdi", compressible = true, binary = true, List("vdi"))

    lazy val `vcard+xml`: MediaType =
      new MediaType("application", "vcard+xml", compressible = true, binary = true)

    lazy val `vnd.commonspace`: MediaType =
      new MediaType("application", "vnd.commonspace", compressible = false, binary = true, List("csp"))

    lazy val `vnd.shana.informed.interchange`: MediaType =
      new MediaType("application", "vnd.shana.informed.interchange", compressible = false, binary = true, List("iif"))

    lazy val `x-virtualbox-ovf`: MediaType =
      new MediaType("application", "x-virtualbox-ovf", compressible = true, binary = true, List("ovf"))

    lazy val `vnd.ms-powerpoint.slide.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-powerpoint.slide.macroenabled.12",
        compressible = false,
        binary = true,
        List("sldm"),
      )

    lazy val `vnd.tmobile-livetv`: MediaType =
      new MediaType("application", "vnd.tmobile-livetv", compressible = false, binary = true, List("tmo"))

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.mobius.daf`: MediaType =
      new MediaType("application", "vnd.mobius.daf", compressible = false, binary = true, List("daf"))

    lazy val `fhir+json`: MediaType =
      new MediaType("application", "fhir+json", compressible = true, binary = false)

    lazy val `vnd.epson.ssf`: MediaType =
      new MediaType("application", "vnd.epson.ssf", compressible = false, binary = true, List("ssf"))

    lazy val `dicom`: MediaType =
      new MediaType("application", "dicom", compressible = false, binary = true)

    lazy val `x-cbr`: MediaType =
      new MediaType(
        "application",
        "x-cbr",
        compressible = false,
        binary = true,
        List("cbr", "cba", "cbt", "cbz", "cb7"),
      )

    lazy val `vnd.nokia.conml+wbxml`: MediaType =
      new MediaType("application", "vnd.nokia.conml+wbxml", compressible = false, binary = true)

    lazy val `vnd.wv.ssp+xml`: MediaType =
      new MediaType("application", "vnd.wv.ssp+xml", compressible = true, binary = true)

    lazy val `vnd.etsi.tsl.der`: MediaType =
      new MediaType("application", "vnd.etsi.tsl.der", compressible = false, binary = true)

    lazy val `prs.hpub+zip`: MediaType =
      new MediaType("application", "prs.hpub+zip", compressible = false, binary = true)

    lazy val `vnd.japannet-directory-service`: MediaType =
      new MediaType("application", "vnd.japannet-directory-service", compressible = false, binary = true)

    lazy val `sarif+json`: MediaType =
      new MediaType("application", "sarif+json", compressible = true, binary = false)

    lazy val `vnd.siren+json`: MediaType =
      new MediaType("application", "vnd.siren+json", compressible = true, binary = false)

    lazy val `gxf`: MediaType =
      new MediaType("application", "gxf", compressible = false, binary = true, List("gxf"))

    lazy val `vnd.openstreetmap.data+xml`: MediaType =
      new MediaType("application", "vnd.openstreetmap.data+xml", compressible = true, binary = true, List("osm"))

    lazy val `vnd.amundsen.maze+xml`: MediaType =
      new MediaType("application", "vnd.amundsen.maze+xml", compressible = true, binary = true)

    lazy val `x-eva`: MediaType =
      new MediaType("application", "x-eva", compressible = false, binary = true, List("eva"))

    lazy val `vnd.hyperdrive+json`: MediaType =
      new MediaType("application", "vnd.hyperdrive+json", compressible = true, binary = false)

    lazy val `n-triples`: MediaType =
      new MediaType("application", "n-triples", compressible = false, binary = true, List("nt"))

    lazy val `vnd.clonk.c4group`: MediaType =
      new MediaType(
        "application",
        "vnd.clonk.c4group",
        compressible = false,
        binary = true,
        List("c4g", "c4d", "c4f", "c4p", "c4u"),
      )

    lazy val `vnd.stepmania.package`: MediaType =
      new MediaType("application", "vnd.stepmania.package", compressible = false, binary = true, List("smzip"))

    lazy val `vnd.radisys.msml-audit-conf+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-audit-conf+xml", compressible = true, binary = true)

    lazy val `vnd.ms-asf`: MediaType =
      new MediaType("application", "vnd.ms-asf", compressible = false, binary = true)

    lazy val `vnd.collabio.xodocuments.document`: MediaType =
      new MediaType("application", "vnd.collabio.xodocuments.document", compressible = false, binary = true)

    lazy val `vnd.3gpp.mcvideo-service-config+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcvideo-service-config+xml", compressible = true, binary = true)

    lazy val `tamp-status-response`: MediaType =
      new MediaType("application", "tamp-status-response", compressible = false, binary = true)

    lazy val `alto-updatestreamcontrol+json`: MediaType =
      new MediaType("application", "alto-updatestreamcontrol+json", compressible = true, binary = false)

    lazy val `vnd.msa-disk-image`: MediaType =
      new MediaType("application", "vnd.msa-disk-image", compressible = false, binary = true)

    lazy val `x-cfs-compressed`: MediaType =
      new MediaType("application", "x-cfs-compressed", compressible = false, binary = true, List("cfs"))

    lazy val `vnd.oma.cab-address-book+xml`: MediaType =
      new MediaType("application", "vnd.oma.cab-address-book+xml", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml",
        compressible = true,
        binary = true,
      )

    lazy val `xfdf`: MediaType =
      new MediaType("application", "xfdf", compressible = false, binary = true, List("xfdf"))

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.iccprofile`: MediaType =
      new MediaType("application", "vnd.iccprofile", compressible = false, binary = true, List("icc", "icm"))

    lazy val `rpki-updown`: MediaType =
      new MediaType("application", "rpki-updown", compressible = false, binary = true)

    lazy val `tamp-community-update`: MediaType =
      new MediaType("application", "tamp-community-update", compressible = false, binary = true)

    lazy val `vnd.dolby.mobile.2`: MediaType =
      new MediaType("application", "vnd.dolby.mobile.2", compressible = false, binary = true)

    lazy val `vnd.nearst.inv+json`: MediaType =
      new MediaType("application", "vnd.nearst.inv+json", compressible = true, binary = false)

    lazy val `lxf`: MediaType =
      new MediaType("application", "lxf", compressible = false, binary = true)

    lazy val `vnd.wordperfect`: MediaType =
      new MediaType("application", "vnd.wordperfect", compressible = false, binary = true, List("wpd"))

    lazy val `epp+xml`: MediaType =
      new MediaType("application", "epp+xml", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-package.digital-signature-xmlsignature+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-package.digital-signature-xmlsignature+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.sss-ntf`: MediaType =
      new MediaType("application", "vnd.sss-ntf", compressible = false, binary = true)

    lazy val `vnd.oma.cab-user-prefs+xml`: MediaType =
      new MediaType("application", "vnd.oma.cab-user-prefs+xml", compressible = true, binary = true)

    lazy val `vnd.ecowin.filerequest`: MediaType =
      new MediaType("application", "vnd.ecowin.filerequest", compressible = false, binary = true)

    lazy val `vnd.ms-artgalry`: MediaType =
      new MediaType("application", "vnd.ms-artgalry", compressible = false, binary = true, List("cil"))

    lazy val `dialog-info+xml`: MediaType =
      new MediaType("application", "dialog-info+xml", compressible = true, binary = true)

    lazy val `x-font-pcf`: MediaType =
      new MediaType("application", "x-font-pcf", compressible = false, binary = true, List("pcf"))

    lazy val `vnd.openblox.game-binary`: MediaType =
      new MediaType("application", "vnd.openblox.game-binary", compressible = false, binary = true)

    lazy val `x-x509-ca-cert`: MediaType =
      new MediaType("application", "x-x509-ca-cert", compressible = false, binary = true, List("der", "crt", "pem"))

    lazy val `vnd.ipld.raw`: MediaType =
      new MediaType("application", "vnd.ipld.raw", compressible = false, binary = true)

    lazy val `xcap-ns+xml`: MediaType =
      new MediaType("application", "xcap-ns+xml", compressible = true, binary = true, List("xns"))

    lazy val `vnd.cosmocaller`: MediaType =
      new MediaType("application", "vnd.cosmocaller", compressible = false, binary = true, List("cmc"))

    lazy val `x-sh`: MediaType =
      new MediaType("application", "x-sh", compressible = true, binary = true, List("sh"))

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.sealed.tiff`: MediaType =
      new MediaType("application", "vnd.sealed.tiff", compressible = false, binary = true)

    lazy val `fits`: MediaType =
      new MediaType("application", "fits", compressible = false, binary = true)

    lazy val `vnd.wfa.wsc`: MediaType =
      new MediaType("application", "vnd.wfa.wsc", compressible = false, binary = true)

    lazy val `x400-bp`: MediaType =
      new MediaType("application", "x400-bp", compressible = false, binary = true)

    lazy val `vnd.lotus-freelance`: MediaType =
      new MediaType("application", "vnd.lotus-freelance", compressible = false, binary = true, List("pre"))

    lazy val `vnd.medicalholodeck.recordxr`: MediaType =
      new MediaType("application", "vnd.medicalholodeck.recordxr", compressible = false, binary = true)

    lazy val `vnd.powerbuilder6`: MediaType =
      new MediaType("application", "vnd.powerbuilder6", compressible = false, binary = true, List("pbd"))

    lazy val `x-virtualbox-vbox`: MediaType =
      new MediaType("application", "x-virtualbox-vbox", compressible = true, binary = true, List("vbox"))

    lazy val `vnd.kde.karbon`: MediaType =
      new MediaType("application", "vnd.kde.karbon", compressible = false, binary = true, List("karbon"))

    lazy val `sensml+cbor`: MediaType =
      new MediaType("application", "sensml+cbor", compressible = false, binary = true)

    lazy val `msc-ivr+xml`: MediaType =
      new MediaType("application", "msc-ivr+xml", compressible = true, binary = true)

    lazy val `msix`: MediaType =
      new MediaType("application", "msix", compressible = false, binary = true, List("msix"))

    lazy val `vnd.oci.image.manifest.v1+json`: MediaType =
      new MediaType("application", "vnd.oci.image.manifest.v1+json", compressible = true, binary = false)

    lazy val `fido.trusted-apps+json`: MediaType =
      new MediaType("application", "fido.trusted-apps+json", compressible = true, binary = false)

    lazy val `vnd.ieee.1905`: MediaType =
      new MediaType("application", "vnd.ieee.1905", compressible = false, binary = true)

    lazy val `x-font-type1`: MediaType =
      new MediaType(
        "application",
        "x-font-type1",
        compressible = false,
        binary = true,
        List("pfa", "pfb", "pfm", "afm"),
      )

    lazy val `vnd.yaoweme`: MediaType =
      new MediaType("application", "vnd.yaoweme", compressible = false, binary = true)

    lazy val `rss+xml`: MediaType =
      new MediaType("application", "rss+xml", compressible = true, binary = true, List("rss"))

    lazy val `emergencycalldata.control+xml`: MediaType =
      new MediaType("application", "emergencycalldata.control+xml", compressible = true, binary = true)

    lazy val `x-gtar`: MediaType =
      new MediaType("application", "x-gtar", compressible = false, binary = true, List("gtar"))

    lazy val `octet-stream`: MediaType =
      new MediaType(
        "application",
        "octet-stream",
        compressible = false,
        binary = true,
        List(
          "bin",
          "dms",
          "lrf",
          "mar",
          "so",
          "dist",
          "distz",
          "pkg",
          "bpk",
          "dump",
          "elc",
          "deploy",
          "exe",
          "dll",
          "deb",
          "dmg",
          "iso",
          "img",
          "msi",
          "msp",
          "msm",
          "buffer",
        ),
      )

    lazy val `vnd.ms-excel.addin.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-excel.addin.macroenabled.12",
        compressible = false,
        binary = true,
        List("xlam"),
      )

    lazy val `vnd.openxmlformats-package.core-properties+xml`: MediaType =
      new MediaType("application", "vnd.openxmlformats-package.core-properties+xml", compressible = true, binary = true)

    lazy val `vnd.ms-color.iccprofile`: MediaType =
      new MediaType("application", "vnd.ms-color.iccprofile", compressible = false, binary = true)

    lazy val `vnd.etsi.iptvueprofile+xml`: MediaType =
      new MediaType("application", "vnd.etsi.iptvueprofile+xml", compressible = true, binary = true)

    lazy val `vnd.apache.thrift.json`: MediaType =
      new MediaType("application", "vnd.apache.thrift.json", compressible = false, binary = false)

    lazy val `vnd.powerbuilder75-s`: MediaType =
      new MediaType("application", "vnd.powerbuilder75-s", compressible = false, binary = true)

    lazy val `x-msterminal`: MediaType =
      new MediaType("application", "x-msterminal", compressible = false, binary = true, List("trm"))

    lazy val `calendar+json`: MediaType =
      new MediaType("application", "calendar+json", compressible = true, binary = false)

    lazy val `xcon-conference-info+xml`: MediaType =
      new MediaType("application", "xcon-conference-info+xml", compressible = true, binary = true)

    lazy val `vnd.collection.doc+json`: MediaType =
      new MediaType("application", "vnd.collection.doc+json", compressible = true, binary = false)

    lazy val `vnd.d3m-dataset`: MediaType =
      new MediaType("application", "vnd.d3m-dataset", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.formula`: MediaType =
      new MediaType("application", "vnd.oasis.opendocument.formula", compressible = false, binary = true, List("odf"))

    lazy val `vnd.simtech-mindmapper`: MediaType =
      new MediaType("application", "vnd.simtech-mindmapper", compressible = false, binary = true, List("twd", "twds"))

    lazy val `reginfo+xml`: MediaType =
      new MediaType("application", "reginfo+xml", compressible = true, binary = true, List("rif"))

    lazy val `vnd.wordlift`: MediaType =
      new MediaType("application", "vnd.wordlift", compressible = false, binary = true)

    lazy val `lost+xml`: MediaType =
      new MediaType("application", "lost+xml", compressible = true, binary = true, List("lostxml"))

    lazy val `vnd.preminet`: MediaType =
      new MediaType("application", "vnd.preminet", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.comicbook+zip`: MediaType =
      new MediaType("application", "vnd.comicbook+zip", compressible = false, binary = true)

    lazy val `vnd.ezpix-package`: MediaType =
      new MediaType("application", "vnd.ezpix-package", compressible = false, binary = true, List("ez3"))

    lazy val `emergencycalldata.veds+xml`: MediaType =
      new MediaType("application", "emergencycalldata.veds+xml", compressible = true, binary = true)

    lazy val `pkcs10`: MediaType =
      new MediaType("application", "pkcs10", compressible = false, binary = true, List("p10"))

    lazy val `vnd.dtg.local.flash`: MediaType =
      new MediaType("application", "vnd.dtg.local.flash", compressible = false, binary = true)

    lazy val `sep-exi`: MediaType =
      new MediaType("application", "sep-exi", compressible = false, binary = true)

    lazy val `vnd.nokia.radio-preset`: MediaType =
      new MediaType("application", "vnd.nokia.radio-preset", compressible = false, binary = true, List("rpst"))

    lazy val `vnd.dece.zip`: MediaType =
      new MediaType("application", "vnd.dece.zip", compressible = false, binary = true, List("uvz", "uvvz"))

    lazy val `smil+xml`: MediaType =
      new MediaType("application", "smil+xml", compressible = true, binary = true, List("smi", "smil"))

    lazy val `vnd.shopkick+json`: MediaType =
      new MediaType("application", "vnd.shopkick+json", compressible = true, binary = false)

    lazy val `webpush-options+json`: MediaType =
      new MediaType("application", "webpush-options+json", compressible = true, binary = false)

    lazy val `vnd.anki`: MediaType =
      new MediaType("application", "vnd.anki", compressible = false, binary = true)

    lazy val `cdmi-object`: MediaType =
      new MediaType("application", "cdmi-object", compressible = false, binary = true, List("cdmio"))

    lazy val `vnd.onepagertatp`: MediaType =
      new MediaType("application", "vnd.onepagertatp", compressible = false, binary = true)

    lazy val `vnd.fujixerox.docuworks.binder`: MediaType =
      new MediaType("application", "vnd.fujixerox.docuworks.binder", compressible = false, binary = true, List("xbd"))

    lazy val `rtf`: MediaType =
      new MediaType("application", "rtf", compressible = true, binary = true, List("rtf"))

    lazy val `vnd.nintendo.snes.rom`: MediaType =
      new MediaType("application", "vnd.nintendo.snes.rom", compressible = false, binary = true)

    lazy val `vnd.visionary`: MediaType =
      new MediaType("application", "vnd.visionary", compressible = false, binary = true, List("vis"))

    lazy val `vnd.iptc.g2.newsmessage+xml`: MediaType =
      new MediaType("application", "vnd.iptc.g2.newsmessage+xml", compressible = true, binary = true)

    lazy val `tamp-update`: MediaType =
      new MediaType("application", "tamp-update", compressible = false, binary = true)

    lazy val `calendar+xml`: MediaType =
      new MediaType("application", "calendar+xml", compressible = true, binary = true, List("xcs"))

    lazy val `vnd.canon-lips`: MediaType =
      new MediaType("application", "vnd.canon-lips", compressible = false, binary = true)

    lazy val `vnd.bpf`: MediaType =
      new MediaType("application", "vnd.bpf", compressible = false, binary = true)

    lazy val `prs.cyn`: MediaType =
      new MediaType("application", "prs.cyn", compressible = false, binary = true)

    lazy val `vnd.wap.sic`: MediaType =
      new MediaType("application", "vnd.wap.sic", compressible = false, binary = true)

    lazy val `alto-cdni+json`: MediaType =
      new MediaType("application", "alto-cdni+json", compressible = true, binary = false)

    lazy val `vnd.handheld-entertainment+xml`: MediaType =
      new MediaType("application", "vnd.handheld-entertainment+xml", compressible = true, binary = true, List("zmm"))

    lazy val `vnd.shootproof+json`: MediaType =
      new MediaType("application", "vnd.shootproof+json", compressible = true, binary = false)

    lazy val `prs.cww`: MediaType =
      new MediaType("application", "prs.cww", compressible = false, binary = true, List("cww"))

    lazy val `vnd.gentoo.eclass`: MediaType =
      new MediaType("application", "vnd.gentoo.eclass", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.ms-officetheme`: MediaType =
      new MediaType("application", "vnd.ms-officetheme", compressible = false, binary = true, List("thmx"))

    lazy val `pkix-pkipath`: MediaType =
      new MediaType("application", "pkix-pkipath", compressible = false, binary = true, List("pkipath"))

    lazy val `vnd.openxmlformats-officedocument.extended-properties+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.extended-properties+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.belightsoft.lhzl+zip`: MediaType =
      new MediaType("application", "vnd.belightsoft.lhzl+zip", compressible = false, binary = true)

    lazy val `vnd.3gpp.pic-bw-small`: MediaType =
      new MediaType("application", "vnd.3gpp.pic-bw-small", compressible = false, binary = true, List("psb"))

    lazy val `vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.oma.bcast.smartcard-trigger+xml`: MediaType =
      new MediaType("application", "vnd.oma.bcast.smartcard-trigger+xml", compressible = true, binary = true)

    lazy val `vnd.ncd.reference`: MediaType =
      new MediaType("application", "vnd.ncd.reference", compressible = false, binary = true)

    lazy val `vnd.ipunplugged.rcprofile`: MediaType =
      new MediaType("application", "vnd.ipunplugged.rcprofile", compressible = false, binary = true, List("rcprofile"))

    lazy val `cnrp+xml`: MediaType =
      new MediaType("application", "cnrp+xml", compressible = true, binary = true)

    lazy val `vnd.amiga.ami`: MediaType =
      new MediaType("application", "vnd.amiga.ami", compressible = false, binary = true, List("ami"))

    lazy val `yang-patch+xml`: MediaType =
      new MediaType("application", "yang-patch+xml", compressible = true, binary = true)

    lazy val `vnd.etsi.iptvsad-cod+xml`: MediaType =
      new MediaType("application", "vnd.etsi.iptvsad-cod+xml", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.wt.stf`: MediaType =
      new MediaType("application", "vnd.wt.stf", compressible = false, binary = true, List("stf"))

    lazy val `vnd.3gpp2.bcmcsinfo+xml`: MediaType =
      new MediaType("application", "vnd.3gpp2.bcmcsinfo+xml", compressible = true, binary = true)

    lazy val `vnd.3gpp-prose+xml`: MediaType =
      new MediaType("application", "vnd.3gpp-prose+xml", compressible = true, binary = true)

    lazy val `vnd.sun.xml.writer`: MediaType =
      new MediaType("application", "vnd.sun.xml.writer", compressible = false, binary = true, List("sxw"))

    lazy val `vnd.rim.cod`: MediaType =
      new MediaType("application", "vnd.rim.cod", compressible = false, binary = true, List("cod"))

    lazy val `poc-settings+xml`: MediaType =
      new MediaType("application", "poc-settings+xml", compressible = true, binary = true)

    lazy val `jose`: MediaType =
      new MediaType("application", "jose", compressible = false, binary = true)

    lazy val `pkixcmp`: MediaType =
      new MediaType("application", "pkixcmp", compressible = false, binary = true, List("pki"))

    lazy val `vnd.infotech.project+xml`: MediaType =
      new MediaType("application", "vnd.infotech.project+xml", compressible = true, binary = true)

    lazy val `vnd.uplanet.bearer-choice-wbxml`: MediaType =
      new MediaType("application", "vnd.uplanet.bearer-choice-wbxml", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.presentationml.notesslide+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.notesslide+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.f-secure.mobile`: MediaType =
      new MediaType("application", "vnd.f-secure.mobile", compressible = false, binary = true)

    lazy val `scaip+xml`: MediaType =
      new MediaType("application", "scaip+xml", compressible = true, binary = true)

    lazy val `vnd.gentoo.xpak`: MediaType =
      new MediaType("application", "vnd.gentoo.xpak", compressible = false, binary = true)

    lazy val `vnd.poc.group-advertisement+xml`: MediaType =
      new MediaType("application", "vnd.poc.group-advertisement+xml", compressible = true, binary = true)

    lazy val `xcap-error+xml`: MediaType =
      new MediaType("application", "xcap-error+xml", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-officedocument.custom-properties+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.custom-properties+xml",
        compressible = true,
        binary = true,
      )

    lazy val `h224`: MediaType =
      new MediaType("application", "h224", compressible = false, binary = true)

    lazy val `vnd.kde.kivio`: MediaType =
      new MediaType("application", "vnd.kde.kivio", compressible = false, binary = true, List("flw"))

    lazy val `mmt-usd+xml`: MediaType =
      new MediaType("application", "mmt-usd+xml", compressible = true, binary = true, List("musd"))

    lazy val `csta+xml`: MediaType =
      new MediaType("application", "csta+xml", compressible = true, binary = true)

    lazy val `vnd.3gpp.mcptt-ue-init-config+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcptt-ue-init-config+xml", compressible = true, binary = true)

    lazy val `vnd.ms-htmlhelp`: MediaType =
      new MediaType("application", "vnd.ms-htmlhelp", compressible = false, binary = true, List("chm"))

    lazy val `xenc+xml`: MediaType =
      new MediaType("application", "xenc+xml", compressible = true, binary = true, List("xenc"))

    lazy val `tamp-sequence-adjust`: MediaType =
      new MediaType("application", "tamp-sequence-adjust", compressible = false, binary = true)

    lazy val `cfw`: MediaType =
      new MediaType("application", "cfw", compressible = false, binary = true)

    lazy val `vnd.oipf.spdiscovery+xml`: MediaType =
      new MediaType("application", "vnd.oipf.spdiscovery+xml", compressible = true, binary = true)

    lazy val `vnd.sycle+xml`: MediaType =
      new MediaType("application", "vnd.sycle+xml", compressible = true, binary = true)

    lazy val `vnd.sun.wadl+xml`: MediaType =
      new MediaType("application", "vnd.sun.wadl+xml", compressible = true, binary = true, List("wadl"))

    lazy val `vnd.lotus-notes`: MediaType =
      new MediaType("application", "vnd.lotus-notes", compressible = false, binary = true, List("nsf"))

    lazy val `vnd.epson.msf`: MediaType =
      new MediaType("application", "vnd.epson.msf", compressible = false, binary = true, List("msf"))

    lazy val `vnd.oma.bcast.sprov+xml`: MediaType =
      new MediaType("application", "vnd.oma.bcast.sprov+xml", compressible = true, binary = true)

    lazy val `vnd.unity`: MediaType =
      new MediaType("application", "vnd.unity", compressible = false, binary = true, List("unityweb"))

    lazy val `vnd.oipf.cspg-hexbinary`: MediaType =
      new MediaType("application", "vnd.oipf.cspg-hexbinary", compressible = false, binary = true)

    lazy val `vnd.uplanet.list-wbxml`: MediaType =
      new MediaType("application", "vnd.uplanet.list-wbxml", compressible = false, binary = true)

    lazy val `rpki-publication`: MediaType =
      new MediaType("application", "rpki-publication", compressible = false, binary = true)

    lazy val `vnd.3gpp-prose-pc3ach+xml`: MediaType =
      new MediaType("application", "vnd.3gpp-prose-pc3ach+xml", compressible = true, binary = true)

    lazy val `vnd.xacml+json`: MediaType =
      new MediaType("application", "vnd.xacml+json", compressible = true, binary = false)

    lazy val `vnd.dvb.notif-ia-registration-request+xml`: MediaType =
      new MediaType("application", "vnd.dvb.notif-ia-registration-request+xml", compressible = true, binary = true)

    lazy val `vnd.japannet-registration-wakeup`: MediaType =
      new MediaType("application", "vnd.japannet-registration-wakeup", compressible = false, binary = true)

    lazy val `vnd.kinar`: MediaType =
      new MediaType("application", "vnd.kinar", compressible = false, binary = true, List("kne", "knp"))

    lazy val `vnd.3gpp.mcvideo-mbms-usage-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcvideo-mbms-usage-info+xml", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.3gpp2.tcap`: MediaType =
      new MediaType("application", "vnd.3gpp2.tcap", compressible = false, binary = true, List("tcap"))

    lazy val `mac-compactpro`: MediaType =
      new MediaType("application", "mac-compactpro", compressible = false, binary = true, List("cpt"))

    lazy val `widget`: MediaType =
      new MediaType("application", "widget", compressible = false, binary = true, List("wgt"))

    lazy val `raptorfec`: MediaType =
      new MediaType("application", "raptorfec", compressible = false, binary = true)

    lazy val `tlsrpt+json`: MediaType =
      new MediaType("application", "tlsrpt+json", compressible = true, binary = false)

    lazy val `vnd.bluetooth.le.oob`: MediaType =
      new MediaType("application", "vnd.bluetooth.le.oob", compressible = false, binary = true)

    lazy val `x-ms-shortcut`: MediaType =
      new MediaType("application", "x-ms-shortcut", compressible = false, binary = true, List("lnk"))

    lazy val `oxps`: MediaType =
      new MediaType("application", "oxps", compressible = false, binary = true, List("oxps"))

    lazy val `metalink+xml`: MediaType =
      new MediaType("application", "metalink+xml", compressible = true, binary = true, List("metalink"))

    lazy val `mpeg4-iod`: MediaType =
      new MediaType("application", "mpeg4-iod", compressible = false, binary = true)

    lazy val `vnd.nokia.n-gage.ac+xml`: MediaType =
      new MediaType("application", "vnd.nokia.n-gage.ac+xml", compressible = true, binary = true, List("ac"))

    lazy val `javascript`: MediaType =
      new MediaType("application", "javascript", compressible = true, binary = false, List("js"))

    lazy val `vnd.seis+json`: MediaType =
      new MediaType("application", "vnd.seis+json", compressible = true, binary = false)

    lazy val `vnd.xfdl.webform`: MediaType =
      new MediaType("application", "vnd.xfdl.webform", compressible = false, binary = true)

    lazy val `vnd.datalog`: MediaType =
      new MediaType("application", "vnd.datalog", compressible = false, binary = true)

    lazy val `alto-endpointprop+json`: MediaType =
      new MediaType("application", "alto-endpointprop+json", compressible = true, binary = false)

    lazy val `vnd.omaloc-supl-init`: MediaType =
      new MediaType("application", "vnd.omaloc-supl-init", compressible = false, binary = true)

    lazy val `vnd.eclipse.ditto+json`: MediaType =
      new MediaType("application", "vnd.eclipse.ditto+json", compressible = true, binary = false)

    lazy val `vnd.vividence.scriptfile`: MediaType =
      new MediaType("application", "vnd.vividence.scriptfile", compressible = false, binary = true)

    lazy val `xml`: MediaType =
      new MediaType("application", "xml", compressible = true, binary = false, List("xml", "xsl", "xsd", "rng"))

    lazy val `vnd.wmf.bootstrap`: MediaType =
      new MediaType("application", "vnd.wmf.bootstrap", compressible = false, binary = true)

    lazy val `vnd.afpc.modca-cmtable`: MediaType =
      new MediaType("application", "vnd.afpc.modca-cmtable", compressible = false, binary = true)

    lazy val `vnd.syncml.dmtnds+wbxml`: MediaType =
      new MediaType("application", "vnd.syncml.dmtnds+wbxml", compressible = false, binary = true)

    lazy val `vnd.uplanet.alert-wbxml`: MediaType =
      new MediaType("application", "vnd.uplanet.alert-wbxml", compressible = false, binary = true)

    lazy val `vnd.shana.informed.package`: MediaType =
      new MediaType("application", "vnd.shana.informed.package", compressible = false, binary = true, List("ipk"))

    lazy val `vnd.onepagertamx`: MediaType =
      new MediaType("application", "vnd.onepagertamx", compressible = false, binary = true)

    lazy val `vnd.apple.numbers`: MediaType =
      new MediaType("application", "vnd.apple.numbers", compressible = false, binary = true, List("numbers"))

    lazy val `vnd.ncd.control`: MediaType =
      new MediaType("application", "vnd.ncd.control", compressible = false, binary = true)

    lazy val `vnd.xmpie.plan`: MediaType =
      new MediaType("application", "vnd.xmpie.plan", compressible = false, binary = true)

    lazy val `vnd.3gpp.mcvideo-ue-config+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcvideo-ue-config+xml", compressible = true, binary = true)

    lazy val `x-pkcs12`: MediaType =
      new MediaType("application", "x-pkcs12", compressible = false, binary = true, List("p12", "pfx"))

    lazy val `vnd.efi.iso`: MediaType =
      new MediaType("application", "vnd.efi.iso", compressible = false, binary = true)

    lazy val `emergencycalldata.cap+xml`: MediaType =
      new MediaType("application", "emergencycalldata.cap+xml", compressible = true, binary = true)

    lazy val `vnd.sun.xml.math`: MediaType =
      new MediaType("application", "vnd.sun.xml.math", compressible = false, binary = true, List("sxm"))

    lazy val `vnd.imagemeter.folder+zip`: MediaType =
      new MediaType("application", "vnd.imagemeter.folder+zip", compressible = false, binary = true)

    lazy val `vnd.ms-printing.printticket+xml`: MediaType =
      new MediaType("application", "vnd.ms-printing.printticket+xml", compressible = true, binary = true)

    lazy val `vnd.ms-tnef`: MediaType =
      new MediaType("application", "vnd.ms-tnef", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml",
        compressible = true,
        binary = true,
      )

    lazy val `x-font-linux-psf`: MediaType =
      new MediaType("application", "x-font-linux-psf", compressible = false, binary = true, List("psf"))

    lazy val `vnd.radisys.msml-dialog-fax-detect+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-dialog-fax-detect+xml", compressible = true, binary = true)

    lazy val `provenance+xml`: MediaType =
      new MediaType("application", "provenance+xml", compressible = true, binary = true, List("provx"))

    lazy val `xml-dtd`: MediaType =
      new MediaType("application", "xml-dtd", compressible = true, binary = false, List("dtd"))

    lazy val `vnd.cybank`: MediaType =
      new MediaType("application", "vnd.cybank", compressible = false, binary = true)

    lazy val `vnd.yellowriver-custom-menu`: MediaType =
      new MediaType("application", "vnd.yellowriver-custom-menu", compressible = false, binary = true, List("cmp"))

    lazy val `vnd.ims.lti.v2.toolsettings.simple+json`: MediaType =
      new MediaType("application", "vnd.ims.lti.v2.toolsettings.simple+json", compressible = true, binary = false)

    lazy val `vnd.tri.onesource`: MediaType =
      new MediaType("application", "vnd.tri.onesource", compressible = false, binary = true)

    lazy val `vnd.belightsoft.lhzd+zip`: MediaType =
      new MediaType("application", "vnd.belightsoft.lhzd+zip", compressible = false, binary = true)

    lazy val `vnd.bpf3`: MediaType =
      new MediaType("application", "vnd.bpf3", compressible = false, binary = true)

    lazy val `vnd.apache.thrift.compact`: MediaType =
      new MediaType("application", "vnd.apache.thrift.compact", compressible = false, binary = true)

    lazy val `vnd.radisys.msml-audit-dialog+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-audit-dialog+xml", compressible = true, binary = true)

    lazy val `x-subrip`: MediaType =
      new MediaType("application", "x-subrip", compressible = false, binary = true, List("srt"))

    lazy val `vnd.oma.poc.detailed-progress-report+xml`: MediaType =
      new MediaType("application", "vnd.oma.poc.detailed-progress-report+xml", compressible = true, binary = true)

    lazy val `vnd.openxmlformats-officedocument.drawingml.chart+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.drawingml.chart+xml",
        compressible = true,
        binary = true,
      )

    lazy val `bacnet-xdd+zip`: MediaType =
      new MediaType("application", "bacnet-xdd+zip", compressible = false, binary = true)

    lazy val `vnd.swiftview-ics`: MediaType =
      new MediaType("application", "vnd.swiftview-ics", compressible = false, binary = true)

    lazy val `vnd.ds-keypoint`: MediaType =
      new MediaType("application", "vnd.ds-keypoint", compressible = false, binary = true, List("kpxx"))

    lazy val `kpml-request+xml`: MediaType =
      new MediaType("application", "kpml-request+xml", compressible = true, binary = true)

    lazy val `vnd.resilient.logic`: MediaType =
      new MediaType("application", "vnd.resilient.logic", compressible = false, binary = true)

    lazy val `session-info`: MediaType =
      new MediaType("application", "session-info", compressible = false, binary = true)

    lazy val `vnd.cyclonedx+xml`: MediaType =
      new MediaType("application", "vnd.cyclonedx+xml", compressible = true, binary = true)

    lazy val `vnd.sealed.ppt`: MediaType =
      new MediaType("application", "vnd.sealed.ppt", compressible = false, binary = true)

    lazy val `sru+xml`: MediaType =
      new MediaType("application", "sru+xml", compressible = true, binary = true, List("sru"))

    lazy val `route-apd+xml`: MediaType =
      new MediaType("application", "route-apd+xml", compressible = true, binary = true, List("rapd"))

    lazy val `hyperstudio`: MediaType =
      new MediaType("application", "hyperstudio", compressible = false, binary = true, List("stk"))

    lazy val `cdmi-queue`: MediaType =
      new MediaType("application", "cdmi-queue", compressible = false, binary = true, List("cdmiq"))

    lazy val `mbms-register-response+xml`: MediaType =
      new MediaType("application", "mbms-register-response+xml", compressible = true, binary = true)

    lazy val `dca-rft`: MediaType =
      new MediaType("application", "dca-rft", compressible = false, binary = true)

    lazy val `vnd.syncml+xml`: MediaType =
      new MediaType("application", "vnd.syncml+xml", compressible = true, binary = true, List("xsm"))

    lazy val `vnd.ecowin.fileupdate`: MediaType =
      new MediaType("application", "vnd.ecowin.fileupdate", compressible = false, binary = true)

    lazy val `x-java-archive-diff`: MediaType =
      new MediaType("application", "x-java-archive-diff", compressible = false, binary = true, List("jardiff"))

    lazy val `x-wais-source`: MediaType =
      new MediaType("application", "x-wais-source", compressible = false, binary = true, List("src"))

    lazy val `x-futuresplash`: MediaType =
      new MediaType("application", "x-futuresplash", compressible = false, binary = true, List("spl"))

    lazy val `rlmi+xml`: MediaType =
      new MediaType("application", "rlmi+xml", compressible = true, binary = true)

    lazy val `vnd.mobius.plc`: MediaType =
      new MediaType("application", "vnd.mobius.plc", compressible = false, binary = true, List("plc"))

    lazy val `vnd.oma.lwm2m+cbor`: MediaType =
      new MediaType("application", "vnd.oma.lwm2m+cbor", compressible = false, binary = true)

    lazy val `vnd.radisys.msml-dialog-fax-sendrecv+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-dialog-fax-sendrecv+xml", compressible = true, binary = true)

    lazy val `vnd.3gpp.mid-call+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mid-call+xml", compressible = true, binary = true)

    lazy val `pkcs7-signature`: MediaType =
      new MediaType("application", "pkcs7-signature", compressible = false, binary = true, List("p7s"))

    lazy val `vnd.openxmlformats-officedocument.presentationml.slidelayout+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.slidelayout+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.imagemeter.image+zip`: MediaType =
      new MediaType("application", "vnd.imagemeter.image+zip", compressible = false, binary = true)

    lazy val `vnd.hp-hpgl`: MediaType =
      new MediaType("application", "vnd.hp-hpgl", compressible = false, binary = true, List("hpgl"))

    lazy val `vnd.gerber`: MediaType =
      new MediaType("application", "vnd.gerber", compressible = false, binary = true)

    lazy val `vnd.ah-barcode`: MediaType =
      new MediaType("application", "vnd.ah-barcode", compressible = false, binary = true)

    lazy val `vnd.sealed.3df`: MediaType =
      new MediaType("application", "vnd.sealed.3df", compressible = false, binary = true)

    lazy val `jose+json`: MediaType =
      new MediaType("application", "jose+json", compressible = true, binary = false)

    lazy val `pics-rules`: MediaType =
      new MediaType("application", "pics-rules", compressible = false, binary = true, List("prf"))

    lazy val `vnd.cab-jscript`: MediaType =
      new MediaType("application", "vnd.cab-jscript", compressible = false, binary = true)

    lazy val `xcap-caps+xml`: MediaType =
      new MediaType("application", "xcap-caps+xml", compressible = true, binary = true, List("xca"))

    lazy val `vnd.afpc.modca-mediummap`: MediaType =
      new MediaType("application", "vnd.afpc.modca-mediummap", compressible = false, binary = true)

    lazy val `vnd.xmpie.dpkg`: MediaType =
      new MediaType("application", "vnd.xmpie.dpkg", compressible = false, binary = true)

    lazy val `vnd.3gpp.srvcc-ext+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.srvcc-ext+xml", compressible = true, binary = true)

    lazy val `vnd.ipld.car`: MediaType =
      new MediaType("application", "vnd.ipld.car", compressible = false, binary = true)

    lazy val `vnd.radisys.msml-audit-stream+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-audit-stream+xml", compressible = true, binary = true)

    lazy val `vnd.iptc.g2.catalogitem+xml`: MediaType =
      new MediaType("application", "vnd.iptc.g2.catalogitem+xml", compressible = true, binary = true)

    lazy val `inkml+xml`: MediaType =
      new MediaType("application", "inkml+xml", compressible = true, binary = true, List("ink", "inkml"))

    lazy val `vnd.epson.quickanime`: MediaType =
      new MediaType("application", "vnd.epson.quickanime", compressible = false, binary = true, List("qam"))

    lazy val `vnd.bbf.usp.error`: MediaType =
      new MediaType("application", "vnd.bbf.usp.error", compressible = false, binary = true)

    lazy val `xliff+xml`: MediaType =
      new MediaType("application", "xliff+xml", compressible = true, binary = true, List("xlf"))

    lazy val `remote-printing`: MediaType =
      new MediaType("application", "remote-printing", compressible = false, binary = true)

    lazy val `vnd.fints`: MediaType =
      new MediaType("application", "vnd.fints", compressible = false, binary = true)

    lazy val `vnd.oipf.mippvcontrolmessage+xml`: MediaType =
      new MediaType("application", "vnd.oipf.mippvcontrolmessage+xml", compressible = true, binary = true)

    lazy val `vnd.nokia.ncd`: MediaType =
      new MediaType("application", "vnd.nokia.ncd", compressible = false, binary = true)

    lazy val `vnd.aplextor.warrp+json`: MediaType =
      new MediaType("application", "vnd.aplextor.warrp+json", compressible = true, binary = false)

    lazy val `mud+json`: MediaType =
      new MediaType("application", "mud+json", compressible = true, binary = false)

    lazy val `vnd.3gpp.bsf+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.bsf+xml", compressible = true, binary = true)

    lazy val `rdf+xml`: MediaType =
      new MediaType("application", "rdf+xml", compressible = true, binary = true, List("rdf", "owl"))

    lazy val `im-iscomposing+xml`: MediaType =
      new MediaType("application", "im-iscomposing+xml", compressible = true, binary = true)

    lazy val `vnd.3gpp.s1ap`: MediaType =
      new MediaType("application", "vnd.3gpp.s1ap", compressible = false, binary = true)

    lazy val `riscos`: MediaType =
      new MediaType("application", "riscos", compressible = false, binary = true)

    lazy val `vnd.enphase.envoy`: MediaType =
      new MediaType("application", "vnd.enphase.envoy", compressible = false, binary = true)

    lazy val `scvp-vp-response`: MediaType =
      new MediaType("application", "scvp-vp-response", compressible = false, binary = true, List("spp"))

    lazy val `vnd.umajin`: MediaType =
      new MediaType("application", "vnd.umajin", compressible = false, binary = true, List("umj"))

    lazy val `x-font-vfont`: MediaType =
      new MediaType("application", "x-font-vfont", compressible = false, binary = true)

    lazy val `vnd.gov.sk.e-form+zip`: MediaType =
      new MediaType("application", "vnd.gov.sk.e-form+zip", compressible = false, binary = true)

    lazy val `vnd.openblox.game+xml`: MediaType =
      new MediaType("application", "vnd.openblox.game+xml", compressible = true, binary = true, List("obgx"))

    lazy val `alto-costmap+json`: MediaType =
      new MediaType("application", "alto-costmap+json", compressible = true, binary = false)

    lazy val `font-sfnt`: MediaType =
      new MediaType("application", "font-sfnt", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.motorola.iprm`: MediaType =
      new MediaType("application", "vnd.motorola.iprm", compressible = false, binary = true)

    lazy val `pkix-attr-cert`: MediaType =
      new MediaType("application", "pkix-attr-cert", compressible = false, binary = true, List("ac"))

    lazy val `vnd.nokia.n-gage.data`: MediaType =
      new MediaType("application", "vnd.nokia.n-gage.data", compressible = false, binary = true, List("ngdat"))

    lazy val `index.vnd`: MediaType =
      new MediaType("application", "index.vnd", compressible = false, binary = true)

    lazy val `trig`: MediaType =
      new MediaType("application", "trig", compressible = false, binary = true, List("trig"))

    lazy val `vnd.oma.push`: MediaType =
      new MediaType("application", "vnd.oma.push", compressible = false, binary = true)

    lazy val `tzif-leap`: MediaType =
      new MediaType("application", "tzif-leap", compressible = false, binary = true)

    lazy val `vnd.3gpp-prose-pc3a+xml`: MediaType =
      new MediaType("application", "vnd.3gpp-prose-pc3a+xml", compressible = true, binary = true)

    lazy val `dskpp+xml`: MediaType =
      new MediaType("application", "dskpp+xml", compressible = true, binary = true)

    lazy val `prs.nprend`: MediaType =
      new MediaType("application", "prs.nprend", compressible = false, binary = true)

    lazy val `vnd.oma.dcd`: MediaType =
      new MediaType("application", "vnd.oma.dcd", compressible = false, binary = true)

    lazy val `vnd.intercon.formnet`: MediaType =
      new MediaType("application", "vnd.intercon.formnet", compressible = false, binary = true, List("xpw", "xpx"))

    lazy val `vnd.ms-powerpoint.template.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-powerpoint.template.macroenabled.12",
        compressible = false,
        binary = true,
        List("potm"),
      )

    lazy val `vnd.businessobjects`: MediaType =
      new MediaType("application", "vnd.businessobjects", compressible = false, binary = true, List("rep"))

    lazy val `vnd.openxmlformats-officedocument.customxmlproperties+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.customxmlproperties+xml",
        compressible = true,
        binary = true,
      )

    lazy val `x-sql`: MediaType =
      new MediaType("application", "x-sql", compressible = false, binary = true, List("sql"))

    lazy val `java-vm`: MediaType =
      new MediaType("application", "java-vm", compressible = false, binary = true, List("class"))

    lazy val `csrattrs`: MediaType =
      new MediaType("application", "csrattrs", compressible = false, binary = true)

    lazy val `vnd.groove-injector`: MediaType =
      new MediaType("application", "vnd.groove-injector", compressible = false, binary = true, List("grv"))

    lazy val `vnd.oma.cab-pcc+xml`: MediaType =
      new MediaType("application", "vnd.oma.cab-pcc+xml", compressible = true, binary = true)

    lazy val `yang`: MediaType =
      new MediaType("application", "yang", compressible = false, binary = true, List("yang"))

    lazy val `cstadata+xml`: MediaType =
      new MediaType("application", "cstadata+xml", compressible = true, binary = true)

    lazy val `vnd.stardivision.math`: MediaType =
      new MediaType("application", "vnd.stardivision.math", compressible = false, binary = true, List("smf"))

    lazy val `sgml`: MediaType =
      new MediaType("application", "sgml", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.presentationml.presprops+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.presprops+xml",
        compressible = true,
        binary = true,
      )

    lazy val `a2l`: MediaType =
      new MediaType("application", "a2l", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.pmi.widget`: MediaType =
      new MediaType("application", "vnd.pmi.widget", compressible = false, binary = true, List("wg"))

    lazy val `mac-binhex40`: MediaType =
      new MediaType("application", "mac-binhex40", compressible = false, binary = true, List("hqx"))

    lazy val `vnd.sealed.net`: MediaType =
      new MediaType("application", "vnd.sealed.net", compressible = false, binary = true)

    lazy val `vnd.ms-pki.seccat`: MediaType =
      new MediaType("application", "vnd.ms-pki.seccat", compressible = false, binary = true, List("cat"))

    lazy val `vnd.hal+json`: MediaType =
      new MediaType("application", "vnd.hal+json", compressible = true, binary = false)

    lazy val `vnd.hdt`: MediaType =
      new MediaType("application", "vnd.hdt", compressible = false, binary = true)

    lazy val `senml+xml`: MediaType =
      new MediaType("application", "senml+xml", compressible = true, binary = true, List("senmlx"))

    lazy val `vnd.fujixerox.art-ex`: MediaType =
      new MediaType("application", "vnd.fujixerox.art-ex", compressible = false, binary = true)

    lazy val `pkix-cert`: MediaType =
      new MediaType("application", "pkix-cert", compressible = false, binary = true, List("cer"))

    lazy val `vnd.syncml.ds.notification`: MediaType =
      new MediaType("application", "vnd.syncml.ds.notification", compressible = false, binary = true)

    lazy val `vnd.previewsystems.box`: MediaType =
      new MediaType("application", "vnd.previewsystems.box", compressible = false, binary = true, List("box"))

    lazy val `vnd.oma.pal+xml`: MediaType =
      new MediaType("application", "vnd.oma.pal+xml", compressible = true, binary = true)

    lazy val `vnd.irepository.package+xml`: MediaType =
      new MediaType("application", "vnd.irepository.package+xml", compressible = true, binary = true, List("irp"))

    lazy val `ibe-pkg-reply+xml`: MediaType =
      new MediaType("application", "ibe-pkg-reply+xml", compressible = true, binary = true)

    lazy val `wita`: MediaType =
      new MediaType("application", "wita", compressible = false, binary = true)

    lazy val `samlassertion+xml`: MediaType =
      new MediaType("application", "samlassertion+xml", compressible = true, binary = true)

    lazy val `x-msmetafile`: MediaType =
      new MediaType(
        "application",
        "x-msmetafile",
        compressible = false,
        binary = true,
        List("wmf", "wmz", "emf", "emz"),
      )

    lazy val `vnd.openxmlformats-officedocument.presentationml.template.main+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.template.main+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.sar`: MediaType =
      new MediaType("application", "vnd.sar", compressible = false, binary = true)

    lazy val `xml-patch+xml`: MediaType =
      new MediaType("application", "xml-patch+xml", compressible = true, binary = false)

    lazy val `vnd.ms-project`: MediaType =
      new MediaType("application", "vnd.ms-project", compressible = false, binary = true, List("mpp", "mpt"))

    lazy val `vnd.picsel`: MediaType =
      new MediaType("application", "vnd.picsel", compressible = false, binary = true, List("efif"))

    lazy val `vnd.mseq`: MediaType =
      new MediaType("application", "vnd.mseq", compressible = false, binary = true, List("mseq"))

    lazy val `vnd.balsamiq.bmpr`: MediaType =
      new MediaType("application", "vnd.balsamiq.bmpr", compressible = false, binary = true)

    lazy val `vnd.3gpp.mcdata-affiliation-command+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcdata-affiliation-command+xml", compressible = true, binary = true)

    lazy val `vnd.oasis.opendocument.image`: MediaType =
      new MediaType("application", "vnd.oasis.opendocument.image", compressible = false, binary = true, List("odi"))

    lazy val `vnd.blink-idb-value-wrapper`: MediaType =
      new MediaType("application", "vnd.blink-idb-value-wrapper", compressible = false, binary = true)

    lazy val `x-x509-ca-ra-cert`: MediaType =
      new MediaType("application", "x-x509-ca-ra-cert", compressible = false, binary = true)

    lazy val `vnd.dvb.ipdcesgaccess`: MediaType =
      new MediaType("application", "vnd.dvb.ipdcesgaccess", compressible = false, binary = true)

    lazy val `vnd.jisp`: MediaType =
      new MediaType("application", "vnd.jisp", compressible = false, binary = true, List("jisp"))

    lazy val `vnd.groove-vcard`: MediaType =
      new MediaType("application", "vnd.groove-vcard", compressible = false, binary = true, List("vcg"))

    lazy val `vnd.rn-realmedia-vbr`: MediaType =
      new MediaType("application", "vnd.rn-realmedia-vbr", compressible = false, binary = true, List("rmvb"))

    lazy val `vnd.globalplatform.card-content-mgt-response`: MediaType =
      new MediaType("application", "vnd.globalplatform.card-content-mgt-response", compressible = false, binary = true)

    lazy val `cea`: MediaType =
      new MediaType("application", "cea", compressible = false, binary = true)

    lazy val `vnd.oma.scidm.messages+xml`: MediaType =
      new MediaType("application", "vnd.oma.scidm.messages+xml", compressible = true, binary = true)

    lazy val `timestamped-data`: MediaType =
      new MediaType("application", "timestamped-data", compressible = false, binary = true, List("tsd"))

    lazy val `vnd.novadigm.edm`: MediaType =
      new MediaType("application", "vnd.novadigm.edm", compressible = false, binary = true, List("edm"))

    lazy val `vnd.ms-windows.printerpairing`: MediaType =
      new MediaType("application", "vnd.ms-windows.printerpairing", compressible = false, binary = true)

    lazy val `x-iso9660-image`: MediaType =
      new MediaType("application", "x-iso9660-image", compressible = false, binary = true, List("iso"))

    lazy val `vnd.informedcontrol.rms+xml`: MediaType =
      new MediaType("application", "vnd.informedcontrol.rms+xml", compressible = true, binary = true)

    lazy val `dns-message`: MediaType =
      new MediaType("application", "dns-message", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.nitf`: MediaType =
      new MediaType("application", "vnd.nitf", compressible = false, binary = true, List("ntf", "nitf"))

    lazy val `vnd.wap.slc`: MediaType =
      new MediaType("application", "vnd.wap.slc", compressible = false, binary = true)

    lazy val `vnd.collabio.xodocuments.presentation`: MediaType =
      new MediaType("application", "vnd.collabio.xodocuments.presentation", compressible = false, binary = true)

    lazy val `vnd.route66.link66+xml`: MediaType =
      new MediaType("application", "vnd.route66.link66+xml", compressible = true, binary = true, List("link66"))

    lazy val `vnd.fluxtime.clip`: MediaType =
      new MediaType("application", "vnd.fluxtime.clip", compressible = false, binary = true, List("ftc"))

    lazy val `vnd.bbf.usp.msg`: MediaType =
      new MediaType("application", "vnd.bbf.usp.msg", compressible = false, binary = true)

    lazy val `vnd.dvb.notif-ia-msglist+xml`: MediaType =
      new MediaType("application", "vnd.dvb.notif-ia-msglist+xml", compressible = true, binary = true)

    lazy val `vnd.marlin.drm.mdcf`: MediaType =
      new MediaType("application", "vnd.marlin.drm.mdcf", compressible = false, binary = true)

    lazy val `vnd.wv.csp+wbxml`: MediaType =
      new MediaType("application", "vnd.wv.csp+wbxml", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.dreamfactory`: MediaType =
      new MediaType("application", "vnd.dreamfactory", compressible = false, binary = true, List("dfac"))

    lazy val `vnd.contact.cmsg`: MediaType =
      new MediaType("application", "vnd.contact.cmsg", compressible = false, binary = true, List("cdbcmsg"))

    lazy val `prs.alvestrand.titrax-sheet`: MediaType =
      new MediaType("application", "prs.alvestrand.titrax-sheet", compressible = false, binary = true)

    lazy val `vnd.3m.post-it-notes`: MediaType =
      new MediaType("application", "vnd.3m.post-it-notes", compressible = false, binary = true, List("pwn"))

    lazy val `vnd.collabio.xodocuments.document-template`: MediaType =
      new MediaType("application", "vnd.collabio.xodocuments.document-template", compressible = false, binary = true)

    lazy val `pem-certificate-chain`: MediaType =
      new MediaType("application", "pem-certificate-chain", compressible = false, binary = true)

    lazy val `x-bcpio`: MediaType =
      new MediaType("application", "x-bcpio", compressible = false, binary = true, List("bcpio"))

    lazy val `vnd.ibm.secure-container`: MediaType =
      new MediaType("application", "vnd.ibm.secure-container", compressible = false, binary = true, List("sc"))

    lazy val `vnd.microsoft.windows.thumbnail-cache`: MediaType =
      new MediaType("application", "vnd.microsoft.windows.thumbnail-cache", compressible = false, binary = true)

    lazy val `x-gzip`: MediaType =
      new MediaType("application", "x-gzip", compressible = false, binary = true)

    lazy val `jf2feed+json`: MediaType =
      new MediaType("application", "jf2feed+json", compressible = true, binary = false)

    lazy val `vnd.3gpp.mcptt-service-config+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcptt-service-config+xml", compressible = true, binary = true)

    lazy val `vnd.iptc.g2.planningitem+xml`: MediaType =
      new MediaType("application", "vnd.iptc.g2.planningitem+xml", compressible = true, binary = true)

    lazy val `conference-info+xml`: MediaType =
      new MediaType("application", "conference-info+xml", compressible = true, binary = true)

    lazy val `x-dtbncx+xml`: MediaType =
      new MediaType("application", "x-dtbncx+xml", compressible = true, binary = true, List("ncx"))

    lazy val `x-web-app-manifest+json`: MediaType =
      new MediaType("application", "x-web-app-manifest+json", compressible = true, binary = false, List("webapp"))

    lazy val `p21+zip`: MediaType =
      new MediaType("application", "p21+zip", compressible = false, binary = true)

    lazy val `vnd.ntt-local.file-transfer`: MediaType =
      new MediaType("application", "vnd.ntt-local.file-transfer", compressible = false, binary = true)

    lazy val `vnd.ms-excel`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-excel",
        compressible = false,
        binary = true,
        List("xls", "xlm", "xla", "xlc", "xlt", "xlw"),
      )

    lazy val `vnd.symbian.install`: MediaType =
      new MediaType("application", "vnd.symbian.install", compressible = false, binary = true, List("sis", "sisx"))

    lazy val `x-netcdf`: MediaType =
      new MediaType("application", "x-netcdf", compressible = false, binary = true, List("nc", "cdf"))

    lazy val `vnd.grafeq`: MediaType =
      new MediaType("application", "vnd.grafeq", compressible = false, binary = true, List("gqf", "gqs"))

    lazy val `atomsvc+xml`: MediaType =
      new MediaType("application", "atomsvc+xml", compressible = true, binary = true, List("atomsvc"))

    lazy val `mf4`: MediaType =
      new MediaType("application", "mf4", compressible = false, binary = true)

    lazy val `vnd.sema`: MediaType =
      new MediaType("application", "vnd.sema", compressible = false, binary = true, List("sema"))

    lazy val `vnd.minisoft-hp3000-save`: MediaType =
      new MediaType("application", "vnd.minisoft-hp3000-save", compressible = false, binary = true)

    lazy val `vnd.recordare.musicxml+xml`: MediaType =
      new MediaType("application", "vnd.recordare.musicxml+xml", compressible = true, binary = true, List("musicxml"))

    lazy val `vnd.3gpp.mcvideo-user-profile+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcvideo-user-profile+xml", compressible = true, binary = true)

    lazy val `xhtml-voice+xml`: MediaType =
      new MediaType("application", "xhtml-voice+xml", compressible = true, binary = true)

    lazy val `vnd.iptc.g2.knowledgeitem+xml`: MediaType =
      new MediaType("application", "vnd.iptc.g2.knowledgeitem+xml", compressible = true, binary = true)

    lazy val `taxii+json`: MediaType =
      new MediaType("application", "taxii+json", compressible = true, binary = false)

    lazy val `vnd.accpac.simply.imp`: MediaType =
      new MediaType("application", "vnd.accpac.simply.imp", compressible = false, binary = true, List("imp"))

    lazy val `vnd.ms-outlook`: MediaType =
      new MediaType("application", "vnd.ms-outlook", compressible = false, binary = true, List("msg"))

    lazy val `x-cdlink`: MediaType =
      new MediaType("application", "x-cdlink", compressible = false, binary = true, List("vcd"))

    lazy val `vnd.software602.filler.form-xml-zip`: MediaType =
      new MediaType("application", "vnd.software602.filler.form-xml-zip", compressible = false, binary = true)

    lazy val `vnd.ecdis-update`: MediaType =
      new MediaType("application", "vnd.ecdis-update", compressible = false, binary = true)

    lazy val `vnd.wolfram.player`: MediaType =
      new MediaType("application", "vnd.wolfram.player", compressible = false, binary = true, List("nbp"))

    lazy val `mbms-register+xml`: MediaType =
      new MediaType("application", "mbms-register+xml", compressible = true, binary = true)

    lazy val `vnd.radisys.moml+xml`: MediaType =
      new MediaType("application", "vnd.radisys.moml+xml", compressible = true, binary = true)

    lazy val `vnd.3gpp.interworking-data`: MediaType =
      new MediaType("application", "vnd.3gpp.interworking-data", compressible = false, binary = true)

    lazy val `vnd.stardivision.calc`: MediaType =
      new MediaType("application", "vnd.stardivision.calc", compressible = false, binary = true, List("sdc"))

    lazy val `x-font-speedo`: MediaType =
      new MediaType("application", "x-font-speedo", compressible = false, binary = true)

    lazy val `vnd.proteus.magazine`: MediaType =
      new MediaType("application", "vnd.proteus.magazine", compressible = false, binary = true, List("mgz"))

    lazy val `sbml+xml`: MediaType =
      new MediaType("application", "sbml+xml", compressible = true, binary = true, List("sbml"))

    lazy val `vnd.amazon.mobi8-ebook`: MediaType =
      new MediaType("application", "vnd.amazon.mobi8-ebook", compressible = false, binary = true)

    lazy val `vnd.ms-3mfdocument`: MediaType =
      new MediaType("application", "vnd.ms-3mfdocument", compressible = false, binary = true)

    lazy val `vnd.dece.data`: MediaType =
      new MediaType(
        "application",
        "vnd.dece.data",
        compressible = false,
        binary = true,
        List("uvf", "uvvf", "uvd", "uvvd"),
      )

    lazy val `vnd.oma.bcast.imd+xml`: MediaType =
      new MediaType("application", "vnd.oma.bcast.imd+xml", compressible = true, binary = true)

    lazy val `vnd.doremir.scorecloud-binary-document`: MediaType =
      new MediaType("application", "vnd.doremir.scorecloud-binary-document", compressible = false, binary = true)

    lazy val `x-hdf`: MediaType =
      new MediaType("application", "x-hdf", compressible = false, binary = true, List("hdf"))

    lazy val `vnd.ms-excel.sheet.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-excel.sheet.macroenabled.12",
        compressible = false,
        binary = true,
        List("xlsm"),
      )

    lazy val `dvcs`: MediaType =
      new MediaType("application", "dvcs", compressible = false, binary = true)

    lazy val `vnd.vel+json`: MediaType =
      new MediaType("application", "vnd.vel+json", compressible = true, binary = false)

    lazy val `vnd.mobius.mqy`: MediaType =
      new MediaType("application", "vnd.mobius.mqy", compressible = false, binary = true, List("mqy"))

    lazy val `vnd.3gpp.vae-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.vae-info+xml", compressible = true, binary = true)

    lazy val `vnd.syncml.dm+wbxml`: MediaType =
      new MediaType("application", "vnd.syncml.dm+wbxml", compressible = false, binary = true, List("bdm"))

    lazy val `vnd.etsi.asic-e+zip`: MediaType =
      new MediaType("application", "vnd.etsi.asic-e+zip", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.presentationml.commentauthors+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.commentauthors+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.ms-printschematicket+xml`: MediaType =
      new MediaType("application", "vnd.ms-printschematicket+xml", compressible = true, binary = true)

    lazy val `aif+json`: MediaType =
      new MediaType("application", "aif+json", compressible = true, binary = false)

    lazy val `vnd.isac.fcs`: MediaType =
      new MediaType("application", "vnd.isac.fcs", compressible = false, binary = true, List("fcs"))

    lazy val `vnd.eprints.data+xml`: MediaType =
      new MediaType("application", "vnd.eprints.data+xml", compressible = true, binary = true)

    lazy val `mp21`: MediaType =
      new MediaType("application", "mp21", compressible = false, binary = true, List("m21", "mp21"))

    lazy val `vnd.openxmlformats-officedocument.presentationml.comments+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.comments+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.openofficeorg.extension`: MediaType =
      new MediaType("application", "vnd.openofficeorg.extension", compressible = false, binary = true, List("oxt"))

    lazy val `vnd.syncml.dmtnds+xml`: MediaType =
      new MediaType("application", "vnd.syncml.dmtnds+xml", compressible = true, binary = true)

    lazy val `x-msdos-program`: MediaType =
      new MediaType("application", "x-msdos-program", compressible = false, binary = true, List("exe"))

    lazy val `vnd.micrografx.flo`: MediaType =
      new MediaType("application", "vnd.micrografx.flo", compressible = false, binary = true, List("flo"))

    lazy val `vnd.bekitzur-stech+json`: MediaType =
      new MediaType("application", "vnd.bekitzur-stech+json", compressible = true, binary = false)

    lazy val `dns`: MediaType =
      new MediaType("application", "dns", compressible = false, binary = true)

    lazy val `x-bittorrent`: MediaType =
      new MediaType("application", "x-bittorrent", compressible = false, binary = true, List("torrent"))

    lazy val `vnd.oipf.contentaccessdownload+xml`: MediaType =
      new MediaType("application", "vnd.oipf.contentaccessdownload+xml", compressible = true, binary = true)

    lazy val `edifact`: MediaType =
      new MediaType("application", "edifact", compressible = false, binary = true)

    lazy val `vnd.cups-pdf`: MediaType =
      new MediaType("application", "vnd.cups-pdf", compressible = false, binary = true)

    lazy val `vnd.oxli.countgraph`: MediaType =
      new MediaType("application", "vnd.oxli.countgraph", compressible = false, binary = true)

    lazy val `vnd.espass-espass+zip`: MediaType =
      new MediaType("application", "vnd.espass-espass+zip", compressible = false, binary = true)

    lazy val `thraud+xml`: MediaType =
      new MediaType("application", "thraud+xml", compressible = true, binary = true, List("tfi"))

    lazy val `alto-networkmap+json`: MediaType =
      new MediaType("application", "alto-networkmap+json", compressible = true, binary = false)

    lazy val `sensml-exi`: MediaType =
      new MediaType("application", "sensml-exi", compressible = false, binary = true)

    lazy val `wsdl+xml`: MediaType =
      new MediaType("application", "wsdl+xml", compressible = true, binary = true, List("wsdl"))

    lazy val `nlsml+xml`: MediaType =
      new MediaType("application", "nlsml+xml", compressible = true, binary = true)

    lazy val `tamp-status-query`: MediaType =
      new MediaType("application", "tamp-status-query", compressible = false, binary = true)

    lazy val `vnd.sealedmedia.softseal.pdf`: MediaType =
      new MediaType("application", "vnd.sealedmedia.softseal.pdf", compressible = false, binary = true)

    lazy val `vnd.dvb.esgcontainer`: MediaType =
      new MediaType("application", "vnd.dvb.esgcontainer", compressible = false, binary = true)

    lazy val `vnd.oasis.opendocument.chart`: MediaType =
      new MediaType("application", "vnd.oasis.opendocument.chart", compressible = false, binary = true, List("odc"))

    lazy val `vnd.osgi.bundle`: MediaType =
      new MediaType("application", "vnd.osgi.bundle", compressible = false, binary = true)

    lazy val `mathml+xml`: MediaType =
      new MediaType("application", "mathml+xml", compressible = true, binary = true, List("mathml"))

    lazy val `oda`: MediaType =
      new MediaType("application", "oda", compressible = false, binary = true, List("oda"))

    lazy val `vnd.oma.poc.optimized-progress-report+xml`: MediaType =
      new MediaType("application", "vnd.oma.poc.optimized-progress-report+xml", compressible = true, binary = true)

    lazy val `scvp-cv-request`: MediaType =
      new MediaType("application", "scvp-cv-request", compressible = false, binary = true, List("scq"))

    lazy val `vnd.maxar.archive.3tz+zip`: MediaType =
      new MediaType("application", "vnd.maxar.archive.3tz+zip", compressible = false, binary = true)

    lazy val `vnd.airzip.filesecure.azf`: MediaType =
      new MediaType("application", "vnd.airzip.filesecure.azf", compressible = false, binary = true, List("azf"))

    lazy val `vnd.oasis.opendocument.database`: MediaType =
      new MediaType("application", "vnd.oasis.opendocument.database", compressible = false, binary = true, List("odb"))

    lazy val `vnd.powerbuilder75`: MediaType =
      new MediaType("application", "vnd.powerbuilder75", compressible = false, binary = true)

    lazy val `ssml+xml`: MediaType =
      new MediaType("application", "ssml+xml", compressible = true, binary = true, List("ssml"))

    lazy val `vnd.openxmlformats-officedocument.drawingml.chartshapes+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.drawingml.chartshapes+xml",
        compressible = true,
        binary = true,
      )

    lazy val `dots+cbor`: MediaType =
      new MediaType("application", "dots+cbor", compressible = false, binary = true)

    lazy val `alto-endpointpropparams+json`: MediaType =
      new MediaType("application", "alto-endpointpropparams+json", compressible = true, binary = false)

    lazy val `x-tads`: MediaType =
      new MediaType("application", "x-tads", compressible = false, binary = true, List("gam"))

    lazy val `rdap+json`: MediaType =
      new MediaType("application", "rdap+json", compressible = true, binary = false)

    lazy val `metalink4+xml`: MediaType =
      new MediaType("application", "metalink4+xml", compressible = true, binary = true, List("meta4"))

    lazy val `vnd.geocube+xml`: MediaType =
      new MediaType("application", "vnd.geocube+xml", compressible = true, binary = true)

    lazy val `3gpphalforms+json`: MediaType =
      new MediaType("application", "3gpphalforms+json", compressible = true, binary = false)

    lazy val `vnd.coffeescript`: MediaType =
      new MediaType("application", "vnd.coffeescript", compressible = false, binary = true)

    lazy val `vnd.stardivision.writer-global`: MediaType =
      new MediaType("application", "vnd.stardivision.writer-global", compressible = false, binary = true, List("sgl"))

    lazy val `vnd.openxmlformats-officedocument.wordprocessingml.comments+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.wordprocessingml.comments+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.geo+json`: MediaType =
      new MediaType("application", "vnd.geo+json", compressible = true, binary = false)

    lazy val `vnd.sun.xml.calc.template`: MediaType =
      new MediaType("application", "vnd.sun.xml.calc.template", compressible = false, binary = true, List("stc"))

    lazy val `x-msdownload`: MediaType =
      new MediaType(
        "application",
        "x-msdownload",
        compressible = false,
        binary = true,
        List("exe", "dll", "com", "bat", "msi"),
      )

    lazy val `vnd.pocketlearn`: MediaType =
      new MediaType("application", "vnd.pocketlearn", compressible = false, binary = true, List("plf"))

    lazy val `x-lua-bytecode`: MediaType =
      new MediaType("application", "x-lua-bytecode", compressible = false, binary = true, List("luac"))

    lazy val `vnd.gpxsee.map+xml`: MediaType =
      new MediaType("application", "vnd.gpxsee.map+xml", compressible = true, binary = true)

    lazy val `vnd.geoplan`: MediaType =
      new MediaType("application", "vnd.geoplan", compressible = false, binary = true, List("g2w"))

    lazy val `resource-lists-diff+xml`: MediaType =
      new MediaType("application", "resource-lists-diff+xml", compressible = true, binary = true, List("rld"))

    lazy val `vnd.qualcomm.brew-app-res`: MediaType =
      new MediaType("application", "vnd.qualcomm.brew-app-res", compressible = false, binary = true)

    lazy val `vnd.dvb.iptv.alfec-enhancement`: MediaType =
      new MediaType("application", "vnd.dvb.iptv.alfec-enhancement", compressible = false, binary = true)

    lazy val `vnd.groove-help`: MediaType =
      new MediaType("application", "vnd.groove-help", compressible = false, binary = true, List("ghf"))

    lazy val `vnd.iso11783-10+zip`: MediaType =
      new MediaType("application", "vnd.iso11783-10+zip", compressible = false, binary = true)

    lazy val `vnd.3gpp.sms`: MediaType =
      new MediaType("application", "vnd.3gpp.sms", compressible = false, binary = true)

    lazy val `vnd.fsc.weblaunch`: MediaType =
      new MediaType("application", "vnd.fsc.weblaunch", compressible = false, binary = true, List("fsc"))

    lazy val `vnd.quarantainenet`: MediaType =
      new MediaType("application", "vnd.quarantainenet", compressible = false, binary = true)

    lazy val `vnd.gentoo.ebuild`: MediaType =
      new MediaType("application", "vnd.gentoo.ebuild", compressible = false, binary = true)

    lazy val `vnd.dvb.ipdcroaming`: MediaType =
      new MediaType("application", "vnd.dvb.ipdcroaming", compressible = false, binary = true)

    lazy val `vnd.byu.uapi+json`: MediaType =
      new MediaType("application", "vnd.byu.uapi+json", compressible = true, binary = false)

    lazy val `vnd.oma.dcdc`: MediaType =
      new MediaType("application", "vnd.oma.dcdc", compressible = false, binary = true)

    lazy val `express`: MediaType =
      new MediaType("application", "express", compressible = false, binary = true, List("exp"))

    lazy val `vnd.ms-cab-compressed`: MediaType =
      new MediaType("application", "vnd.ms-cab-compressed", compressible = false, binary = true, List("cab"))

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.comments+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.comments+xml",
        compressible = true,
        binary = true,
      )

    lazy val `link-format`: MediaType =
      new MediaType("application", "link-format", compressible = false, binary = true)

    lazy val `vnd.3gpp.seal-location-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.seal-location-info+xml", compressible = true, binary = true)

    lazy val `vnd.pg.format`: MediaType =
      new MediaType("application", "vnd.pg.format", compressible = false, binary = true, List("str"))

    lazy val `vnd.3gpp.pic-bw-large`: MediaType =
      new MediaType("application", "vnd.3gpp.pic-bw-large", compressible = false, binary = true, List("plb"))

    lazy val `vnd.etsi.mcid+xml`: MediaType =
      new MediaType("application", "vnd.etsi.mcid+xml", compressible = true, binary = true)

    lazy val `vnd.kidspiration`: MediaType =
      new MediaType("application", "vnd.kidspiration", compressible = false, binary = true, List("kia"))

    lazy val `x-research-info-systems`: MediaType =
      new MediaType("application", "x-research-info-systems", compressible = false, binary = true, List("ris"))

    lazy val `vnd.meridian-slingshot`: MediaType =
      new MediaType("application", "vnd.meridian-slingshot", compressible = false, binary = true)

    lazy val `vnd.restful+json`: MediaType =
      new MediaType("application", "vnd.restful+json", compressible = true, binary = false)

    lazy val `fdf`: MediaType =
      new MediaType("application", "fdf", compressible = false, binary = true, List("fdf"))

    lazy val `vnd.gentoo.pkgmetadata+xml`: MediaType =
      new MediaType("application", "vnd.gentoo.pkgmetadata+xml", compressible = true, binary = true)

    lazy val `vnd.accpac.simply.aso`: MediaType =
      new MediaType("application", "vnd.accpac.simply.aso", compressible = false, binary = true, List("aso"))

    lazy val `vnd.immervision-ivu`: MediaType =
      new MediaType("application", "vnd.immervision-ivu", compressible = false, binary = true, List("ivu"))

    lazy val `vnd.crick.clicker.palette`: MediaType =
      new MediaType("application", "vnd.crick.clicker.palette", compressible = false, binary = true, List("clkp"))

    lazy val `atsc-rdt+json`: MediaType =
      new MediaType("application", "atsc-rdt+json", compressible = true, binary = false)

    lazy val `vnd.astraea-software.iota`: MediaType =
      new MediaType("application", "vnd.astraea-software.iota", compressible = false, binary = true, List("iota"))

    lazy val `vnd.motorola.flexsuite.gotap`: MediaType =
      new MediaType("application", "vnd.motorola.flexsuite.gotap", compressible = false, binary = true)

    lazy val `vnd.dpgraph`: MediaType =
      new MediaType("application", "vnd.dpgraph", compressible = false, binary = true, List("dpg"))

    lazy val `vnd.genomatix.tuxedo`: MediaType =
      new MediaType("application", "vnd.genomatix.tuxedo", compressible = false, binary = true, List("txd"))

    lazy val `vnd.3gpp.mcdata-ue-config+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcdata-ue-config+xml", compressible = true, binary = true)

    lazy val `vnd.kde.kspread`: MediaType =
      new MediaType("application", "vnd.kde.kspread", compressible = false, binary = true, List("ksp"))

    lazy val `x-ns-proxy-autoconfig`: MediaType =
      new MediaType("application", "x-ns-proxy-autoconfig", compressible = true, binary = true, List("pac"))

    lazy val `ibe-pp-data`: MediaType =
      new MediaType("application", "ibe-pp-data", compressible = false, binary = true)

    lazy val `vnd.3gpp.mcdata-regroup+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.mcdata-regroup+xml", compressible = true, binary = true)

    lazy val `emergencycalldata.comment+xml`: MediaType =
      new MediaType("application", "emergencycalldata.comment+xml", compressible = true, binary = true)

    lazy val `vnd.apple.keynote`: MediaType =
      new MediaType("application", "vnd.apple.keynote", compressible = false, binary = true, List("key"))

    lazy val `timestamp-query`: MediaType =
      new MediaType("application", "timestamp-query", compressible = false, binary = true)

    lazy val `vnd.las`: MediaType =
      new MediaType("application", "vnd.las", compressible = false, binary = true)

    lazy val `vnd.oipf.dae.svg+xml`: MediaType =
      new MediaType("application", "vnd.oipf.dae.svg+xml", compressible = true, binary = true)

    lazy val `vnd.mitsubishi.misty-guard.trustweb`: MediaType =
      new MediaType("application", "vnd.mitsubishi.misty-guard.trustweb", compressible = false, binary = true)

    lazy val `vnd.sun.xml.draw`: MediaType =
      new MediaType("application", "vnd.sun.xml.draw", compressible = false, binary = true, List("sxd"))

    lazy val `x-7z-compressed`: MediaType =
      new MediaType("application", "x-7z-compressed", compressible = false, binary = true, List("7z"))

    lazy val `vnd.openxmlformats-officedocument.presentationml.presentation.main+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.presentation.main+xml",
        compressible = true,
        binary = true,
      )

    lazy val `x-apple-diskimage`: MediaType =
      new MediaType("application", "x-apple-diskimage", compressible = false, binary = true, List("dmg"))

    lazy val `vnd.orange.indata`: MediaType =
      new MediaType("application", "vnd.orange.indata", compressible = false, binary = true)

    lazy val `cu-seeme`: MediaType =
      new MediaType("application", "cu-seeme", compressible = false, binary = true, List("cu"))

    lazy val `x-x509-next-ca-cert`: MediaType =
      new MediaType("application", "x-x509-next-ca-cert", compressible = false, binary = true)

    lazy val `x-virtualbox-vhd`: MediaType =
      new MediaType("application", "x-virtualbox-vhd", compressible = true, binary = true, List("vhd"))

    lazy val `media-policy-dataset+xml`: MediaType =
      new MediaType("application", "media-policy-dataset+xml", compressible = true, binary = true, List("mpf"))

    lazy val `vnd.ocf+cbor`: MediaType =
      new MediaType("application", "vnd.ocf+cbor", compressible = false, binary = true)

    lazy val `vnd.japannet-verification-wakeup`: MediaType =
      new MediaType("application", "vnd.japannet-verification-wakeup", compressible = false, binary = true)

    lazy val `vnd.spotfire.dxp`: MediaType =
      new MediaType("application", "vnd.spotfire.dxp", compressible = false, binary = true, List("dxp"))

    lazy val `mpeg4-generic`: MediaType =
      new MediaType("application", "mpeg4-generic", compressible = false, binary = true)

    lazy val `vemmi`: MediaType =
      new MediaType("application", "vemmi", compressible = false, binary = true)

    lazy val `x-tex-tfm`: MediaType =
      new MediaType("application", "x-tex-tfm", compressible = false, binary = true, List("tfm"))

    lazy val `vnd.ms-powerpoint`: MediaType =
      new MediaType("application", "vnd.ms-powerpoint", compressible = false, binary = true, List("ppt", "pps", "pot"))

    lazy val `vnd.hhe.lesson-player`: MediaType =
      new MediaType("application", "vnd.hhe.lesson-player", compressible = false, binary = true, List("les"))

    lazy val `hjson`: MediaType =
      new MediaType("application", "hjson", compressible = false, binary = false, List("hjson"))

    lazy val `vnd.msign`: MediaType =
      new MediaType("application", "vnd.msign", compressible = false, binary = true)

    lazy val `vnd.openxmlformats-officedocument.presentationml.tablestyles+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.presentationml.tablestyles+xml",
        compressible = true,
        binary = true,
      )

    lazy val `news-groupinfo`: MediaType =
      new MediaType("application", "news-groupinfo", compressible = false, binary = true)

    lazy val `simplesymbolcontainer`: MediaType =
      new MediaType("application", "simplesymbolcontainer", compressible = false, binary = true)

    lazy val `msword`: MediaType =
      new MediaType("application", "msword", compressible = false, binary = true, List("doc", "dot"))

    lazy val `x-gramps-xml`: MediaType =
      new MediaType("application", "x-gramps-xml", compressible = false, binary = true, List("gramps"))

    lazy val `vnd.hp-pclxl`: MediaType =
      new MediaType("application", "vnd.hp-pclxl", compressible = false, binary = true, List("pclxl"))

    lazy val `emergencycalldata.subscriberinfo+xml`: MediaType =
      new MediaType("application", "emergencycalldata.subscriberinfo+xml", compressible = true, binary = true)

    lazy val `vnd.seemail`: MediaType =
      new MediaType("application", "vnd.seemail", compressible = false, binary = true, List("see"))

    lazy val `dii`: MediaType =
      new MediaType("application", "dii", compressible = false, binary = true)

    lazy val `cwl`: MediaType =
      new MediaType("application", "cwl", compressible = false, binary = true, List("cwl"))

    lazy val `vnd.mif`: MediaType =
      new MediaType("application", "vnd.mif", compressible = false, binary = true, List("mif"))

    lazy val `x-t3vm-image`: MediaType =
      new MediaType("application", "x-t3vm-image", compressible = false, binary = true, List("t3"))

    lazy val `font-woff`: MediaType =
      new MediaType("application", "font-woff", compressible = false, binary = true)

    lazy val `pdf`: MediaType =
      new MediaType("application", "pdf", compressible = false, binary = true, List("pdf"))

    lazy val `vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml",
        compressible = true,
        binary = true,
      )

    lazy val `vnd.chipnuts.karaoke-mmd`: MediaType =
      new MediaType("application", "vnd.chipnuts.karaoke-mmd", compressible = false, binary = true, List("mmd"))

    lazy val `vnd.ims.lis.v2.result+json`: MediaType =
      new MediaType("application", "vnd.ims.lis.v2.result+json", compressible = true, binary = false)

    lazy val `pkcs7-mime`: MediaType =
      new MediaType("application", "pkcs7-mime", compressible = false, binary = true, List("p7m", "p7c"))

    lazy val `xv+xml`: MediaType =
      new MediaType("application", "xv+xml", compressible = true, binary = true, List("mxml", "xhvml", "xvml", "xvm"))

    lazy val `x-ms-wmd`: MediaType =
      new MediaType("application", "x-ms-wmd", compressible = false, binary = true, List("wmd"))

    lazy val `vnd.marlin.drm.conftoken+xml`: MediaType =
      new MediaType("application", "vnd.marlin.drm.conftoken+xml", compressible = true, binary = true)

    lazy val `vnd.oracle.resource+json`: MediaType =
      new MediaType("application", "vnd.oracle.resource+json", compressible = true, binary = false)

    lazy val `cose-key-set`: MediaType =
      new MediaType("application", "cose-key-set", compressible = false, binary = true)

    lazy val `vnd.3gpp.access-transfer-events+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.access-transfer-events+xml", compressible = true, binary = true)

    lazy val `vnd.ms-excel.template.macroenabled.12`: MediaType =
      new MediaType(
        "application",
        "vnd.ms-excel.template.macroenabled.12",
        compressible = false,
        binary = true,
        List("xltm"),
      )

    lazy val `pidf+xml`: MediaType =
      new MediaType("application", "pidf+xml", compressible = true, binary = true)

    lazy val `vnd.geogebra.slides`: MediaType =
      new MediaType("application", "vnd.geogebra.slides", compressible = false, binary = true)

    lazy val `emergencycalldata.legacyesn+json`: MediaType =
      new MediaType("application", "emergencycalldata.legacyesn+json", compressible = true, binary = false)

    lazy val `relax-ng-compact-syntax`: MediaType =
      new MediaType("application", "relax-ng-compact-syntax", compressible = false, binary = true, List("rnc"))

    lazy val `vnd.insors.igm`: MediaType =
      new MediaType("application", "vnd.insors.igm", compressible = false, binary = true, List("igm"))

    lazy val `vnd.fujixerox.ddd`: MediaType =
      new MediaType("application", "vnd.fujixerox.ddd", compressible = false, binary = true, List("ddd"))

    lazy val `vnd.google-apps.document`: MediaType =
      new MediaType("application", "vnd.google-apps.document", compressible = false, binary = true, List("gdoc"))

    lazy val `vnd.xara`: MediaType =
      new MediaType("application", "vnd.xara", compressible = false, binary = true, List("xar"))

    lazy val `vnd.mapbox-vector-tile`: MediaType =
      new MediaType("application", "vnd.mapbox-vector-tile", compressible = false, binary = true, List("mvt"))

    lazy val `vnd.tml`: MediaType =
      new MediaType("application", "vnd.tml", compressible = false, binary = true)

    lazy val `merge-patch+json`: MediaType =
      new MediaType("application", "merge-patch+json", compressible = true, binary = false)

    lazy val `vnd.syncml.dm+xml`: MediaType =
      new MediaType("application", "vnd.syncml.dm+xml", compressible = true, binary = true, List("xdm"))

    lazy val `x-mie`: MediaType =
      new MediaType("application", "x-mie", compressible = false, binary = true, List("mie"))

    lazy val `vnd.openxmlformats-package.relationships+xml`: MediaType =
      new MediaType("application", "vnd.openxmlformats-package.relationships+xml", compressible = true, binary = true)

    lazy val `vnd.ms-package.obfuscated-opentype`: MediaType =
      new MediaType("application", "vnd.ms-package.obfuscated-opentype", compressible = false, binary = true)

    lazy val `alto-error+json`: MediaType =
      new MediaType("application", "alto-error+json", compressible = true, binary = false)

    lazy val `vnd.oma.group-usage-list+xml`: MediaType =
      new MediaType("application", "vnd.oma.group-usage-list+xml", compressible = true, binary = true)

    lazy val `cea-2018+xml`: MediaType =
      new MediaType("application", "cea-2018+xml", compressible = true, binary = true)

    lazy val `vnd.yamaha.openscoreformat.osfpvg+xml`: MediaType =
      new MediaType(
        "application",
        "vnd.yamaha.openscoreformat.osfpvg+xml",
        compressible = true,
        binary = true,
        List("osfpvg"),
      )

    lazy val `vnd.radisys.msml-dialog-speech+xml`: MediaType =
      new MediaType("application", "vnd.radisys.msml-dialog-speech+xml", compressible = true, binary = true)

    lazy val `vnd.3gpp.srvcc-info+xml`: MediaType =
      new MediaType("application", "vnd.3gpp.srvcc-info+xml", compressible = true, binary = true)

    lazy val `vnd.japannet-jpnstore-wakeup`: MediaType =
      new MediaType("application", "vnd.japannet-jpnstore-wakeup", compressible = false, binary = true)

    lazy val `alto-costmapfilter+json`: MediaType =
      new MediaType("application", "alto-costmapfilter+json", compressible = true, binary = false)

    lazy val `vnd.ims.imsccv1p1`: MediaType =
      new MediaType("application", "vnd.ims.imsccv1p1", compressible = false, binary = true)

    lazy val `vnd.ms-windows.wsd.oob`: MediaType =
      new MediaType("application", "vnd.ms-windows.wsd.oob", compressible = false, binary = true)

    lazy val `swid+xml`: MediaType =
      new MediaType("application", "swid+xml", compressible = true, binary = true, List("swidtag"))

    lazy val `rpki-checklist`: MediaType =
      new MediaType("application", "rpki-checklist", compressible = false, binary = true)

    lazy val `vnd.dtg.local.html`: MediaType =
      new MediaType("application", "vnd.dtg.local.html", compressible = false, binary = true)

    lazy val `yin+xml`: MediaType =
      new MediaType("application", "yin+xml", compressible = true, binary = true, List("yin"))

    lazy val all: List[MediaType] = List(
      `x-bdoc`,
      `vnd.3gpp.mcptt-location-info+xml`,
      `vnd.ctct.ws+xml`,
      `vnd.trueapp`,
      `vnd.geogebra.tool`,
      `vnd.ms-works`,
      `vnd.hc+json`,
      `vnd.ims.lti.v2.toolconsumerprofile+json`,
      `vnd.3gpp.pfcp`,
      `wordperfect5.1`,
      `ace+cbor`,
      `vnd.kodak-descriptor`,
      `tetra_isi`,
      `vnd.collabio.xodocuments.presentation-template`,
      `vnd.oasis.opendocument.text`,
      `vnd.fujitsu.oasys2`,
      `commonground`,
      `vnd.evolv.ecig.profile`,
      `vnd.gov.sk.xmldatacontainer+xml`,
      `simple-filter+xml`,
      `vnd.chess-pgn`,
      `vnd.oma.lwm2m+tlv`,
      `vnd.gov.sk.e-form+xml`,
      `jwk-set+json`,
      `index.response`,
      `vnd.novadigm.edx`,
      `mathml-presentation+xml`,
      `urc-targetdesc+xml`,
      `vnd.nokia.conml+xml`,
      `vnd.anser-web-funds-transfer-initiation`,
      `vnd.dvb.service`,
      `x-compress`,
      `vnd.ms-wmdrm.meter-resp`,
      `vnd.etsi.pstn+xml`,
      `route-usd+xml`,
      `x-msmoney`,
      `vnd.tcpdump.pcap`,
      `vnd.smintio.portals.archive`,
      `vnd.medcalcdata`,
      `cbor-seq`,
      `vnd.3gpp.mcdata-msgstore-ctrl-request+xml`,
      `vnd.oma.poc.groups+xml`,
      `yang-patch+json`,
      `vnd.3gpp2.sms`,
      `passport`,
      `atomdeleted+xml`,
      `x-blorb`,
      `marcxml+xml`,
      `ocsp-request`,
      `vnd.cirpack.isdn-ext`,
      `vnd.truedoc`,
      `tzif`,
      `vnd.openxmlformats-officedocument.vmldrawing`,
      `yang-data+cbor`,
      `vnd.ecowin.series`,
      `vnd.groove-identity-message`,
      `vnd.s3sms`,
      `vnd.nacamar.ybrid+json`,
      `x-ms-xbap`,
      `vnd.ipld.dag-cbor`,
      `macwriteii`,
      `vnd.ezpix-album`,
      `vnd.openeye.oeb`,
      `vnd.cryptomator.vault`,
      `3gpp-ims+xml`,
      `vnd.sybyl.mol2`,
      `vnd.informix-visionary`,
      `pkcs8-encrypted`,
      `vnd.radisys.msml-dialog-base+xml`,
      `vnd.wmc`,
      `vnd.mfmp`,
      `xcap-att+xml`,
      `spirits-event+xml`,
      `oauth-authz-req+jwt`,
      `alto-propmapparams+json`,
      `pskc+xml`,
      `vnd.data-vision.rdz`,
      `vnd.visio`,
      `vnd.oma.bcast.stkm`,
      `vnd.mfer`,
      `vnd.ntt-local.ogw_remote-access`,
      `logout+jwt`,
      `cwt`,
      `load-control+xml`,
      `vnd.gentoo.manifest`,
      `vnd.smaf`,
      `vnd.otps.ct-kip+xml`,
      `vnd.nokia.pcd+xml`,
      `vnd.scribus`,
      `vnd.ntt-local.sip-ta_tcp_stream`,
      `geo+json`,
      `ocsp-response`,
      `vnd.apple.pages`,
      `vnd.micrografx.igx`,
      `cbor`,
      `3gpphal+json`,
      `vnd.kde.kpresenter`,
      `json`,
      `vnd.iptc.g2.conceptitem+xml`,
      `vnd.cups-raster`,
      `vnd.amazon.ebook`,
      `vnd.musician`,
      `vnd.oftn.l10n+json`,
      `sdp`,
      `vnd.kde.kformula`,
      `x-nzb`,
      `vnd.uplanet.cacheop`,
      `vnd.ruckus.download`,
      `vnd.oasis.opendocument.base`,
      `x-java-jnlp-file`,
      `pkcs12`,
      `resource-lists+xml`,
      `odm+xml`,
      `vnd.jsk.isdn-ngn`,
      `iotp`,
      `pkix-crl`,
      `vnd.geogebra.file`,
      `ace+json`,
      `x-gca-compressed`,
      `sparql-results+xml`,
      `xspf+xml`,
      `vnd.crypto-shade-file`,
      `vnd.is-xpr`,
      `beep+xml`,
      `vnd.filmit.zfc`,
      `vnd.oma.bcast.simple-symbol-container`,
      `framework-attributes+xml`,
      `vnd.collabio.xodocuments.spreadsheet-template`,
      `vnd.groove-account`,
      `clue_info+xml`,
      `vnd.software602.filler.form+xml`,
      `x-font-sunos-news`,
      `vnd.fujixerox.docuworks.container`,
      `pls+xml`,
      `dicom+json`,
      `vnd.oasis.opendocument.text-template`,
      `vnd.openxmlformats-officedocument.spreadsheetml.revisionlog+xml`,
      `vnd.epson.salt`,
      `vnd.onepagertatx`,
      `vnd.nokia.radio-presets`,
      `x-keepass2`,
      `sieve`,
      `vnd.geometry-explorer`,
      `vnd.yamaha.openscoreformat`,
      `msc-mixer+xml`,
      `vnd.ciedi`,
      `vnd.jcp.javame.midlet-rms`,
      `vnd.openxmlformats-officedocument.wordprocessingml.endnotes+xml`,
      `edi-consent`,
      `x-virtualbox-hdd`,
      `vnd.aether.imp`,
      `json5`,
      `vnd.oma.cab-subs-invite+xml`,
      `flexfec`,
      `vnd.3gpp.mcptt-user-profile+xml`,
      `cybercash`,
      `vnd.oasis.opendocument.presentation`,
      `atomcat+xml`,
      `dash+xml`,
      `vnd.uri-map`,
      `vnd.radisys.msml-dialog-group+xml`,
      `xcap-diff+xml`,
      `tamp-apex-update-confirm`,
      `vnd.ms-ims`,
      `x-virtualbox-vbox-extpack`,
      `concise-problem-details+cbor`,
      `alto-networkmapfilter+json`,
      `vnd.noblenet-web`,
      `vnd.tableschema+json`,
      `elm+xml`,
      `x-dvi`,
      `vnd.nokia.iptv.config+xml`,
      `whoispp-response`,
      `vnd.afpc.foca-codedfont`,
      `x-msmediaview`,
      `emergencycalldata.serviceinfo+xml`,
      `vnd.sbm.cid`,
      `vnd.yamaha.smaf-audio`,
      `vnd.3gpp.mcptt-info+xml`,
      `vnd.oipf.userprofile+xml`,
      `vnd.eln+zip`,
      `cose`,
      `prs.rdf-xml-crypt`,
      `vnd.oasis.opendocument.image-template`,
      `vnd.innopath.wamp.notification`,
      `vnd.evolv.ecig.theme`,
      `vnd.onepagertat`,
      `vnd.wolfram.mathematica`,
      `vnd.pwg-xhtml-print+xml`,
      `vnd.gnu.taler.merchant+json`,
      `voicexml+xml`,
      `vnd.geospace`,
      `vnd.vd-study`,
      `vnd.3gpp.mcvideo-info+xml`,
      `sbe`,
      `x-chrome-extension`,
      `vnd.omads-email+xml`,
      `x-ms-wmz`,
      `vnd.apache.arrow.stream`,
      `vnd.kde.kchart`,
      `vnd.crick.clicker.keyboard`,
      `vnd.loom`,
      `vnd.sqlite3`,
      `vnd.dolby.mlp`,
      `vnd.openxmlformats-officedocument.spreadsheetml.sheet`,
      `vnd.stardivision.impress`,
      `vnd.mozilla.xul+xml`,
      `x-zmachine`,
      `vnd.3gpp.mc-signalling-ear`,
      `vnd.dvb.notif-aggregate-root+xml`,
      `vnd.noblenet-directory`,
      `automationml-aml+xml`,
      `vnd.openxmlformats-officedocument.wordprocessingml.document.glossary+xml`,
      `x-httpd-php`,
      `vnd.pwg-multiplexed`,
      `vnd.pawaafile`,
      `activemessage`,
      `vnd.balsamiq.bmml+xml`,
      `emergencycalldata.deviceinfo+xml`,
      `vnd.android.ota`,
      `vnd.motorola.flexsuite.kmr`,
      `csvm+json`,
      `vnd.openxmlformats-officedocument.drawingml.diagramstyle+xml`,
      `x-texinfo`,
      `vnd.fujitsu.oasysgp`,
      `vividence.scriptfile`,
      `vnd.crick.clicker`,
      `vnd.rainstor.data`,
      `shf+xml`,
      `vnd.etsi.cug+xml`,
      `senml-etch+json`,
      `cccex`,
      `vnd.d2l.coursepackage1p0+zip`,
      `vnd.openxmlformats-officedocument.drawingml.diagramlayout+xml`,
      `vnd.openxmlformats-officedocument.presentationml.slideshow.main+xml`,
      `prs.plucker`,
      `vnd.dxr`,
      `vnd.ecowin.chart`,
      `vnd.etsi.aoc+xml`,
      `atsc-rsat+xml`,
      `vnd.cinderella`,
      `vnd.renlearn.rlprint`,
      `dart`,
      `json-patch+json`,
      `scim+json`,
      `pgp-keys`,
      `vnd.3gpp.mcptt-signed+xml`,
      `x-tex`,
      `x-shar`,
      `lgr+xml`,
      `x-dgc-compressed`,
      `vnd.intertrust.nncp`,
      `vnd.ms-xpsdocument`,
      `1d-interleaved-parityfec`,
      `vnd.artisan+json`,
      `vnd.etsi.iptvservice+xml`,
      `vnd.sun.xml.impress`,
      `vnd.fujixerox.art4`,
      `atsc-held+xml`,
      `tamp-update-confirm`,
      `vnd.sigrok.session`,
      `vnd.dvb.notif-container+xml`,
      `nss`,
      `vnd.denovo.fcselayout-link`,
      `vnd.etsi.asic-s+zip`,
      `senml+json`,
      `vnd.nokia.pcd+wbxml`,
      `city+json`,
      `vnd.openxmlformats-officedocument.theme+xml`,
      `dit`,
      `p21`,
      `cals-1840`,
      `yang-data+json`,
      `vnd.nokia.n-gage.symbian.install`,
      `encaprtp`,
      `vnd.ms-windows.devicepairing`,
      `vnd.japannet-payment-wakeup`,
      `problem+xml`,
      `vnd.cluetrust.cartomobile-config-pkg`,
      `sensml+xml`,
      `parityfec`,
      `vnd.desmume.movie`,
      `vnd.osgi.subsystem`,
      `vnd.ubisoft.webplayer`,
      `vnd.3gpp.mcdata-user-profile+xml`,
      `jrd+json`,
      `vnd.onepagertamp`,
      `vnd.fujitsu.oasysprs`,
      `vnd.antix.game-component`,
      `gzip`,
      `vnd.3gpp.gtpc`,
      `vnd.capasystems-pg+json`,
      `vnd.apexlang`,
      `x-xpinstall`,
      `vnd.uplanet.listcmd-wbxml`,
      `vnd.muvee.style`,
      `vnd.immervision-ivp`,
      `x-font-ghostscript`,
      `x-debian-package`,
      `vnd.sun.xml.draw.template`,
      `vnd.3gpp.mcdata-payload`,
      `moss-signature`,
      `vnd.sailingtracker.track`,
      `vnd.openxmlformats-officedocument.presentationml.notesmaster+xml`,
      `raml+yaml`,
      `vnd.fujixerox.hbpl`,
      `vnd.gnu.taler.exchange+json`,
      `vnd.oipf.dae.xhtml+xml`,
      `x-envoy`,
      `vnd.fastcopy-disk-image`,
      `vnd.webturbo`,
      `linkset+json`,
      `vnd.omads-file+xml`,
      `vnd.openxmlformats-officedocument.presentationml.slideshow`,
      `jwk+json`,
      `vnd.multiad.creator.cif`,
      `vq-rtcpxr`,
      `3gpdash-qoe-report+xml`,
      `soap+fastinfoset`,
      `vnd.tao.intent-module-archive`,
      `x-msaccess`,
      `vnd.xmpie.xlim`,
      `vnd.quobject-quoxdocument`,
      `tnauthlist`,
      `vnd.openxmlformats-officedocument.wordprocessingml.footer+xml`,
      `vnd.firemonkeys.cloudcell`,
      `vnd.nokia.isds-radio-presets`,
      `vnd.gmx`,
      `vnd.d3m-problem`,
      `vnd.vsf`,
      `sql`,
      `vnd.mason+json`,
      `x-tgif`,
      `x-www-form-urlencoded`,
      `epub+zip`,
      `vnd.onvif.metadata`,
      `odx`,
      `vnd.openxmlformats-officedocument.presentationml.slide`,
      `vnd.dvb.ipdcesgaccess2`,
      `x-font-framemaker`,
      `vnd.ms-word.template.macroenabled.12`,
      `vnd.openxmlformats-officedocument.presentationml.slide+xml`,
      `zip`,
      `vnd.dvb.ait`,
      `vnd.afpc.modca-objectcontainer`,
      `vnd.sun.xml.writer.global`,
      `vnd.tmd.mediaflex.api+xml`,
      `watcherinfo+xml`,
      `dash-patch+xml`,
      `x-gnumeric`,
      `mods+xml`,
      `spdx+json`,
      `vnd.amadeus+json`,
      `andrew-inset`,
      `vnd.cncf.helm.chart.content.v1.tar+gzip`,
      `vnd.shade-save-file`,
      `vnd.motorola.flexsuite.wem`,
      `x-tcl`,
      `vnd.fdf`,
      `tamp-community-update-confirm`,
      `vnd.ms-fontobject`,
      `ccxml+xml`,
      `vnd.shx`,
      `vnd.afpc.foca-charset`,
      `mp4`,
      `mxf`,
      `vnd.oma.bcast.ltkm`,
      `vnd.ms-office.activex+xml`,
      `vnd.multiad.creator`,
      `edi-x12`,
      `vnd.ms-lrm`,
      `vnd.trid.tpt`,
      `vnd.ms-pki.stl`,
      `rtploopback`,
      `set-registration-initiation`,
      `call-completion`,
      `vnd.lotus-1-2-3`,
      `x-mpegurl`,
      `mbms-reception-report+xml`,
      `vnd.olpc-sugar`,
      `sipc`,
      `vnd.eu.kasparian.car+json`,
      `x-glulx`,
      `geo+json-seq`,
      `vnd.ahead.space`,
      `vnd.xmpie.cpkg`,
      `cdmi-capability`,
      `trickle-ice-sdpfrag`,
      `vnd.mobius.dis`,
      `vnd.cncf.helm.chart.provenance.v1.prov`,
      `vnd.avalon+json`,
      `vnd.lotus-screencam`,
      `x-perl`,
      `vnd.datapackage+json`,
      `vnd.openxmlformats-officedocument.wordprocessingml.template`,
      `vnd.ms-opentype`,
      `vnd.openxmlformats-officedocument.presentationml.template`,
      `vnd.collabio.xodocuments.spreadsheet`,
      `vnd.cryptomator.encrypted`,
      `vnd.afpc.modca`,
      `onenote`,
      `cdmi-domain`,
      `vnd.hal+xml`,
      `vnd.canon-cpdl`,
      `vnd.mcd`,
      `vnd.ibm.electronic-media`,
      `fhir+xml`,
      `tamp-error`,
      `vnd.dvb.notif-generic+xml`,
      `vnd.3gpp.ussd+xml`,
      `vnd.semf`,
      `vnd.dvb.ipdcdftnotifaccess`,
      `vnd.marlin.drm.license+xml`,
      `ogg`,
      `geopackage+sqlite3`,
      `dashdelta`,
      `vnd.openxmlformats-officedocument.wordprocessingml.fonttable+xml`,
      `vnd.ufdl`,
      `senml-exi`,
      `vnd.powerbuilder7-s`,
      `index`,
      `mbms-deregister+xml`,
      `vnd.easykaraoke.cdgdownload`,
      `vnd.cups-ppd`,
      `vnd.oma.bcast.sgdu`,
      `x-chess-pgn`,
      `vnd.ms-playready.initiator+xml`,
      `cose-x509`,
      `vnd.dir-bi.plate-dl-nosuffix`,
      `vnd.crick.clicker.template`,
      `vnd.uiq.theme`,
      `json-seq`,
      `vnd.lotus-wordpro`,
      `vnd.adobe.partial-upload`,
      `sep+xml`,
      `vnd.claymore`,
      `tar`,
      `rpki-roa`,
      `clr`,
      `vnd.oasis.opendocument.formula-template`,
      `vnd.oma.dd2+xml`,
      `vnd.sealed.doc`,
      `vnd.wrq-hp3000-labelled`,
      `vnd.arastra.swi`,
      `vnd.flographit`,
      `winhlp`,
      `vnd.dbf`,
      `x-latex`,
      `td+json`,
      `vnd.3gpp-prose-pc3ch+xml`,
      `cda+xml`,
      `vnd.gridmp`,
      `vnd.dataresource+json`,
      `vnd.openxmlformats-officedocument.spreadsheetml.revisionheaders+xml`,
      `news-checkgroups`,
      `vnd.solent.sdkm+xml`,
      `atfx`,
      `vnd.globalplatform.card-content-mgt`,
      `vnd.acucobol`,
      `vnd.adobe.fxp`,
      `vnd.ms-wpl`,
      `x-bzip`,
      `vnd.leap+json`,
      `vnd.dynageo`,
      `sensml+json`,
      `vnd.collection.next+json`,
      `coap-payload`,
      `vnd.sss-dtf`,
      `postscript`,
      `timestamp-reply`,
      `vnd.etsi.mheg5`,
      `vnd.fuzzysheet`,
      `vnd.oipf.spdlist+xml`,
      `x-cocoa`,
      `vnd.3gpp.gmop+xml`,
      `vnd.exstream-empower+zip`,
      `vnd.omads-folder+xml`,
      `vnd.google-apps.presentation`,
      `vnd.syncml.dm.notification`,
      `x-stuffit`,
      `vnd.motorola.flexsuite.adsi`,
      `xcon-conference-info-diff+xml`,
      `docbook+xml`,
      `vnd.eudora.data`,
      `vnd.ntt-local.content-share`,
      `vnd.etsi.iptvprofile+xml`,
      `vnd.mediastation.cdkey`,
      `sgml-open-catalog`,
      `x-lzh-compressed`,
      `vnd.sealed.eml`,
      `aml`,
      `vnd.oma.bcast.sgboot`,
      `scvp-cv-response`,
      `vnd.cyclonedx+json`,
      `vnd.ms-wmdrm.meter-chlg-req`,
      `vnd.fujifilm.fb.jfi+xml`,
      `xproc+xml`,
      `vnd.rn-realmedia`,
      `ulpfec`,
      `vnd.genozip`,
      `vnd.opentimestamps.ots`,
      `vnd.oasis.opendocument.text-web`,
      `dcd`,
      `vnd.oipf.ueprofile+xml`,
      `vnd.ms-word.document.macroenabled.12`,
      `vnd.vidsoft.vidconference`,
      `vnd.etsi.iptvdiscovery+xml`,
      `vnd.oma.poc.invocation-descriptor+xml`,
      `x-arj`,
      `slate`,
      `vnd.oasis.opendocument.graphics`,
      `vnd.patientecommsdoc`,
      `x-director`,
      `gpx+xml`,
      `vnd.rig.cryptonote`,
      `vnd.syncml.dmddf+wbxml`,
      `x-javascript`,
      `x-pkcs7-certreqresp`,
      `patch-ops-error+xml`,
      `vnd.fujifilm.fb.docuworks`,
      `vnd.etsi.iptvsad-bc+xml`,
      `vnd.criticaltools.wbs+xml`,
      `pidf-diff+xml`,
      `vnd.familysearch.gedcom+zip`,
      `x-xz`,
      `cose-key`,
      `jscalendar+json`,
      `dicom+xml`,
      `vnd.kde.kword`,
      `vnd.syncml.dmddf+xml`,
      `vnd.oma.xcap-directory+xml`,
      `vnd.nokia.catalogs`,
      `reputon+json`,
      `vnd.acucorp`,
      `vnd.jam`,
      `vnd.openxmlformats-officedocument.spreadsheetml.styles+xml`,
      `pvd+json`,
      `vnd.uplanet.list`,
      `vnd.verimatrix.vcas`,
      `vnd.bint.med-content`,
      `ld+json`,
      `x-virtualbox-ova`,
      `tei+xml`,
      `rpki-ghostbusters`,
      `vnd.oipf.contentaccessstreaming+xml`,
      `atf`,
      `smil`,
      `vnd.afpc.foca-codepage`,
      `vnd.ficlab.flb+zip`,
      `vnd.afpc.afplinedata`,
      `opc-nodeset+xml`,
      `vnd.ibm.rights-management`,
      `x-silverlight-app`,
      `x-font-libgrx`,
      `alto-directory+json`,
      `zlib`,
      `vnd.japannet-verification`,
      `vnd.patentdive`,
      `vnd.openxmlformats-officedocument.drawing+xml`,
      `vnd.commerce-battelle`,
      `vnd.wap.wmlscriptc`,
      `atxml`,
      `secevent+jwt`,
      `multipart-core`,
      `cms`,
      `vnd.panoply`,
      `srgs+xml`,
      `x-csh`,
      `vnd.oma.bcast.associated-procedure-parameter+xml`,
      `vnd.radisys.msml-dialog+xml`,
      `vnd.dvb.notif-init+xml`,
      `vnd.ecowin.seriesrequest`,
      `vnd.oma.bcast.sgdd+xml`,
      `vnd.3gpp.pic-bw-var`,
      `iges`,
      `msixbundle`,
      `vnd.noblenet-sealer`,
      `dec-dx`,
      `manifest+json`,
      `vnd.apple.mpegurl`,
      `vnd.adobe.formscentral.fcdt`,
      `vnd.gentoo.gpkg`,
      `mosskey-request`,
      `yang-data+xml`,
      `x-abiword`,
      `mbox`,
      `vnd.apache.thrift.binary`,
      `x-makeself`,
      `vnd.debian.binary-package`,
      `vnd.google-earth.kmz`,
      `x-shockwave-flash`,
      `emergencycalldata.providerinfo+xml`,
      `fdt+xml`,
      `rtx`,
      `vnd.nokia.landmark+wbxml`,
      `vnd.intu.qfx`,
      `lpf+zip`,
      `vnd.ims.lti.v2.toolsettings+json`,
      `vnd.afpc.modca-overlay`,
      `vnd.osgeo.mapguide.package`,
      `vnd.yamaha.remote-setup`,
      `vnd.cyan.dean.root+xml`,
      `ubjson`,
      `vnd.dolby.mobile.1`,
      `mbms-envelope+xml`,
      `vnd.openxmlformats-officedocument.presentationml.presentation`,
      `cdfx+xml`,
      `vnd.hydrostatix.sof-data`,
      `vnd.afpc.afplinedata-pagedef`,
      `vnd.openxmlformats-officedocument.presentationml.handoutmaster+xml`,
      `aif+cbor`,
      `vnd.openxmlformats-officedocument.spreadsheetml.template`,
      `appxbundle`,
      `vnd.koan`,
      `vnd.osa.netdeploy`,
      `mbms-msk+xml`,
      `vnd.dece.unspecified`,
      `vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml`,
      `vnd.fujifilm.fb.docuworks.binder`,
      `x-ms-application`,
      `n-quads`,
      `davmount+xml`,
      `vnd.oasis.opendocument.graphics-template`,
      `vnd.emclient.accessrequest+xml`,
      `vnd.efi.img`,
      `x-iwork-pages-sffpages`,
      `mipc`,
      `vnd.lotus-approach`,
      `vnd.bmi`,
      `vnd.dece.ttml+xml`,
      `vnd.shana.informed.formtemplate`,
      `vnd.3gpp.mcdata-info+xml`,
      `vnd.oma-scws-http-request`,
      `vnd.hbci`,
      `x-xfig`,
      `vnd.3gpp.ngap`,
      `route-s-tsid+xml`,
      `vnd.kenameaapp`,
      `vnd.kahootz`,
      `vnd.cluetrust.cartomobile-config`,
      `vnd.uplanet.alert`,
      `vnd.rar`,
      `vnd.nokia.landmark+xml`,
      `vnd.ms-windows.nwprinting.oob`,
      `vnd.yamaha.hv-script`,
      `x-install-instructions`,
      `vnd.evolv.ecig.settings`,
      `vnd.pg.osasli`,
      `pkcs8`,
      `at+jwt`,
      `vnd.ntt-local.sip-ta_remote`,
      `vnd.dm.delegation+xml`,
      `vnd.intergeo`,
      `tamp-apex-update`,
      `x-bzip2`,
      `vnd.fujixerox.docuworks`,
      `ccmp+xml`,
      `vnd.ffsns`,
      `x-chat`,
      `vnd.ves.encrypted`,
      `vnd.xmpie.ppkg`,
      `held+xml`,
      `vnd.ms-wmdrm.lic-resp`,
      `qsig`,
      `vnd.oasis.opendocument.presentation-template`,
      `vnd.iptc.g2.packageitem+xml`,
      `vnd.realvnc.bed`,
      `mets+xml`,
      `atsc-dynamic-event-message`,
      `nasdata`,
      `x-pilot`,
      `java-serialized-object`,
      `x-stuffitx`,
      `simple-message-summary`,
      `zstd`,
      `news-transmission`,
      `vnd.fujitsu.oasys`,
      `vnd.adobe.xfdf`,
      `dssc+xml`,
      `vnd.netfpx`,
      `vnd.etsi.tsl+xml`,
      `vnd.palm`,
      `expect-ct-report+json`,
      `applixware`,
      `vnd.adobe.air-application-installer-package+zip`,
      `vnd.dart`,
      `vnd.osgi.dp`,
      `vnd.sun.xml.impress.template`,
      `vnd.cups-raw`,
      `alto-cdnifilter+json`,
      `vnd.shana.informed.formdata`,
      `its+xml`,
      `vnd.zul`,
      `vnd.pvi.ptid1`,
      `vnd.3gpp.mcvideo-location-info+xml`,
      `alto-endpointcost+json`,
      `vnd.openxmlformats-officedocument.wordprocessingml.settings+xml`,
      `stix+json`,
      `vnd.wqd`,
      `vnd.japannet-setstore-wakeup`,
      `vnd.ericsson.quickcall`,
      `efi`,
      `vnd.android.package-archive`,
      `vnd.3gpp.mcptt-ue-config+xml`,
      `vnd.ms-powerpoint.presentation.macroenabled.12`,
      `set-registration`,
      `vnd.laszip`,
      `vnd.stardivision.writer`,
      `gml+xml`,
      `ppsp-tracker+json`,
      `cdmi-container`,
      `x-mswrite`,
      `x-sv4crc`,
      `vnd.ms-printdevicecapabilities+xml`,
      `vnd.mobius.mbk`,
      `vnd.fujifilm.fb.docuworks.container`,
      `tamp-sequence-adjust-confirm`,
      `fastinfoset`,
      `vnd.veryant.thin`,
      `vcard+json`,
      `vnd.audiograph`,
      `vnd.heroku+json`,
      `vnd.mobius.msl`,
      `vnd.dvb.pfr`,
      `vnd.enliven`,
      `x-dtbook+xml`,
      `pdx`,
      `vnd.3gpp-prose-pc8+xml`,
      `atom+xml`,
      `vnd.fut-misnet`,
      `x-iwork-numbers-sffnumbers`,
      `vnd.micro+json`,
      `vnd.blueice.multipass`,
      `vnd.3gpp.mcvideo-transmission-request+xml`,
      `mbms-associated-procedure-description+xml`,
      `vnd.bbf.usp.msg+json`,
      `vnd.radisys.msml-conf+xml`,
      `vnd.futoin+json`,
      `vnd.mophun.application`,
      `x-rar-compressed`,
      `vnd.3gpp.mcvideo-affiliation-command+xml`,
      `vnd.publishare-delta-tree`,
      `vnd.font-fontforge-sfd`,
      `vnd.autopackage`,
      `vnd.airzip.filesecure.azs`,
      `vnd.openxmlformats-officedocument.spreadsheetml.template.main+xml`,
      `vnd.americandynamics.acc`,
      `xslt+xml`,
      `rls-services+xml`,
      `moss-keys`,
      `vnd.ibm.afplinedata`,
      `x-font-bdf`,
      `vnd.hp-hps`,
      `vnd.apothekende.reservation+json`,
      `vnd.hzn-3d-crossword`,
      `vnd.japannet-registration`,
      `vnd.sun.xml.calc`,
      `vnd.wolfram.mathematica.package`,
      `vnd.framemaker`,
      `vnd.3gpp.5gnas`,
      `vnd.zzazz.deck+xml`,
      `index.obj`,
      `vnd.pagerduty+json`,
      `vnd.uplanet.bearer-choice`,
      `vnd.llamagraphics.life-balance.desktop`,
      `ttml+xml`,
      `vnd.xmi+xml`,
      `vnd.nebumind.line`,
      `x-pkcs7-certificates`,
      `sparql-query`,
      `vnd.hp-hpid`,
      `mrb-consumer+xml`,
      `vnd.sbm.mid2`,
      `mosskey-data`,
      `vnd.hp-pcl`,
      `vnd.openxmlformats-officedocument.presentationml.tags+xml`,
      `linkset`,
      `vnd.coreos.ignition+json`,
      `vnd.ims.imsccv1p2`,
      `vnd.dzr`,
      `vnd.hcl-bireports`,
      `vnd.mophun.certificate`,
      `vnd.ims.lti.v2.toolproxy+json`,
      `vnd.piaccess.application-licence`,
      `vnd.cloanto.rp9`,
      `vnd.openxmlformats-officedocument.presentationml.slidemaster+xml`,
      `vnd.paos.xml`,
      `vnd.dvb.notif-ia-registration-response+xml`,
      `x-cpio`,
      `vnd.recordare.musicxml`,
      `atomicmail`,
      `vnd.uplanet.cacheop-wbxml`,
      `set-payment-initiation`,
      `vnd.stardivision.draw`,
      `vnd.nimn`,
      `vnd.powerbuilder7`,
      `vnd.apple.pkpass`,
      `vnd.uplanet.listcmd`,
      `oebps-package+xml`,
      `vnd.wfa.dpp`,
      `gltf-buffer`,
      `x-dtbresource+xml`,
      `x-deb`,
      `vnd.street-stream`,
      `vnd.3gpp-v2x-local-service-information`,
      `vnd.dvb.ipdcesgpdd`,
      `vnd.fdsn.mseed`,
      `vnd.openxmlformats-officedocument.spreadsheetml.calcchain+xml`,
      `vnd.uplanet.channel-wbxml`,
      `vnd.yamaha.hv-voice`,
      `alto-propmap+json`,
      `vnd.1000minds.decision-model+xml`,
      `mathematica`,
      `problem+json`,
      `vnd.iptc.g2.newsitem+xml`,
      `vnd.nokia.landmarkcollection+xml`,
      `x-xliff+xml`,
      `atsc-dwd+xml`,
      `automationml-amlx+zip`,
      `vnd.bluetooth.ep.oob`,
      `vnd.openxmlformats-officedocument.wordprocessingml.styles+xml`,
      `vnd.cendio.thinlinc.clientconf`,
      `vnd.etsi.overload-control-policy-dataset+xml`,
      `urc-uisocketdesc+xml`,
      `vnd.radisys.msml+xml`,
      `vnd.dvb.dvbj`,
      `vnd.windows.devicepairing`,
      `vnd.comicbook-rar`,
      `captive+json`,
      `vnd.etsi.iptvcommand+xml`,
      `vnd.cups-postscript`,
      `vnd.gentoo.catmetadata+xml`,
      `vnd.collection+json`,
      `vnd.oma.lwm2m+json`,
      `vnd.hp-jlyt`,
      `vnd.veritone.aion+json`,
      `wasm`,
      `vnd.oma.drm.risd+xml`,
      `vnd.openxmlformats-officedocument.wordprocessingml.document.main+xml`,
      `vnd.adobe.xdp+xml`,
      `vnd.adobe.flash.movie`,
      `vnd.novadigm.ext`,
      `vnd.las.las+json`,
      `x-msbinder`,
      `coap-group+json`,
      `vnd.oma-scws-config`,
      `vnd.xfdl`,
      `vnd.oma.bcast.notification+xml`,
      `x-msclip`,
      `vnd.apple.installer+xml`,
      `vnd.marlin.drm.actiontoken+xml`,
      `marc`,
      `vnd.etsi.iptvsync+xml`,
      `x-conference`,
      `vnd.epson.esf`,
      `vnd.oma.bcast.provisioningtrigger`,
      `vnd.dna`,
      `soap+xml`,
      `vnd.etsi.simservs+xml`,
      `vnd.openxmlformats-officedocument.wordprocessingml.document`,
      `vnd.microsoft.portable-executable`,
      `vnd.ms-powerpoint.addin.macroenabled.12`,
      `vnd.think-cell.ppttc+json`,
      `vnd.avistar+xml`,
      `vnd.las.las+xml`,
      `vnd.ms-powerpoint.slideshow.macroenabled.12`,
      `vnd.ims.lti.v2.toolproxy.id+json`,
      `vnd.nintendo.nitro.rom`,
      `vnd.apache.arrow.file`,
      `ipfix`,
      `vnd.3gpp.mcptt-floor-request+xml`,
      `alto-updatestreamparams+json`,
      `vnd.ibm.minipay`,
      `vnd.document+json`,
      `vnd.groove-tool-template`,
      `vnd.oasis.opendocument.chart-template`,
      `vnd.ms-wmdrm.lic-chlg-req`,
      `vnd.wasmflow.wafl`,
      `vnd.google-earth.kml+xml`,
      `alto-endpointcostparams+json`,
      `vnd.radisys.msml-dialog-transform+xml`,
      `emergencycalldata.ecall.msd`,
      `vnd.3gpp.mcptt-affiliation-command+xml`,
      `mbms-schedule+xml`,
      `vnd.nervana`,
      `vnd.smart.notebook`,
      `vnd.pcos`,
      `vnd.valve.source.material`,
      `java-archive`,
      `vnd.miele+json`,
      `vnd.3gpp.mcptt-mbms-usage-info+xml`,
      `vnd.infotech.project`,
      `vnd.yamaha.tunnel-udpencap`,
      `appx`,
      `smpte336m`,
      `x-sv4cpio`,
      `mbms-user-service-description+xml`,
      `jwt`,
      `vnd.fdsn.seed`,
      `ipp`,
      `vnd.yamaha.through-ngn`,
      `vnd.oasis.opendocument.spreadsheet`,
      `vnd.etsi.iptvsad-npvr+xml`,
      `mpeg4-iod-xmt`,
      `vnd.wv.csp+xml`,
      `vnd.vectorworks`,
      `vnd.mynfc`,
      `vnd.century-systems.tcp_stream`,
      `clue+xml`,
      `senml+cbor`,
      `elm+json`,
      `vnd.music-niff`,
      `vnd.ibm.modcap`,
      `vnd.ctc-posml`,
      `p2p-overlay+xml`,
      `rfc+xml`,
      `x-authorware-seg`,
      `vnd.sealed.csf`,
      `samlmetadata+xml`,
      `ssdl+xml`,
      `missing-blocks+cbor-seq`,
      `vnd.mobius.txf`,
      `vnd.radisys.msml-audit-conn+xml`,
      `vnd.futoin+cbor`,
      `vnd.intertrust.digibox`,
      `vnd.radisys.msml-audit+xml`,
      `vnd.oma-scws-http-response`,
      `x-tar`,
      `vnd.banana-accounting`,
      `token-introspection+jwt`,
      `kpml-response+xml`,
      `vnd.sealed.mht`,
      `vnd.yamaha.hv-dic`,
      `applefile`,
      `xhtml+xml`,
      `mmt-aei+xml`,
      `vnd.oma.bcast.drm-trigger+xml`,
      `vnd.sealed.xls`,
      `vnd.snesdev-page-table`,
      `exi`,
      `vnd.wap.wmlc`,
      `vnd.oma.cab-feature-handler+xml`,
      `media_control+xml`,
      `vnd.curl.car`,
      `vnd.openxmlformats-officedocument.presentationml.viewprops+xml`,
      `xaml+xml`,
      `vnd.openxmlformats-officedocument.drawingml.diagramcolors+xml`,
      `tlsrpt+gzip`,
      `vnd.citationstyles.style+xml`,
      `urc-grpsheet+xml`,
      `vnd.frogans.fnc`,
      `vnd.onepager`,
      `vnd.openxmlformats-officedocument.spreadsheetml.pivotcacherecords+xml`,
      `vnd.dvb.iptv.alfec-base`,
      `vnd.joost.joda-archive`,
      `pgp-encrypted`,
      `x-freearc`,
      `vnd.3gpp.lpp`,
      `vnd.curl.pcurl`,
      `rpki-manifest`,
      `vnd.3gpp.sms+xml`,
      `vnd.spotfire.sfs`,
      `vnd.liberty-request+xml`,
      `node`,
      `xacml+xml`,
      `vnd.ecowin.seriesupdate`,
      `vnd.geonext`,
      `prs.xsf+xml`,
      `srgs`,
      `vnd.etsi.timestamp-token`,
      `vnd.3gpp.mcdata-signalling`,
      `x-font-dos`,
      `x-pki-message`,
      `vnd.hsl`,
      `vnd.motorola.flexsuite.ttc`,
      `x-mspublisher`,
      `vnd.3lightssoftware.imagescal`,
      `vnd.openxmlformats-officedocument.spreadsheetml.connections+xml`,
      `vnd.fujitsu.oasys3`,
      `wspolicy+xml`,
      `xml-external-parsed-entity`,
      `vnd.shp`,
      `vnd.hyper+json`,
      `vnd.age`,
      `vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml`,
      `vnd.crick.clicker.wordbank`,
      `x-amf`,
      `vnd.eszigno3+xml`,
      `ecmascript`,
      `vnd.rs-274x`,
      `lostsync+xml`,
      `vnd.curl`,
      `vnd.api+json`,
      `vnd.ims.imsccv1p3`,
      `vnd.logipipe.circuit+zip`,
      `x-authorware-bin`,
      `geoxacml+xml`,
      `toml`,
      `vnd.anser-web-certificate-issue-initiation`,
      `scvp-vp-request`,
      `vnd.openxmlformats-officedocument.themeoverride+xml`,
      `vnd.psfs`,
      `voucher-cms+json`,
      `xmpp+xml`,
      `bdoc`,
      `vnd.wfa.p2p`,
      `vnd.uplanet.channel`,
      `mbms-protection-description+xml`,
      `vnd.sus-calendar`,
      `senml-etch+cbor`,
      `vnd.motorola.flexsuite`,
      `x-authorware-map`,
      `vnd.3gpp.seal-info+xml`,
      `dssc+der`,
      `vnd.rapid`,
      `vnd.sun.xml.writer.template`,
      `vnd.3gpp.mcdata-service-config+xml`,
      `mikey`,
      `vnd.ms-excel.sheet.binary.macroenabled.12`,
      `batch-smtp`,
      `vnd.powerbuilder6-s`,
      `cpl+xml`,
      `cellml+xml`,
      `vnd.oma.poc.final-report+xml`,
      `x-mobipocket-ebook`,
      `vnd.ipld.dag-json`,
      `isup`,
      `cwl+json`,
      `omdoc+xml`,
      `vnd.artsquare`,
      `vnd.obn`,
      `vnd.neurolanguage.nlu`,
      `vnd.lotus-organizer`,
      `x-font-snf`,
      `vnd.syft+json`,
      `vnd.uoml+xml`,
      `x-msschedule`,
      `vnd.afpc.cmoca-cmresource`,
      `x-mscardfile`,
      `vnd.stepmania.stepchart`,
      `eshop`,
      `emotionml+xml`,
      `tve-trigger`,
      `vnd.exstream-package`,
      `vnd.svd`,
      `vnd.openxmlformats-officedocument.drawingml.diagramdata+xml`,
      `vnd.afpc.modca-formdef`,
      `vnd.3gpp.state-and-event-info+xml`,
      `mbms-msk-response+xml`,
      `vnd.sealedmedia.softseal.html`,
      `vnd.groove-tool-message`,
      `vnd.ecip.rlp`,
      `hl7v2+xml`,
      `vnd.afpc.modca-pagesegment`,
      `vnd.httphone`,
      `vnd.smart.teacher`,
      `vnd.oasis.opendocument.text-master`,
      `mediaservercontrol+xml`,
      `ibe-key-request+xml`,
      `index.cmd`,
      `dns+json`,
      `rsd+xml`,
      `vnd.chemdraw+xml`,
      `mathml-content+xml`,
      `vnd.motorola.flexsuite.fis`,
      `vnd.vcx`,
      `tm+json`,
      `vnd.frogans.ltf`,
      `pgp-signature`,
      `x-redhat-package-manager`,
      `vnd.wap.wbxml`,
      `oscore`,
      `vnd.oasis.opendocument.spreadsheet-template`,
      `vnd.maxmind.maxmind-db`,
      `fastsoap`,
      `vnd.llamagraphics.life-balance.exchange+xml`,
      `mads+xml`,
      `vnd.triscape.mxs`,
      `x-ace-compressed`,
      `x-iwork-keynote-sffkey`,
      `sarif-external-properties+json`,
      `vnd.sss-cod`,
      `mrb-publish+xml`,
      `vnd.oipf.pae.gem`,
      `vnd.openxmlformats-officedocument.spreadsheetml.pivotcachedefinition+xml`,
      `xop+xml`,
      `vnd.intu.qbo`,
      `set-payment`,
      `appinstaller`,
      `vnd.biopax.rdf+xml`,
      `vnd.uplanet.signal`,
      `vnd.macports.portpkg`,
      `activity+json`,
      `whoispp-query`,
      `auth-policy+xml`,
      `x-sea`,
      `vnd.semd`,
      `vnd.google-apps.spreadsheet`,
      `x-virtualbox-vmdk`,
      `vnd.aristanetworks.swi`,
      `xcap-el+xml`,
      `emma+xml`,
      `cdni`,
      `vnd.openxmlformats-officedocument.spreadsheetml.table+xml`,
      `x-doom`,
      `vnd.etsi.sci+xml`,
      `swid+cbor`,
      `font-tdpfr`,
      `vnd.gentics.grd+json`,
      `x-ustar`,
      `urc-ressheet+xml`,
      `vnd.dtg.local`,
      `http`,
      `vnd.dvb.dvbisl+xml`,
      `vnd.cryptii.pipe+json`,
      `vnd.quark.quarkxpress`,
      `vnd.kde.kontour`,
      `vnd.igloader`,
      `vnd.yamaha.smaf-phrase`,
      `vnd.drive+json`,
      `jsonml+json`,
      `oblivious-dns-message`,
      `vnd.hyper-item+json`,
      `x-virtualbox-vdi`,
      `vcard+xml`,
      `vnd.commonspace`,
      `vnd.shana.informed.interchange`,
      `x-virtualbox-ovf`,
      `vnd.ms-powerpoint.slide.macroenabled.12`,
      `vnd.tmobile-livetv`,
      `vnd.openxmlformats-officedocument.wordprocessingml.template.main+xml`,
      `vnd.mobius.daf`,
      `fhir+json`,
      `vnd.epson.ssf`,
      `dicom`,
      `x-cbr`,
      `vnd.nokia.conml+wbxml`,
      `vnd.wv.ssp+xml`,
      `vnd.etsi.tsl.der`,
      `prs.hpub+zip`,
      `vnd.japannet-directory-service`,
      `sarif+json`,
      `vnd.siren+json`,
      `gxf`,
      `vnd.openstreetmap.data+xml`,
      `vnd.amundsen.maze+xml`,
      `x-eva`,
      `vnd.hyperdrive+json`,
      `n-triples`,
      `vnd.clonk.c4group`,
      `vnd.stepmania.package`,
      `vnd.radisys.msml-audit-conf+xml`,
      `vnd.ms-asf`,
      `vnd.collabio.xodocuments.document`,
      `vnd.3gpp.mcvideo-service-config+xml`,
      `tamp-status-response`,
      `alto-updatestreamcontrol+json`,
      `vnd.msa-disk-image`,
      `x-cfs-compressed`,
      `vnd.oma.cab-address-book+xml`,
      `vnd.openxmlformats-officedocument.wordprocessingml.footnotes+xml`,
      `xfdf`,
      `vnd.openxmlformats-officedocument.spreadsheetml.sharedstrings+xml`,
      `vnd.iccprofile`,
      `rpki-updown`,
      `tamp-community-update`,
      `vnd.dolby.mobile.2`,
      `vnd.nearst.inv+json`,
      `lxf`,
      `vnd.wordperfect`,
      `epp+xml`,
      `vnd.openxmlformats-package.digital-signature-xmlsignature+xml`,
      `vnd.sss-ntf`,
      `vnd.oma.cab-user-prefs+xml`,
      `vnd.ecowin.filerequest`,
      `vnd.ms-artgalry`,
      `dialog-info+xml`,
      `x-font-pcf`,
      `vnd.openblox.game-binary`,
      `x-x509-ca-cert`,
      `vnd.ipld.raw`,
      `xcap-ns+xml`,
      `vnd.cosmocaller`,
      `x-sh`,
      `vnd.openxmlformats-officedocument.spreadsheetml.externallink+xml`,
      `vnd.sealed.tiff`,
      `fits`,
      `vnd.wfa.wsc`,
      `x400-bp`,
      `vnd.lotus-freelance`,
      `vnd.medicalholodeck.recordxr`,
      `vnd.powerbuilder6`,
      `x-virtualbox-vbox`,
      `vnd.kde.karbon`,
      `sensml+cbor`,
      `msc-ivr+xml`,
      `msix`,
      `vnd.oci.image.manifest.v1+json`,
      `fido.trusted-apps+json`,
      `vnd.ieee.1905`,
      `x-font-type1`,
      `vnd.yaoweme`,
      `rss+xml`,
      `emergencycalldata.control+xml`,
      `x-gtar`,
      `octet-stream`,
      `vnd.ms-excel.addin.macroenabled.12`,
      `vnd.openxmlformats-package.core-properties+xml`,
      `vnd.ms-color.iccprofile`,
      `vnd.etsi.iptvueprofile+xml`,
      `vnd.apache.thrift.json`,
      `vnd.powerbuilder75-s`,
      `x-msterminal`,
      `calendar+json`,
      `xcon-conference-info+xml`,
      `vnd.collection.doc+json`,
      `vnd.d3m-dataset`,
      `vnd.oasis.opendocument.formula`,
      `vnd.simtech-mindmapper`,
      `reginfo+xml`,
      `vnd.wordlift`,
      `lost+xml`,
      `vnd.preminet`,
      `vnd.openxmlformats-officedocument.spreadsheetml.querytable+xml`,
      `vnd.comicbook+zip`,
      `vnd.ezpix-package`,
      `emergencycalldata.veds+xml`,
      `pkcs10`,
      `vnd.dtg.local.flash`,
      `sep-exi`,
      `vnd.nokia.radio-preset`,
      `vnd.dece.zip`,
      `smil+xml`,
      `vnd.shopkick+json`,
      `webpush-options+json`,
      `vnd.anki`,
      `cdmi-object`,
      `vnd.onepagertatp`,
      `vnd.fujixerox.docuworks.binder`,
      `rtf`,
      `vnd.nintendo.snes.rom`,
      `vnd.visionary`,
      `vnd.iptc.g2.newsmessage+xml`,
      `tamp-update`,
      `calendar+xml`,
      `vnd.canon-lips`,
      `vnd.bpf`,
      `prs.cyn`,
      `vnd.wap.sic`,
      `alto-cdni+json`,
      `vnd.handheld-entertainment+xml`,
      `vnd.shootproof+json`,
      `prs.cww`,
      `vnd.gentoo.eclass`,
      `vnd.openxmlformats-officedocument.spreadsheetml.volatiledependencies+xml`,
      `vnd.ms-officetheme`,
      `pkix-pkipath`,
      `vnd.openxmlformats-officedocument.extended-properties+xml`,
      `vnd.belightsoft.lhzl+zip`,
      `vnd.3gpp.pic-bw-small`,
      `vnd.openxmlformats-officedocument.presentationml.slideupdateinfo+xml`,
      `vnd.oma.bcast.smartcard-trigger+xml`,
      `vnd.ncd.reference`,
      `vnd.ipunplugged.rcprofile`,
      `cnrp+xml`,
      `vnd.amiga.ami`,
      `yang-patch+xml`,
      `vnd.etsi.iptvsad-cod+xml`,
      `vnd.openxmlformats-officedocument.spreadsheetml.tablesinglecells+xml`,
      `vnd.wt.stf`,
      `vnd.3gpp2.bcmcsinfo+xml`,
      `vnd.3gpp-prose+xml`,
      `vnd.sun.xml.writer`,
      `vnd.rim.cod`,
      `poc-settings+xml`,
      `jose`,
      `pkixcmp`,
      `vnd.infotech.project+xml`,
      `vnd.uplanet.bearer-choice-wbxml`,
      `vnd.openxmlformats-officedocument.presentationml.notesslide+xml`,
      `vnd.f-secure.mobile`,
      `scaip+xml`,
      `vnd.gentoo.xpak`,
      `vnd.poc.group-advertisement+xml`,
      `xcap-error+xml`,
      `vnd.openxmlformats-officedocument.custom-properties+xml`,
      `h224`,
      `vnd.kde.kivio`,
      `mmt-usd+xml`,
      `csta+xml`,
      `vnd.3gpp.mcptt-ue-init-config+xml`,
      `vnd.ms-htmlhelp`,
      `xenc+xml`,
      `tamp-sequence-adjust`,
      `cfw`,
      `vnd.oipf.spdiscovery+xml`,
      `vnd.sycle+xml`,
      `vnd.sun.wadl+xml`,
      `vnd.lotus-notes`,
      `vnd.epson.msf`,
      `vnd.oma.bcast.sprov+xml`,
      `vnd.unity`,
      `vnd.oipf.cspg-hexbinary`,
      `vnd.uplanet.list-wbxml`,
      `rpki-publication`,
      `vnd.3gpp-prose-pc3ach+xml`,
      `vnd.xacml+json`,
      `vnd.dvb.notif-ia-registration-request+xml`,
      `vnd.japannet-registration-wakeup`,
      `vnd.kinar`,
      `vnd.3gpp.mcvideo-mbms-usage-info+xml`,
      `vnd.openxmlformats-officedocument.spreadsheetml.dialogsheet+xml`,
      `vnd.3gpp2.tcap`,
      `mac-compactpro`,
      `widget`,
      `raptorfec`,
      `tlsrpt+json`,
      `vnd.bluetooth.le.oob`,
      `x-ms-shortcut`,
      `oxps`,
      `metalink+xml`,
      `mpeg4-iod`,
      `vnd.nokia.n-gage.ac+xml`,
      `javascript`,
      `vnd.seis+json`,
      `vnd.xfdl.webform`,
      `vnd.datalog`,
      `alto-endpointprop+json`,
      `vnd.omaloc-supl-init`,
      `vnd.eclipse.ditto+json`,
      `vnd.vividence.scriptfile`,
      `xml`,
      `vnd.wmf.bootstrap`,
      `vnd.afpc.modca-cmtable`,
      `vnd.syncml.dmtnds+wbxml`,
      `vnd.uplanet.alert-wbxml`,
      `vnd.shana.informed.package`,
      `vnd.onepagertamx`,
      `vnd.apple.numbers`,
      `vnd.ncd.control`,
      `vnd.xmpie.plan`,
      `vnd.3gpp.mcvideo-ue-config+xml`,
      `x-pkcs12`,
      `vnd.efi.iso`,
      `emergencycalldata.cap+xml`,
      `vnd.sun.xml.math`,
      `vnd.imagemeter.folder+zip`,
      `vnd.ms-printing.printticket+xml`,
      `vnd.ms-tnef`,
      `vnd.openxmlformats-officedocument.spreadsheetml.pivottable+xml`,
      `x-font-linux-psf`,
      `vnd.radisys.msml-dialog-fax-detect+xml`,
      `provenance+xml`,
      `xml-dtd`,
      `vnd.cybank`,
      `vnd.yellowriver-custom-menu`,
      `vnd.ims.lti.v2.toolsettings.simple+json`,
      `vnd.tri.onesource`,
      `vnd.belightsoft.lhzd+zip`,
      `vnd.bpf3`,
      `vnd.apache.thrift.compact`,
      `vnd.radisys.msml-audit-dialog+xml`,
      `x-subrip`,
      `vnd.oma.poc.detailed-progress-report+xml`,
      `vnd.openxmlformats-officedocument.drawingml.chart+xml`,
      `bacnet-xdd+zip`,
      `vnd.swiftview-ics`,
      `vnd.ds-keypoint`,
      `kpml-request+xml`,
      `vnd.resilient.logic`,
      `session-info`,
      `vnd.cyclonedx+xml`,
      `vnd.sealed.ppt`,
      `sru+xml`,
      `route-apd+xml`,
      `hyperstudio`,
      `cdmi-queue`,
      `mbms-register-response+xml`,
      `dca-rft`,
      `vnd.syncml+xml`,
      `vnd.ecowin.fileupdate`,
      `x-java-archive-diff`,
      `x-wais-source`,
      `x-futuresplash`,
      `rlmi+xml`,
      `vnd.mobius.plc`,
      `vnd.oma.lwm2m+cbor`,
      `vnd.radisys.msml-dialog-fax-sendrecv+xml`,
      `vnd.3gpp.mid-call+xml`,
      `pkcs7-signature`,
      `vnd.openxmlformats-officedocument.presentationml.slidelayout+xml`,
      `vnd.imagemeter.image+zip`,
      `vnd.hp-hpgl`,
      `vnd.gerber`,
      `vnd.ah-barcode`,
      `vnd.sealed.3df`,
      `jose+json`,
      `pics-rules`,
      `vnd.cab-jscript`,
      `xcap-caps+xml`,
      `vnd.afpc.modca-mediummap`,
      `vnd.xmpie.dpkg`,
      `vnd.3gpp.srvcc-ext+xml`,
      `vnd.ipld.car`,
      `vnd.radisys.msml-audit-stream+xml`,
      `vnd.iptc.g2.catalogitem+xml`,
      `inkml+xml`,
      `vnd.epson.quickanime`,
      `vnd.bbf.usp.error`,
      `xliff+xml`,
      `remote-printing`,
      `vnd.fints`,
      `vnd.oipf.mippvcontrolmessage+xml`,
      `vnd.nokia.ncd`,
      `vnd.aplextor.warrp+json`,
      `mud+json`,
      `vnd.3gpp.bsf+xml`,
      `rdf+xml`,
      `im-iscomposing+xml`,
      `vnd.3gpp.s1ap`,
      `riscos`,
      `vnd.enphase.envoy`,
      `scvp-vp-response`,
      `vnd.umajin`,
      `x-font-vfont`,
      `vnd.gov.sk.e-form+zip`,
      `vnd.openblox.game+xml`,
      `alto-costmap+json`,
      `font-sfnt`,
      `vnd.openxmlformats-officedocument.spreadsheetml.usernames+xml`,
      `vnd.motorola.iprm`,
      `pkix-attr-cert`,
      `vnd.nokia.n-gage.data`,
      `index.vnd`,
      `trig`,
      `vnd.oma.push`,
      `tzif-leap`,
      `vnd.3gpp-prose-pc3a+xml`,
      `dskpp+xml`,
      `prs.nprend`,
      `vnd.oma.dcd`,
      `vnd.intercon.formnet`,
      `vnd.ms-powerpoint.template.macroenabled.12`,
      `vnd.businessobjects`,
      `vnd.openxmlformats-officedocument.customxmlproperties+xml`,
      `x-sql`,
      `java-vm`,
      `csrattrs`,
      `vnd.groove-injector`,
      `vnd.oma.cab-pcc+xml`,
      `yang`,
      `cstadata+xml`,
      `vnd.stardivision.math`,
      `sgml`,
      `vnd.openxmlformats-officedocument.presentationml.presprops+xml`,
      `a2l`,
      `vnd.openxmlformats-officedocument.wordprocessingml.numbering+xml`,
      `vnd.pmi.widget`,
      `mac-binhex40`,
      `vnd.sealed.net`,
      `vnd.ms-pki.seccat`,
      `vnd.hal+json`,
      `vnd.hdt`,
      `senml+xml`,
      `vnd.fujixerox.art-ex`,
      `pkix-cert`,
      `vnd.syncml.ds.notification`,
      `vnd.previewsystems.box`,
      `vnd.oma.pal+xml`,
      `vnd.irepository.package+xml`,
      `ibe-pkg-reply+xml`,
      `wita`,
      `samlassertion+xml`,
      `x-msmetafile`,
      `vnd.openxmlformats-officedocument.presentationml.template.main+xml`,
      `vnd.sar`,
      `xml-patch+xml`,
      `vnd.ms-project`,
      `vnd.picsel`,
      `vnd.mseq`,
      `vnd.balsamiq.bmpr`,
      `vnd.3gpp.mcdata-affiliation-command+xml`,
      `vnd.oasis.opendocument.image`,
      `vnd.blink-idb-value-wrapper`,
      `x-x509-ca-ra-cert`,
      `vnd.dvb.ipdcesgaccess`,
      `vnd.jisp`,
      `vnd.groove-vcard`,
      `vnd.rn-realmedia-vbr`,
      `vnd.globalplatform.card-content-mgt-response`,
      `cea`,
      `vnd.oma.scidm.messages+xml`,
      `timestamped-data`,
      `vnd.novadigm.edm`,
      `vnd.ms-windows.printerpairing`,
      `x-iso9660-image`,
      `vnd.informedcontrol.rms+xml`,
      `dns-message`,
      `vnd.openxmlformats-officedocument.wordprocessingml.websettings+xml`,
      `vnd.nitf`,
      `vnd.wap.slc`,
      `vnd.collabio.xodocuments.presentation`,
      `vnd.route66.link66+xml`,
      `vnd.fluxtime.clip`,
      `vnd.bbf.usp.msg`,
      `vnd.dvb.notif-ia-msglist+xml`,
      `vnd.marlin.drm.mdcf`,
      `vnd.wv.csp+wbxml`,
      `vnd.openxmlformats-officedocument.spreadsheetml.chartsheet+xml`,
      `vnd.dreamfactory`,
      `vnd.contact.cmsg`,
      `prs.alvestrand.titrax-sheet`,
      `vnd.3m.post-it-notes`,
      `vnd.collabio.xodocuments.document-template`,
      `pem-certificate-chain`,
      `x-bcpio`,
      `vnd.ibm.secure-container`,
      `vnd.microsoft.windows.thumbnail-cache`,
      `x-gzip`,
      `jf2feed+json`,
      `vnd.3gpp.mcptt-service-config+xml`,
      `vnd.iptc.g2.planningitem+xml`,
      `conference-info+xml`,
      `x-dtbncx+xml`,
      `x-web-app-manifest+json`,
      `p21+zip`,
      `vnd.ntt-local.file-transfer`,
      `vnd.ms-excel`,
      `vnd.symbian.install`,
      `x-netcdf`,
      `vnd.grafeq`,
      `atomsvc+xml`,
      `mf4`,
      `vnd.sema`,
      `vnd.minisoft-hp3000-save`,
      `vnd.recordare.musicxml+xml`,
      `vnd.3gpp.mcvideo-user-profile+xml`,
      `xhtml-voice+xml`,
      `vnd.iptc.g2.knowledgeitem+xml`,
      `taxii+json`,
      `vnd.accpac.simply.imp`,
      `vnd.ms-outlook`,
      `x-cdlink`,
      `vnd.software602.filler.form-xml-zip`,
      `vnd.ecdis-update`,
      `vnd.wolfram.player`,
      `mbms-register+xml`,
      `vnd.radisys.moml+xml`,
      `vnd.3gpp.interworking-data`,
      `vnd.stardivision.calc`,
      `x-font-speedo`,
      `vnd.proteus.magazine`,
      `sbml+xml`,
      `vnd.amazon.mobi8-ebook`,
      `vnd.ms-3mfdocument`,
      `vnd.dece.data`,
      `vnd.oma.bcast.imd+xml`,
      `vnd.doremir.scorecloud-binary-document`,
      `x-hdf`,
      `vnd.ms-excel.sheet.macroenabled.12`,
      `dvcs`,
      `vnd.vel+json`,
      `vnd.mobius.mqy`,
      `vnd.3gpp.vae-info+xml`,
      `vnd.syncml.dm+wbxml`,
      `vnd.etsi.asic-e+zip`,
      `vnd.openxmlformats-officedocument.presentationml.commentauthors+xml`,
      `vnd.ms-printschematicket+xml`,
      `aif+json`,
      `vnd.isac.fcs`,
      `vnd.eprints.data+xml`,
      `mp21`,
      `vnd.openxmlformats-officedocument.presentationml.comments+xml`,
      `vnd.openofficeorg.extension`,
      `vnd.syncml.dmtnds+xml`,
      `x-msdos-program`,
      `vnd.micrografx.flo`,
      `vnd.bekitzur-stech+json`,
      `dns`,
      `x-bittorrent`,
      `vnd.oipf.contentaccessdownload+xml`,
      `edifact`,
      `vnd.cups-pdf`,
      `vnd.oxli.countgraph`,
      `vnd.espass-espass+zip`,
      `thraud+xml`,
      `alto-networkmap+json`,
      `sensml-exi`,
      `wsdl+xml`,
      `nlsml+xml`,
      `tamp-status-query`,
      `vnd.sealedmedia.softseal.pdf`,
      `vnd.dvb.esgcontainer`,
      `vnd.oasis.opendocument.chart`,
      `vnd.osgi.bundle`,
      `mathml+xml`,
      `oda`,
      `vnd.oma.poc.optimized-progress-report+xml`,
      `scvp-cv-request`,
      `vnd.maxar.archive.3tz+zip`,
      `vnd.airzip.filesecure.azf`,
      `vnd.oasis.opendocument.database`,
      `vnd.powerbuilder75`,
      `ssml+xml`,
      `vnd.openxmlformats-officedocument.drawingml.chartshapes+xml`,
      `dots+cbor`,
      `alto-endpointpropparams+json`,
      `x-tads`,
      `rdap+json`,
      `metalink4+xml`,
      `vnd.geocube+xml`,
      `3gpphalforms+json`,
      `vnd.coffeescript`,
      `vnd.stardivision.writer-global`,
      `vnd.openxmlformats-officedocument.wordprocessingml.comments+xml`,
      `vnd.geo+json`,
      `vnd.sun.xml.calc.template`,
      `x-msdownload`,
      `vnd.pocketlearn`,
      `x-lua-bytecode`,
      `vnd.gpxsee.map+xml`,
      `vnd.geoplan`,
      `resource-lists-diff+xml`,
      `vnd.qualcomm.brew-app-res`,
      `vnd.dvb.iptv.alfec-enhancement`,
      `vnd.groove-help`,
      `vnd.iso11783-10+zip`,
      `vnd.3gpp.sms`,
      `vnd.fsc.weblaunch`,
      `vnd.quarantainenet`,
      `vnd.gentoo.ebuild`,
      `vnd.dvb.ipdcroaming`,
      `vnd.byu.uapi+json`,
      `vnd.oma.dcdc`,
      `express`,
      `vnd.ms-cab-compressed`,
      `vnd.openxmlformats-officedocument.spreadsheetml.comments+xml`,
      `link-format`,
      `vnd.3gpp.seal-location-info+xml`,
      `vnd.pg.format`,
      `vnd.3gpp.pic-bw-large`,
      `vnd.etsi.mcid+xml`,
      `vnd.kidspiration`,
      `x-research-info-systems`,
      `vnd.meridian-slingshot`,
      `vnd.restful+json`,
      `fdf`,
      `vnd.gentoo.pkgmetadata+xml`,
      `vnd.accpac.simply.aso`,
      `vnd.immervision-ivu`,
      `vnd.crick.clicker.palette`,
      `atsc-rdt+json`,
      `vnd.astraea-software.iota`,
      `vnd.motorola.flexsuite.gotap`,
      `vnd.dpgraph`,
      `vnd.genomatix.tuxedo`,
      `vnd.3gpp.mcdata-ue-config+xml`,
      `vnd.kde.kspread`,
      `x-ns-proxy-autoconfig`,
      `ibe-pp-data`,
      `vnd.3gpp.mcdata-regroup+xml`,
      `emergencycalldata.comment+xml`,
      `vnd.apple.keynote`,
      `timestamp-query`,
      `vnd.las`,
      `vnd.oipf.dae.svg+xml`,
      `vnd.mitsubishi.misty-guard.trustweb`,
      `vnd.sun.xml.draw`,
      `x-7z-compressed`,
      `vnd.openxmlformats-officedocument.presentationml.presentation.main+xml`,
      `x-apple-diskimage`,
      `vnd.orange.indata`,
      `cu-seeme`,
      `x-x509-next-ca-cert`,
      `x-virtualbox-vhd`,
      `media-policy-dataset+xml`,
      `vnd.ocf+cbor`,
      `vnd.japannet-verification-wakeup`,
      `vnd.spotfire.dxp`,
      `mpeg4-generic`,
      `vemmi`,
      `x-tex-tfm`,
      `vnd.ms-powerpoint`,
      `vnd.hhe.lesson-player`,
      `hjson`,
      `vnd.msign`,
      `vnd.openxmlformats-officedocument.presentationml.tablestyles+xml`,
      `news-groupinfo`,
      `simplesymbolcontainer`,
      `msword`,
      `x-gramps-xml`,
      `vnd.hp-pclxl`,
      `emergencycalldata.subscriberinfo+xml`,
      `vnd.seemail`,
      `dii`,
      `cwl`,
      `vnd.mif`,
      `x-t3vm-image`,
      `font-woff`,
      `pdf`,
      `vnd.openxmlformats-officedocument.spreadsheetml.sheetmetadata+xml`,
      `vnd.chipnuts.karaoke-mmd`,
      `vnd.ims.lis.v2.result+json`,
      `pkcs7-mime`,
      `xv+xml`,
      `x-ms-wmd`,
      `vnd.marlin.drm.conftoken+xml`,
      `vnd.oracle.resource+json`,
      `cose-key-set`,
      `vnd.3gpp.access-transfer-events+xml`,
      `vnd.ms-excel.template.macroenabled.12`,
      `pidf+xml`,
      `vnd.geogebra.slides`,
      `emergencycalldata.legacyesn+json`,
      `relax-ng-compact-syntax`,
      `vnd.insors.igm`,
      `vnd.fujixerox.ddd`,
      `vnd.google-apps.document`,
      `vnd.xara`,
      `vnd.mapbox-vector-tile`,
      `vnd.tml`,
      `merge-patch+json`,
      `vnd.syncml.dm+xml`,
      `x-mie`,
      `vnd.openxmlformats-package.relationships+xml`,
      `vnd.ms-package.obfuscated-opentype`,
      `alto-error+json`,
      `vnd.oma.group-usage-list+xml`,
      `cea-2018+xml`,
      `vnd.yamaha.openscoreformat.osfpvg+xml`,
      `vnd.radisys.msml-dialog-speech+xml`,
      `vnd.3gpp.srvcc-info+xml`,
      `vnd.japannet-jpnstore-wakeup`,
      `alto-costmapfilter+json`,
      `vnd.ims.imsccv1p1`,
      `vnd.ms-windows.wsd.oob`,
      `swid+xml`,
      `rpki-checklist`,
      `vnd.dtg.local.html`,
      `yin+xml`,
    )
    lazy val any: MediaType       = new MediaType("application", "*")
  }

  object x_shader {

    lazy val `x-vertex`: MediaType =
      new MediaType("x-shader", "x-vertex", compressible = true, binary = false)

    lazy val `x-fragment`: MediaType =
      new MediaType("x-shader", "x-fragment", compressible = true, binary = false)

    lazy val all: List[MediaType] = List(`x-vertex`, `x-fragment`)
    lazy val any: MediaType       = new MediaType("x-shader", "*")
  }

  object model {

    lazy val `vnd.gtw`: MediaType =
      new MediaType("model", "vnd.gtw", compressible = false, binary = true, List("gtw"))

    lazy val `vnd.parasolid.transmit.text`: MediaType =
      new MediaType("model", "vnd.parasolid.transmit.text", compressible = false, binary = true, List("x_t"))

    lazy val `vnd.usdz+zip`: MediaType =
      new MediaType("model", "vnd.usdz+zip", compressible = false, binary = true, List("usdz"))

    lazy val `iges`: MediaType =
      new MediaType("model", "iges", compressible = false, binary = true, List("igs", "iges"))

    lazy val `vnd.rosette.annotated-data-model`: MediaType =
      new MediaType("model", "vnd.rosette.annotated-data-model", compressible = false, binary = true)

    lazy val `vnd.valve.source.compiled-map`: MediaType =
      new MediaType("model", "vnd.valve.source.compiled-map", compressible = false, binary = true, List("bsp"))

    lazy val `vnd.pytha.pyox`: MediaType =
      new MediaType("model", "vnd.pytha.pyox", compressible = false, binary = true, List("pyo", "pyox"))

    lazy val `x3d+fastinfoset`: MediaType =
      new MediaType("model", "x3d+fastinfoset", compressible = false, binary = true, List("x3db"))

    lazy val `x3d+binary`: MediaType =
      new MediaType("model", "x3d+binary", compressible = false, binary = true, List("x3db", "x3dbz"))

    lazy val `mesh`: MediaType =
      new MediaType("model", "mesh", compressible = false, binary = true, List("msh", "mesh", "silo"))

    lazy val `mtl`: MediaType =
      new MediaType("model", "mtl", compressible = false, binary = true, List("mtl"))

    lazy val `vnd.collada+xml`: MediaType =
      new MediaType("model", "vnd.collada+xml", compressible = true, binary = true, List("dae"))

    lazy val `vnd.vtu`: MediaType =
      new MediaType("model", "vnd.vtu", compressible = false, binary = true, List("vtu"))

    lazy val `prc`: MediaType =
      new MediaType("model", "prc", compressible = false, binary = true, List("prc"))

    lazy val `x3d-vrml`: MediaType =
      new MediaType("model", "x3d-vrml", compressible = false, binary = true, List("x3dv"))

    lazy val `vnd.opengex`: MediaType =
      new MediaType("model", "vnd.opengex", compressible = false, binary = true, List("ogex"))

    lazy val `step+xml`: MediaType =
      new MediaType("model", "step+xml", compressible = true, binary = true, List("stpx"))

    lazy val `vnd.moml+xml`: MediaType =
      new MediaType("model", "vnd.moml+xml", compressible = true, binary = true)

    lazy val `vrml`: MediaType =
      new MediaType("model", "vrml", compressible = false, binary = true, List("wrl", "vrml"))

    lazy val `vnd.gdl`: MediaType =
      new MediaType("model", "vnd.gdl", compressible = false, binary = true, List("gdl"))

    lazy val `obj`: MediaType =
      new MediaType("model", "obj", compressible = false, binary = true, List("obj"))

    lazy val `jt`: MediaType =
      new MediaType("model", "jt", compressible = false, binary = true, List("jt"))

    lazy val `vnd.gs-gdl`: MediaType =
      new MediaType("model", "vnd.gs-gdl", compressible = false, binary = true)

    lazy val `u3d`: MediaType =
      new MediaType("model", "u3d", compressible = false, binary = true, List("u3d"))

    lazy val `vnd.parasolid.transmit.binary`: MediaType =
      new MediaType("model", "vnd.parasolid.transmit.binary", compressible = false, binary = true, List("x_b"))

    lazy val `vnd.sap.vds`: MediaType =
      new MediaType("model", "vnd.sap.vds", compressible = false, binary = true, List("vds"))

    lazy val `x3d+xml`: MediaType =
      new MediaType("model", "x3d+xml", compressible = true, binary = true, List("x3d", "x3dz"))

    lazy val `vnd.gs.gdl`: MediaType =
      new MediaType("model", "vnd.gs.gdl", compressible = false, binary = true)

    lazy val `x3d+vrml`: MediaType =
      new MediaType("model", "x3d+vrml", compressible = false, binary = true, List("x3dv", "x3dvz"))

    lazy val `3mf`: MediaType =
      new MediaType("model", "3mf", compressible = false, binary = true, List("3mf"))

    lazy val `step+zip`: MediaType =
      new MediaType("model", "step+zip", compressible = false, binary = true, List("stpz"))

    lazy val `step`: MediaType =
      new MediaType("model", "step", compressible = false, binary = true)

    lazy val `gltf-binary`: MediaType =
      new MediaType("model", "gltf-binary", compressible = true, binary = true, List("glb"))

    lazy val `stl`: MediaType =
      new MediaType("model", "stl", compressible = false, binary = true, List("stl"))

    lazy val `vnd.dwf`: MediaType =
      new MediaType("model", "vnd.dwf", compressible = false, binary = true, List("dwf"))

    lazy val `step-xml+zip`: MediaType =
      new MediaType("model", "step-xml+zip", compressible = false, binary = true, List("stpxz"))

    lazy val `gltf+json`: MediaType =
      new MediaType("model", "gltf+json", compressible = true, binary = true, List("gltf"))

    lazy val `e57`: MediaType =
      new MediaType("model", "e57", compressible = false, binary = true)

    lazy val `vnd.flatland.3dml`: MediaType =
      new MediaType("model", "vnd.flatland.3dml", compressible = false, binary = true)

    lazy val `vnd.mts`: MediaType =
      new MediaType("model", "vnd.mts", compressible = false, binary = true, List("mts"))

    lazy val `vnd.cld`: MediaType =
      new MediaType("model", "vnd.cld", compressible = false, binary = true, List("cld"))

    lazy val `vnd.usda`: MediaType =
      new MediaType("model", "vnd.usda", compressible = false, binary = true, List("usda"))

    lazy val all: List[MediaType] = List(
      `vnd.gtw`,
      `vnd.parasolid.transmit.text`,
      `vnd.usdz+zip`,
      `iges`,
      `vnd.rosette.annotated-data-model`,
      `vnd.valve.source.compiled-map`,
      `vnd.pytha.pyox`,
      `x3d+fastinfoset`,
      `x3d+binary`,
      `mesh`,
      `mtl`,
      `vnd.collada+xml`,
      `vnd.vtu`,
      `prc`,
      `x3d-vrml`,
      `vnd.opengex`,
      `step+xml`,
      `vnd.moml+xml`,
      `vrml`,
      `vnd.gdl`,
      `obj`,
      `jt`,
      `vnd.gs-gdl`,
      `u3d`,
      `vnd.parasolid.transmit.binary`,
      `vnd.sap.vds`,
      `x3d+xml`,
      `vnd.gs.gdl`,
      `x3d+vrml`,
      `3mf`,
      `step+zip`,
      `step`,
      `gltf-binary`,
      `stl`,
      `vnd.dwf`,
      `step-xml+zip`,
      `gltf+json`,
      `e57`,
      `vnd.flatland.3dml`,
      `vnd.mts`,
      `vnd.cld`,
      `vnd.usda`,
    )
    lazy val any: MediaType       = new MediaType("model", "*")
  }

  object image {

    lazy val `g3fax`: MediaType =
      new MediaType("image", "g3fax", compressible = false, binary = true, List("g3"))

    lazy val `vnd.radiance`: MediaType =
      new MediaType("image", "vnd.radiance", compressible = false, binary = true)

    lazy val `x-ms-bmp`: MediaType =
      new MediaType("image", "x-ms-bmp", compressible = true, binary = true, List("bmp"))

    lazy val `x-cmx`: MediaType =
      new MediaType("image", "x-cmx", compressible = false, binary = true, List("cmx"))

    lazy val `ief`: MediaType =
      new MediaType("image", "ief", compressible = false, binary = true, List("ief"))

    lazy val `vnd.microsoft.icon`: MediaType =
      new MediaType("image", "vnd.microsoft.icon", compressible = true, binary = true, List("ico"))

    lazy val `avif`: MediaType =
      new MediaType("image", "avif", compressible = false, binary = true, List("avif"))

    lazy val `tiff-fx`: MediaType =
      new MediaType("image", "tiff-fx", compressible = false, binary = true, List("tfx"))

    lazy val `x-rgb`: MediaType =
      new MediaType("image", "x-rgb", compressible = false, binary = true, List("rgb"))

    lazy val `jxsc`: MediaType =
      new MediaType("image", "jxsc", compressible = false, binary = true, List("jxsc"))

    lazy val `gif`: MediaType =
      new MediaType("image", "gif", compressible = false, binary = true, List("gif"))

    lazy val `vnd.net-fpx`: MediaType =
      new MediaType("image", "vnd.net-fpx", compressible = false, binary = true, List("npx"))

    lazy val `apng`: MediaType =
      new MediaType("image", "apng", compressible = false, binary = true, List("apng"))

    lazy val `fits`: MediaType =
      new MediaType("image", "fits", compressible = false, binary = true, List("fits"))

    lazy val `vnd.fpx`: MediaType =
      new MediaType("image", "vnd.fpx", compressible = false, binary = true, List("fpx"))

    lazy val `prs.btif`: MediaType =
      new MediaType("image", "prs.btif", compressible = false, binary = true, List("btif", "btf"))

    lazy val `x-portable-bitmap`: MediaType =
      new MediaType("image", "x-portable-bitmap", compressible = false, binary = true, List("pbm"))

    lazy val `vnd.valve.source.texture`: MediaType =
      new MediaType("image", "vnd.valve.source.texture", compressible = false, binary = true, List("vtf"))

    lazy val `bmp`: MediaType =
      new MediaType("image", "bmp", compressible = true, binary = true, List("bmp", "dib"))

    lazy val `jxsi`: MediaType =
      new MediaType("image", "jxsi", compressible = false, binary = true, List("jxsi"))

    lazy val `vnd.sealedmedia.softseal.gif`: MediaType =
      new MediaType("image", "vnd.sealedmedia.softseal.gif", compressible = false, binary = true)

    lazy val `vnd.dxf`: MediaType =
      new MediaType("image", "vnd.dxf", compressible = false, binary = true, List("dxf"))

    lazy val `vnd.wap.wbmp`: MediaType =
      new MediaType("image", "vnd.wap.wbmp", compressible = false, binary = true, List("wbmp"))

    lazy val `jxrs`: MediaType =
      new MediaType("image", "jxrs", compressible = false, binary = true, List("jxrs"))

    lazy val `x-icon`: MediaType =
      new MediaType("image", "x-icon", compressible = true, binary = true, List("ico"))

    lazy val `dpx`: MediaType =
      new MediaType("image", "dpx", compressible = false, binary = true, List("dpx"))

    lazy val `tiff`: MediaType =
      new MediaType("image", "tiff", compressible = false, binary = true, List("tif", "tiff"))

    lazy val `jphc`: MediaType =
      new MediaType("image", "jphc", compressible = false, binary = true, List("jhc"))

    lazy val `jpm`: MediaType =
      new MediaType("image", "jpm", compressible = false, binary = true, List("jpm", "jpgm"))

    lazy val `jp2`: MediaType =
      new MediaType("image", "jp2", compressible = false, binary = true, List("jp2", "jpg2"))

    lazy val `heif`: MediaType =
      new MediaType("image", "heif", compressible = false, binary = true, List("heif"))

    lazy val `jxs`: MediaType =
      new MediaType("image", "jxs", compressible = false, binary = true, List("jxs"))

    lazy val `heif-sequence`: MediaType =
      new MediaType("image", "heif-sequence", compressible = false, binary = true, List("heifs"))

    lazy val `vnd.fastbidsheet`: MediaType =
      new MediaType("image", "vnd.fastbidsheet", compressible = false, binary = true, List("fbs"))

    lazy val `avci`: MediaType =
      new MediaType("image", "avci", compressible = false, binary = true, List("avci"))

    lazy val `x-cmu-raster`: MediaType =
      new MediaType("image", "x-cmu-raster", compressible = false, binary = true, List("ras"))

    lazy val `vnd.adobe.photoshop`: MediaType =
      new MediaType("image", "vnd.adobe.photoshop", compressible = true, binary = true, List("psd"))

    lazy val `ktx`: MediaType =
      new MediaType("image", "ktx", compressible = false, binary = true, List("ktx"))

    lazy val `heic-sequence`: MediaType =
      new MediaType("image", "heic-sequence", compressible = false, binary = true, List("heics"))

    lazy val `vnd.dece.graphic`: MediaType =
      new MediaType(
        "image",
        "vnd.dece.graphic",
        compressible = false,
        binary = true,
        List("uvi", "uvvi", "uvg", "uvvg"),
      )

    lazy val `pwg-raster`: MediaType =
      new MediaType("image", "pwg-raster", compressible = false, binary = true)

    lazy val `vnd.dvb.subtitle`: MediaType =
      new MediaType("image", "vnd.dvb.subtitle", compressible = false, binary = true, List("sub"))

    lazy val `vnd.ms-photo`: MediaType =
      new MediaType("image", "vnd.ms-photo", compressible = false, binary = true, List("wdp"))

    lazy val `jph`: MediaType =
      new MediaType("image", "jph", compressible = false, binary = true, List("jph"))

    lazy val `sgi`: MediaType =
      new MediaType("image", "sgi", compressible = false, binary = true, List("sgi"))

    lazy val `x-xbitmap`: MediaType =
      new MediaType("image", "x-xbitmap", compressible = false, binary = true, List("xbm"))

    lazy val `prs.pti`: MediaType =
      new MediaType("image", "prs.pti", compressible = false, binary = true, List("pti"))

    lazy val `aces`: MediaType =
      new MediaType("image", "aces", compressible = false, binary = true, List("exr"))

    lazy val `vnd.ms-dds`: MediaType =
      new MediaType("image", "vnd.ms-dds", compressible = true, binary = true, List("dds"))

    lazy val `vnd.fujixerox.edmics-mmr`: MediaType =
      new MediaType("image", "vnd.fujixerox.edmics-mmr", compressible = false, binary = true, List("mmr"))

    lazy val `x-jng`: MediaType =
      new MediaType("image", "x-jng", compressible = false, binary = true, List("jng"))

    lazy val `png`: MediaType =
      new MediaType("image", "png", compressible = false, binary = true, List("png"))

    lazy val `x-pict`: MediaType =
      new MediaType("image", "x-pict", compressible = false, binary = true, List("pic", "pct"))

    lazy val `vnd.sealed.png`: MediaType =
      new MediaType("image", "vnd.sealed.png", compressible = false, binary = true)

    lazy val `x-freehand`: MediaType =
      new MediaType("image", "x-freehand", compressible = false, binary = true, List("fh", "fhc", "fh4", "fh5", "fh7"))

    lazy val `x-portable-anymap`: MediaType =
      new MediaType("image", "x-portable-anymap", compressible = false, binary = true, List("pnm"))

    lazy val `jpx`: MediaType =
      new MediaType("image", "jpx", compressible = false, binary = true, List("jpx", "jpf"))

    lazy val `pjpeg`: MediaType =
      new MediaType("image", "pjpeg", compressible = false, binary = true)

    lazy val `ktx2`: MediaType =
      new MediaType("image", "ktx2", compressible = false, binary = true, List("ktx2"))

    lazy val `vnd.cns.inf2`: MediaType =
      new MediaType("image", "vnd.cns.inf2", compressible = false, binary = true)

    lazy val `x-xpixmap`: MediaType =
      new MediaType("image", "x-xpixmap", compressible = false, binary = true, List("xpm"))

    lazy val `vnd.tencent.tap`: MediaType =
      new MediaType("image", "vnd.tencent.tap", compressible = false, binary = true, List("tap"))

    lazy val `x-3ds`: MediaType =
      new MediaType("image", "x-3ds", compressible = false, binary = true, List("3ds"))

    lazy val `vnd.airzip.accelerator.azv`: MediaType =
      new MediaType("image", "vnd.airzip.accelerator.azv", compressible = false, binary = true, List("azv"))

    lazy val `x-mrsid-image`: MediaType =
      new MediaType("image", "x-mrsid-image", compressible = false, binary = true, List("sid"))

    lazy val `avcs`: MediaType =
      new MediaType("image", "avcs", compressible = false, binary = true, List("avcs"))

    lazy val `x-portable-pixmap`: MediaType =
      new MediaType("image", "x-portable-pixmap", compressible = false, binary = true, List("ppm"))

    lazy val `vnd.fujixerox.edmics-rlc`: MediaType =
      new MediaType("image", "vnd.fujixerox.edmics-rlc", compressible = false, binary = true, List("rlc"))

    lazy val `vnd.xiff`: MediaType =
      new MediaType("image", "vnd.xiff", compressible = false, binary = true, List("xif"))

    lazy val `webp`: MediaType =
      new MediaType("image", "webp", compressible = false, binary = true, List("webp"))

    lazy val `vnd.pco.b16`: MediaType =
      new MediaType("image", "vnd.pco.b16", compressible = false, binary = true, List("b16"))

    lazy val `vnd.globalgraphics.pgb`: MediaType =
      new MediaType("image", "vnd.globalgraphics.pgb", compressible = false, binary = true)

    lazy val `vnd.svf`: MediaType =
      new MediaType("image", "vnd.svf", compressible = false, binary = true)

    lazy val `vnd.sealedmedia.softseal.jpg`: MediaType =
      new MediaType("image", "vnd.sealedmedia.softseal.jpg", compressible = false, binary = true)

    lazy val `hsj2`: MediaType =
      new MediaType("image", "hsj2", compressible = false, binary = true, List("hsj2"))

    lazy val `dicom-rle`: MediaType =
      new MediaType("image", "dicom-rle", compressible = false, binary = true, List("drle"))

    lazy val `vnd.zbrush.pcx`: MediaType =
      new MediaType("image", "vnd.zbrush.pcx", compressible = false, binary = true, List("pcx"))

    lazy val `emf`: MediaType =
      new MediaType("image", "emf", compressible = false, binary = true, List("emf"))

    lazy val `cgm`: MediaType =
      new MediaType("image", "cgm", compressible = false, binary = true, List("cgm"))

    lazy val `jxss`: MediaType =
      new MediaType("image", "jxss", compressible = false, binary = true, List("jxss"))

    lazy val `svg+xml`: MediaType =
      new MediaType("image", "svg+xml", compressible = true, binary = true, List("svg", "svgz"))

    lazy val `naplps`: MediaType =
      new MediaType("image", "naplps", compressible = false, binary = true)

    lazy val `hej2k`: MediaType =
      new MediaType("image", "hej2k", compressible = false, binary = true, List("hej2"))

    lazy val `jls`: MediaType =
      new MediaType("image", "jls", compressible = false, binary = true, List("jls"))

    lazy val `jxra`: MediaType =
      new MediaType("image", "jxra", compressible = false, binary = true, List("jxra"))

    lazy val `x-xwindowdump`: MediaType =
      new MediaType("image", "x-xwindowdump", compressible = false, binary = true, List("xwd"))

    lazy val `t38`: MediaType =
      new MediaType("image", "t38", compressible = false, binary = true, List("t38"))

    lazy val `vnd.fst`: MediaType =
      new MediaType("image", "vnd.fst", compressible = false, binary = true, List("fst"))

    lazy val `vnd.mozilla.apng`: MediaType =
      new MediaType("image", "vnd.mozilla.apng", compressible = false, binary = true)

    lazy val `x-tga`: MediaType =
      new MediaType("image", "x-tga", compressible = false, binary = true, List("tga"))

    lazy val `jpeg`: MediaType =
      new MediaType("image", "jpeg", compressible = false, binary = true, List("jpeg", "jpg", "jpe"))

    lazy val `vnd.dwg`: MediaType =
      new MediaType("image", "vnd.dwg", compressible = false, binary = true, List("dwg"))

    lazy val `vnd.mix`: MediaType =
      new MediaType("image", "vnd.mix", compressible = false, binary = true)

    lazy val `wmf`: MediaType =
      new MediaType("image", "wmf", compressible = false, binary = true, List("wmf"))

    lazy val `x-xcf`: MediaType =
      new MediaType("image", "x-xcf", compressible = false, binary = true)

    lazy val `x-pcx`: MediaType =
      new MediaType("image", "x-pcx", compressible = false, binary = true, List("pcx"))

    lazy val `x-portable-graymap`: MediaType =
      new MediaType("image", "x-portable-graymap", compressible = false, binary = true, List("pgm"))

    lazy val `heic`: MediaType =
      new MediaType("image", "heic", compressible = false, binary = true, List("heic"))

    lazy val `vnd.djvu`: MediaType =
      new MediaType("image", "vnd.djvu", compressible = false, binary = true, List("djvu", "djv"))

    lazy val `jxr`: MediaType =
      new MediaType("image", "jxr", compressible = false, binary = true, List("jxr"))

    lazy val `vnd.ms-modi`: MediaType =
      new MediaType("image", "vnd.ms-modi", compressible = false, binary = true, List("mdi"))

    lazy val all: List[MediaType] = List(
      `g3fax`,
      `vnd.radiance`,
      `x-ms-bmp`,
      `x-cmx`,
      `ief`,
      `vnd.microsoft.icon`,
      `avif`,
      `tiff-fx`,
      `x-rgb`,
      `jxsc`,
      `gif`,
      `vnd.net-fpx`,
      `apng`,
      `fits`,
      `vnd.fpx`,
      `prs.btif`,
      `x-portable-bitmap`,
      `vnd.valve.source.texture`,
      `bmp`,
      `jxsi`,
      `vnd.sealedmedia.softseal.gif`,
      `vnd.dxf`,
      `vnd.wap.wbmp`,
      `jxrs`,
      `x-icon`,
      `dpx`,
      `tiff`,
      `jphc`,
      `jpm`,
      `jp2`,
      `heif`,
      `jxs`,
      `heif-sequence`,
      `vnd.fastbidsheet`,
      `avci`,
      `x-cmu-raster`,
      `vnd.adobe.photoshop`,
      `ktx`,
      `heic-sequence`,
      `vnd.dece.graphic`,
      `pwg-raster`,
      `vnd.dvb.subtitle`,
      `vnd.ms-photo`,
      `jph`,
      `sgi`,
      `x-xbitmap`,
      `prs.pti`,
      `aces`,
      `vnd.ms-dds`,
      `vnd.fujixerox.edmics-mmr`,
      `x-jng`,
      `png`,
      `x-pict`,
      `vnd.sealed.png`,
      `x-freehand`,
      `x-portable-anymap`,
      `jpx`,
      `pjpeg`,
      `ktx2`,
      `vnd.cns.inf2`,
      `x-xpixmap`,
      `vnd.tencent.tap`,
      `x-3ds`,
      `vnd.airzip.accelerator.azv`,
      `x-mrsid-image`,
      `avcs`,
      `x-portable-pixmap`,
      `vnd.fujixerox.edmics-rlc`,
      `vnd.xiff`,
      `webp`,
      `vnd.pco.b16`,
      `vnd.globalgraphics.pgb`,
      `vnd.svf`,
      `vnd.sealedmedia.softseal.jpg`,
      `hsj2`,
      `dicom-rle`,
      `vnd.zbrush.pcx`,
      `emf`,
      `cgm`,
      `jxss`,
      `svg+xml`,
      `naplps`,
      `hej2k`,
      `jls`,
      `jxra`,
      `x-xwindowdump`,
      `t38`,
      `vnd.fst`,
      `vnd.mozilla.apng`,
      `x-tga`,
      `jpeg`,
      `vnd.dwg`,
      `vnd.mix`,
      `wmf`,
      `x-xcf`,
      `x-pcx`,
      `x-portable-graymap`,
      `heic`,
      `vnd.djvu`,
      `jxr`,
      `vnd.ms-modi`,
    )
    lazy val any: MediaType       = new MediaType("image", "*")
  }

  object text {

    lazy val `vnd.wap.wmlscript`: MediaType =
      new MediaType("text", "vnd.wap.wmlscript", compressible = false, binary = false, List("wmls"))

    lazy val `ulpfec`: MediaType =
      new MediaType("text", "ulpfec", compressible = false, binary = false)

    lazy val `vnd.radisys.msml-basic-layout`: MediaType =
      new MediaType("text", "vnd.radisys.msml-basic-layout", compressible = false, binary = false)

    lazy val `shex`: MediaType =
      new MediaType("text", "shex", compressible = false, binary = false, List("shex"))

    lazy val `shaclc`: MediaType =
      new MediaType("text", "shaclc", compressible = false, binary = false)

    lazy val `vnd.curl.dcurl`: MediaType =
      new MediaType("text", "vnd.curl.dcurl", compressible = false, binary = false, List("dcurl"))

    lazy val `xml-external-parsed-entity`: MediaType =
      new MediaType("text", "xml-external-parsed-entity", compressible = false, binary = false)

    lazy val `fhirpath`: MediaType =
      new MediaType("text", "fhirpath", compressible = false, binary = false)

    lazy val `turtle`: MediaType =
      new MediaType("text", "turtle", compressible = false, binary = false, List("ttl"))

    lazy val `vnd.sun.j2me.app-descriptor`: MediaType =
      new MediaType("text", "vnd.sun.j2me.app-descriptor", compressible = false, binary = false, List("jad"))

    lazy val `x-sass`: MediaType =
      new MediaType("text", "x-sass", compressible = false, binary = false, List("sass"))

    lazy val `x-vcard`: MediaType =
      new MediaType("text", "x-vcard", compressible = false, binary = false, List("vcf"))

    lazy val `vnd.a`: MediaType =
      new MediaType("text", "vnd.a", compressible = false, binary = false)

    lazy val `uri-list`: MediaType =
      new MediaType("text", "uri-list", compressible = true, binary = false, List("uri", "uris", "urls"))

    lazy val `calender`: MediaType =
      new MediaType("text", "calender", compressible = true, binary = false)

    lazy val `markdown`: MediaType =
      new MediaType("text", "markdown", compressible = true, binary = false, List("md", "markdown"))

    lazy val `vnd.dvb.subtitle`: MediaType =
      new MediaType("text", "vnd.dvb.subtitle", compressible = false, binary = false, List("sub"))

    lazy val `ecmascript`: MediaType =
      new MediaType("text", "ecmascript", compressible = false, binary = false)

    lazy val `x-processing`: MediaType =
      new MediaType("text", "x-processing", compressible = true, binary = false, List("pde"))

    lazy val `cmd`: MediaType =
      new MediaType("text", "cmd", compressible = true, binary = false)

    lazy val `tab-separated-values`: MediaType =
      new MediaType("text", "tab-separated-values", compressible = true, binary = false, List("tsv"))

    lazy val `less`: MediaType =
      new MediaType("text", "less", compressible = true, binary = false, List("less"))

    lazy val `cache-manifest`: MediaType =
      new MediaType("text", "cache-manifest", compressible = true, binary = false, List("appcache", "manifest"))

    lazy val `vnd.wap.sl`: MediaType =
      new MediaType("text", "vnd.wap.sl", compressible = false, binary = false)

    lazy val `dns`: MediaType =
      new MediaType("text", "dns", compressible = false, binary = false)

    lazy val `strings`: MediaType =
      new MediaType("text", "strings", compressible = false, binary = false)

    lazy val `csv`: MediaType =
      new MediaType("text", "csv", compressible = true, binary = false, List("csv"))

    lazy val `vnd.gml`: MediaType =
      new MediaType("text", "vnd.gml", compressible = false, binary = false)

    lazy val `x-setext`: MediaType =
      new MediaType("text", "x-setext", compressible = false, binary = false, List("etx"))

    lazy val `x-lua`: MediaType =
      new MediaType("text", "x-lua", compressible = false, binary = false, List("lua"))

    lazy val `x-vcalendar`: MediaType =
      new MediaType("text", "x-vcalendar", compressible = false, binary = false, List("vcs"))

    lazy val `vnd.exchangeable`: MediaType =
      new MediaType("text", "vnd.exchangeable", compressible = false, binary = false)

    lazy val `wgsl`: MediaType =
      new MediaType("text", "wgsl", compressible = false, binary = false, List("wgsl"))

    lazy val `rfc822-headers`: MediaType =
      new MediaType("text", "rfc822-headers", compressible = false, binary = false)

    lazy val `vnd.graphviz`: MediaType =
      new MediaType("text", "vnd.graphviz", compressible = false, binary = false, List("gv"))

    lazy val `red`: MediaType =
      new MediaType("text", "red", compressible = false, binary = false)

    lazy val `x-fortran`: MediaType =
      new MediaType("text", "x-fortran", compressible = false, binary = false, List("f", "for", "f77", "f90"))

    lazy val `cql`: MediaType =
      new MediaType("text", "cql", compressible = false, binary = false)

    lazy val `vnd.esmertec.theme-descriptor`: MediaType =
      new MediaType("text", "vnd.esmertec.theme-descriptor", compressible = false, binary = false)

    lazy val `directory`: MediaType =
      new MediaType("text", "directory", compressible = false, binary = false)

    lazy val `css`: MediaType =
      new MediaType("text", "css", compressible = true, binary = false, List("css"))

    lazy val `vnd.latex-z`: MediaType =
      new MediaType("text", "vnd.latex-z", compressible = false, binary = false)

    lazy val `vnd.fly`: MediaType =
      new MediaType("text", "vnd.fly", compressible = false, binary = false, List("fly"))

    lazy val `vnd.senx.warpscript`: MediaType =
      new MediaType("text", "vnd.senx.warpscript", compressible = false, binary = false)

    lazy val `vnd.sosi`: MediaType =
      new MediaType("text", "vnd.sosi", compressible = false, binary = false)

    lazy val `parameters`: MediaType =
      new MediaType("text", "parameters", compressible = false, binary = false)

    lazy val `provenance-notation`: MediaType =
      new MediaType("text", "provenance-notation", compressible = false, binary = false)

    lazy val `x-markdown`: MediaType =
      new MediaType("text", "x-markdown", compressible = true, binary = false, List("mkd"))

    lazy val `x-handlebars-template`: MediaType =
      new MediaType("text", "x-handlebars-template", compressible = false, binary = false, List("hbs"))

    lazy val `csv-schema`: MediaType =
      new MediaType("text", "csv-schema", compressible = false, binary = false)

    lazy val `rtp-enc-aescm128`: MediaType =
      new MediaType("text", "rtp-enc-aescm128", compressible = false, binary = false)

    lazy val `jcr-cnd`: MediaType =
      new MediaType("text", "jcr-cnd", compressible = false, binary = false)

    lazy val `vnd.hans`: MediaType =
      new MediaType("text", "vnd.hans", compressible = false, binary = false)

    lazy val `x-java-source`: MediaType =
      new MediaType("text", "x-java-source", compressible = false, binary = false, List("java"))

    lazy val `vnd.curl.scurl`: MediaType =
      new MediaType("text", "vnd.curl.scurl", compressible = false, binary = false, List("scurl"))

    lazy val `encaprtp`: MediaType =
      new MediaType("text", "encaprtp", compressible = false, binary = false)

    lazy val `vnd.iptc.newsml`: MediaType =
      new MediaType("text", "vnd.iptc.newsml", compressible = false, binary = false)

    lazy val `vnd.fmi.flexstor`: MediaType =
      new MediaType("text", "vnd.fmi.flexstor", compressible = false, binary = false, List("flx"))

    lazy val `vnd.wap.wml`: MediaType =
      new MediaType("text", "vnd.wap.wml", compressible = false, binary = false, List("wml"))

    lazy val `cql-identifier`: MediaType =
      new MediaType("text", "cql-identifier", compressible = false, binary = false)

    lazy val `vcard`: MediaType =
      new MediaType("text", "vcard", compressible = true, binary = false, List("vcard"))

    lazy val `rtploopback`: MediaType =
      new MediaType("text", "rtploopback", compressible = false, binary = false)

    lazy val `cql-expression`: MediaType =
      new MediaType("text", "cql-expression", compressible = false, binary = false)

    lazy val `x-opml`: MediaType =
      new MediaType("text", "x-opml", compressible = false, binary = false, List("opml"))

    lazy val `event-stream`: MediaType =
      new MediaType("text", "event-stream", compressible = true, binary = false)

    lazy val `slim`: MediaType =
      new MediaType("text", "slim", compressible = false, binary = false, List("slim", "slm"))

    lazy val `x-pascal`: MediaType =
      new MediaType("text", "x-pascal", compressible = false, binary = false, List("p", "pas"))

    lazy val `parityfec`: MediaType =
      new MediaType("text", "parityfec", compressible = false, binary = false)

    lazy val `prs.prop.logic`: MediaType =
      new MediaType("text", "prs.prop.logic", compressible = false, binary = false)

    lazy val `t140`: MediaType =
      new MediaType("text", "t140", compressible = false, binary = false)

    lazy val `javascript`: MediaType =
      new MediaType("text", "javascript", compressible = true, binary = false, List("js", "mjs"))

    lazy val `vnd.dmclientscript`: MediaType =
      new MediaType("text", "vnd.dmclientscript", compressible = false, binary = false)

    lazy val `x-sfv`: MediaType =
      new MediaType("text", "x-sfv", compressible = false, binary = false, List("sfv"))

    lazy val `flexfec`: MediaType =
      new MediaType("text", "flexfec", compressible = false, binary = false)

    lazy val `spdx`: MediaType =
      new MediaType("text", "spdx", compressible = false, binary = false, List("spdx"))

    lazy val `stylus`: MediaType =
      new MediaType("text", "stylus", compressible = false, binary = false, List("stylus", "styl"))

    lazy val `coffeescript`: MediaType =
      new MediaType("text", "coffeescript", compressible = false, binary = false, List("coffee", "litcoffee"))

    lazy val `yaml`: MediaType =
      new MediaType("text", "yaml", compressible = true, binary = false, List("yaml", "yml"))

    lazy val `vnd.familysearch.gedcom`: MediaType =
      new MediaType("text", "vnd.familysearch.gedcom", compressible = false, binary = false, List("ged"))

    lazy val `vnd.in3d.3dml`: MediaType =
      new MediaType("text", "vnd.in3d.3dml", compressible = false, binary = false, List("3dml"))

    lazy val `x-c`: MediaType =
      new MediaType(
        "text",
        "x-c",
        compressible = false,
        binary = false,
        List("c", "cc", "cxx", "cpp", "h", "hh", "dic"),
      )

    lazy val `x-gwt-rpc`: MediaType =
      new MediaType("text", "x-gwt-rpc", compressible = true, binary = false)

    lazy val `grammar-ref-list`: MediaType =
      new MediaType("text", "grammar-ref-list", compressible = false, binary = false)

    lazy val `plain`: MediaType =
      new MediaType(
        "text",
        "plain",
        compressible = true,
        binary = false,
        List("txt", "text", "conf", "def", "list", "log", "in", "ini"),
      )

    lazy val `vnd.in3d.spot`: MediaType =
      new MediaType("text", "vnd.in3d.spot", compressible = false, binary = false, List("spot"))

    lazy val `x-asm`: MediaType =
      new MediaType("text", "x-asm", compressible = false, binary = false, List("s", "asm"))

    lazy val `x-scss`: MediaType =
      new MediaType("text", "x-scss", compressible = false, binary = false, List("scss"))

    lazy val `gff3`: MediaType =
      new MediaType("text", "gff3", compressible = false, binary = false)

    lazy val `vnd.trolltech.linguist`: MediaType =
      new MediaType("text", "vnd.trolltech.linguist", compressible = false, binary = false)

    lazy val `jsx`: MediaType =
      new MediaType("text", "jsx", compressible = true, binary = false, List("jsx"))

    lazy val `vnd.debian.copyright`: MediaType =
      new MediaType("text", "vnd.debian.copyright", compressible = false, binary = false)

    lazy val `enriched`: MediaType =
      new MediaType("text", "enriched", compressible = false, binary = false)

    lazy val `vnd.curl`: MediaType =
      new MediaType("text", "vnd.curl", compressible = false, binary = false, List("curl"))

    lazy val `x-component`: MediaType =
      new MediaType("text", "x-component", compressible = false, binary = false, List("htc"))

    lazy val `mdx`: MediaType =
      new MediaType("text", "mdx", compressible = true, binary = false, List("mdx"))

    lazy val `jade`: MediaType =
      new MediaType("text", "jade", compressible = false, binary = false, List("jade"))

    lazy val `hl7v2`: MediaType =
      new MediaType("text", "hl7v2", compressible = false, binary = false)

    lazy val `x-suse-ymp`: MediaType =
      new MediaType("text", "x-suse-ymp", compressible = true, binary = false, List("ymp"))

    lazy val `rtx`: MediaType =
      new MediaType("text", "rtx", compressible = false, binary = false)

    lazy val `vnd.ficlab.flt`: MediaType =
      new MediaType("text", "vnd.ficlab.flt", compressible = false, binary = false)

    lazy val `html`: MediaType =
      new MediaType("text", "html", compressible = true, binary = false, List("html", "htm", "shtml"))

    lazy val `1d-interleaved-parityfec`: MediaType =
      new MediaType("text", "1d-interleaved-parityfec", compressible = false, binary = false)

    lazy val `vnd.ascii-art`: MediaType =
      new MediaType("text", "vnd.ascii-art", compressible = false, binary = false)

    lazy val `x-nfo`: MediaType =
      new MediaType("text", "x-nfo", compressible = false, binary = false, List("nfo"))

    lazy val `mizar`: MediaType =
      new MediaType("text", "mizar", compressible = false, binary = false)

    lazy val `sgml`: MediaType =
      new MediaType("text", "sgml", compressible = false, binary = false, List("sgml", "sgm"))

    lazy val `vnd.motorola.reflex`: MediaType =
      new MediaType("text", "vnd.motorola.reflex", compressible = false, binary = false)

    lazy val `vnd.hgl`: MediaType =
      new MediaType("text", "vnd.hgl", compressible = false, binary = false)

    lazy val `vnd.abc`: MediaType =
      new MediaType("text", "vnd.abc", compressible = false, binary = false)

    lazy val `vnd.net2phone.commcenter.command`: MediaType =
      new MediaType("text", "vnd.net2phone.commcenter.command", compressible = false, binary = false)

    lazy val `prs.lines.tag`: MediaType =
      new MediaType("text", "prs.lines.tag", compressible = false, binary = false, List("dsc"))

    lazy val `vnd.iptc.nitf`: MediaType =
      new MediaType("text", "vnd.iptc.nitf", compressible = false, binary = false)

    lazy val `vnd.wap.si`: MediaType =
      new MediaType("text", "vnd.wap.si", compressible = false, binary = false)

    lazy val `richtext`: MediaType =
      new MediaType("text", "richtext", compressible = true, binary = false, List("rtx"))

    lazy val `vnd.curl.mcurl`: MediaType =
      new MediaType("text", "vnd.curl.mcurl", compressible = false, binary = false, List("mcurl"))

    lazy val `vnd.ms-mediapackage`: MediaType =
      new MediaType("text", "vnd.ms-mediapackage", compressible = false, binary = false)

    lazy val `n3`: MediaType =
      new MediaType("text", "n3", compressible = true, binary = false, List("n3"))

    lazy val `vtt`: MediaType =
      new MediaType("text", "vtt", compressible = true, binary = false, List("vtt"))

    lazy val `fwdred`: MediaType =
      new MediaType("text", "fwdred", compressible = false, binary = false)

    lazy val `prs.fallenstein.rst`: MediaType =
      new MediaType("text", "prs.fallenstein.rst", compressible = false, binary = false)

    lazy val `mathml`: MediaType =
      new MediaType("text", "mathml", compressible = false, binary = false, List("mml"))

    lazy val `vnd.si.uricatalogue`: MediaType =
      new MediaType("text", "vnd.si.uricatalogue", compressible = false, binary = false)

    lazy val `xml`: MediaType =
      new MediaType("text", "xml", compressible = true, binary = false, List("xml"))

    lazy val `rtf`: MediaType =
      new MediaType("text", "rtf", compressible = true, binary = false, List("rtf"))

    lazy val `x-uuencode`: MediaType =
      new MediaType("text", "x-uuencode", compressible = false, binary = false, List("uu"))

    lazy val `troff`: MediaType =
      new MediaType("text", "troff", compressible = false, binary = false, List("t", "tr", "roff", "man", "me", "ms"))

    lazy val `x-jquery-tmpl`: MediaType =
      new MediaType("text", "x-jquery-tmpl", compressible = true, binary = false)

    lazy val `x-org`: MediaType =
      new MediaType("text", "x-org", compressible = true, binary = false, List("org"))

    lazy val `calendar`: MediaType =
      new MediaType("text", "calendar", compressible = false, binary = false, List("ics", "ifb"))

    lazy val `raptorfec`: MediaType =
      new MediaType("text", "raptorfec", compressible = false, binary = false)

    lazy val all: List[MediaType] = List(
      `vnd.wap.wmlscript`,
      `ulpfec`,
      `vnd.radisys.msml-basic-layout`,
      `shex`,
      `shaclc`,
      `vnd.curl.dcurl`,
      `xml-external-parsed-entity`,
      `fhirpath`,
      `turtle`,
      `vnd.sun.j2me.app-descriptor`,
      `x-sass`,
      `x-vcard`,
      `vnd.a`,
      `uri-list`,
      `calender`,
      `markdown`,
      `vnd.dvb.subtitle`,
      `ecmascript`,
      `x-processing`,
      `cmd`,
      `tab-separated-values`,
      `less`,
      `cache-manifest`,
      `vnd.wap.sl`,
      `dns`,
      `strings`,
      `csv`,
      `vnd.gml`,
      `x-setext`,
      `x-lua`,
      `x-vcalendar`,
      `vnd.exchangeable`,
      `wgsl`,
      `rfc822-headers`,
      `vnd.graphviz`,
      `red`,
      `x-fortran`,
      `cql`,
      `vnd.esmertec.theme-descriptor`,
      `directory`,
      `css`,
      `vnd.latex-z`,
      `vnd.fly`,
      `vnd.senx.warpscript`,
      `vnd.sosi`,
      `parameters`,
      `provenance-notation`,
      `x-markdown`,
      `x-handlebars-template`,
      `csv-schema`,
      `rtp-enc-aescm128`,
      `jcr-cnd`,
      `vnd.hans`,
      `x-java-source`,
      `vnd.curl.scurl`,
      `encaprtp`,
      `vnd.iptc.newsml`,
      `vnd.fmi.flexstor`,
      `vnd.wap.wml`,
      `cql-identifier`,
      `vcard`,
      `rtploopback`,
      `cql-expression`,
      `x-opml`,
      `event-stream`,
      `slim`,
      `x-pascal`,
      `parityfec`,
      `prs.prop.logic`,
      `t140`,
      `javascript`,
      `vnd.dmclientscript`,
      `x-sfv`,
      `flexfec`,
      `spdx`,
      `stylus`,
      `coffeescript`,
      `yaml`,
      `vnd.familysearch.gedcom`,
      `vnd.in3d.3dml`,
      `x-c`,
      `x-gwt-rpc`,
      `grammar-ref-list`,
      `plain`,
      `vnd.in3d.spot`,
      `x-asm`,
      `x-scss`,
      `gff3`,
      `vnd.trolltech.linguist`,
      `jsx`,
      `vnd.debian.copyright`,
      `enriched`,
      `vnd.curl`,
      `x-component`,
      `mdx`,
      `jade`,
      `hl7v2`,
      `x-suse-ymp`,
      `rtx`,
      `vnd.ficlab.flt`,
      `html`,
      `1d-interleaved-parityfec`,
      `vnd.ascii-art`,
      `x-nfo`,
      `mizar`,
      `sgml`,
      `vnd.motorola.reflex`,
      `vnd.hgl`,
      `vnd.abc`,
      `vnd.net2phone.commcenter.command`,
      `prs.lines.tag`,
      `vnd.iptc.nitf`,
      `vnd.wap.si`,
      `richtext`,
      `vnd.curl.mcurl`,
      `vnd.ms-mediapackage`,
      `n3`,
      `vtt`,
      `fwdred`,
      `prs.fallenstein.rst`,
      `mathml`,
      `vnd.si.uricatalogue`,
      `xml`,
      `rtf`,
      `x-uuencode`,
      `troff`,
      `x-jquery-tmpl`,
      `x-org`,
      `calendar`,
      `raptorfec`,
    )
    lazy val any: MediaType       = new MediaType("text", "*")
  }

  object font {

    lazy val `woff`: MediaType =
      new MediaType("font", "woff", compressible = false, binary = true, List("woff"))

    lazy val `ttf`: MediaType =
      new MediaType("font", "ttf", compressible = true, binary = true, List("ttf"))

    lazy val `otf`: MediaType =
      new MediaType("font", "otf", compressible = true, binary = true, List("otf"))

    lazy val `woff2`: MediaType =
      new MediaType("font", "woff2", compressible = false, binary = true, List("woff2"))

    lazy val `collection`: MediaType =
      new MediaType("font", "collection", compressible = false, binary = true, List("ttc"))

    lazy val `sfnt`: MediaType =
      new MediaType("font", "sfnt", compressible = false, binary = true)

    lazy val all: List[MediaType] = List(`woff`, `ttf`, `otf`, `woff2`, `collection`, `sfnt`)
    lazy val any: MediaType       = new MediaType("font", "*")
  }

  object video {

    lazy val `vnd.dlna.mpeg-tts`: MediaType =
      new MediaType("video", "vnd.dlna.mpeg-tts", compressible = false, binary = true)

    lazy val `vnd.dece.video`: MediaType =
      new MediaType("video", "vnd.dece.video", compressible = false, binary = true, List("uvv", "uvvv"))

    lazy val `1d-interleaved-parityfec`: MediaType =
      new MediaType("video", "1d-interleaved-parityfec", compressible = false, binary = true)

    lazy val `nv`: MediaType =
      new MediaType("video", "nv", compressible = false, binary = true)

    lazy val `vnd.directv.mpeg-tts`: MediaType =
      new MediaType("video", "vnd.directv.mpeg-tts", compressible = false, binary = true)

    lazy val `bmpeg`: MediaType =
      new MediaType("video", "bmpeg", compressible = false, binary = true)

    lazy val `quicktime`: MediaType =
      new MediaType("video", "quicktime", compressible = false, binary = true, List("qt", "mov"))

    lazy val `h264`: MediaType =
      new MediaType("video", "h264", compressible = false, binary = true, List("h264"))

    lazy val `vnd.ms-playready.media.pyv`: MediaType =
      new MediaType("video", "vnd.ms-playready.media.pyv", compressible = false, binary = true, List("pyv"))

    lazy val `rtp-enc-aescm128`: MediaType =
      new MediaType("video", "rtp-enc-aescm128", compressible = false, binary = true)

    lazy val `x-mng`: MediaType =
      new MediaType("video", "x-mng", compressible = false, binary = true, List("mng"))

    lazy val `celb`: MediaType =
      new MediaType("video", "celb", compressible = false, binary = true)

    lazy val `raptorfec`: MediaType =
      new MediaType("video", "raptorfec", compressible = false, binary = true)

    lazy val `vnd.dece.pd`: MediaType =
      new MediaType("video", "vnd.dece.pd", compressible = false, binary = true, List("uvp", "uvvp"))

    lazy val `mpeg`: MediaType =
      new MediaType("video", "mpeg", compressible = false, binary = true, List("mpeg", "mpg", "mpe", "m1v", "m2v"))

    lazy val `smpte291`: MediaType =
      new MediaType("video", "smpte291", compressible = false, binary = true)

    lazy val `vnd.dece.mp4`: MediaType =
      new MediaType("video", "vnd.dece.mp4", compressible = false, binary = true)

    lazy val `encaprtp`: MediaType =
      new MediaType("video", "encaprtp", compressible = false, binary = true)

    lazy val `vnd.dece.hd`: MediaType =
      new MediaType("video", "vnd.dece.hd", compressible = false, binary = true, List("uvh", "uvvh"))

    lazy val `h263-2000`: MediaType =
      new MediaType("video", "h263-2000", compressible = false, binary = true)

    lazy val `vnd.iptvforum.2dparityfec-1010`: MediaType =
      new MediaType("video", "vnd.iptvforum.2dparityfec-1010", compressible = false, binary = true)

    lazy val `vnd.mpegurl`: MediaType =
      new MediaType("video", "vnd.mpegurl", compressible = false, binary = true, List("mxu", "m4u"))

    lazy val `jxsv`: MediaType =
      new MediaType("video", "jxsv", compressible = false, binary = true)

    lazy val `vnd.nokia.interleaved-multimedia`: MediaType =
      new MediaType("video", "vnd.nokia.interleaved-multimedia", compressible = false, binary = true)

    lazy val `bt656`: MediaType =
      new MediaType("video", "bt656", compressible = false, binary = true)

    lazy val `x-sgi-movie`: MediaType =
      new MediaType("video", "x-sgi-movie", compressible = false, binary = true, List("movie"))

    lazy val `x-fli`: MediaType =
      new MediaType("video", "x-fli", compressible = false, binary = true, List("fli"))

    lazy val `vnd.youtube.yt`: MediaType =
      new MediaType("video", "vnd.youtube.yt", compressible = false, binary = true)

    lazy val `vnd.iptvforum.ttsavc`: MediaType =
      new MediaType("video", "vnd.iptvforum.ttsavc", compressible = false, binary = true)

    lazy val `h261`: MediaType =
      new MediaType("video", "h261", compressible = false, binary = true, List("h261"))

    lazy val `parityfec`: MediaType =
      new MediaType("video", "parityfec", compressible = false, binary = true)

    lazy val `3gpp-tt`: MediaType =
      new MediaType("video", "3gpp-tt", compressible = false, binary = true)

    lazy val `3gpp2`: MediaType =
      new MediaType("video", "3gpp2", compressible = false, binary = true, List("3g2"))

    lazy val `x-ms-wmv`: MediaType =
      new MediaType("video", "x-ms-wmv", compressible = false, binary = true, List("wmv"))

    lazy val `vnd.nokia.mp4vr`: MediaType =
      new MediaType("video", "vnd.nokia.mp4vr", compressible = false, binary = true)

    lazy val `h265`: MediaType =
      new MediaType("video", "h265", compressible = false, binary = true)

    lazy val `vnd.dece.sd`: MediaType =
      new MediaType("video", "vnd.dece.sd", compressible = false, binary = true, List("uvs", "uvvs"))

    lazy val `x-ms-wm`: MediaType =
      new MediaType("video", "x-ms-wm", compressible = false, binary = true, List("wm"))

    lazy val `vnd.iptvforum.ttsmpeg2`: MediaType =
      new MediaType("video", "vnd.iptvforum.ttsmpeg2", compressible = false, binary = true)

    lazy val `vnd.sealedmedia.softseal.mov`: MediaType =
      new MediaType("video", "vnd.sealedmedia.softseal.mov", compressible = false, binary = true)

    lazy val `vnd.sealed.swf`: MediaType =
      new MediaType("video", "vnd.sealed.swf", compressible = false, binary = true)

    lazy val `ffv1`: MediaType =
      new MediaType("video", "ffv1", compressible = false, binary = true)

    lazy val `ogg`: MediaType =
      new MediaType("video", "ogg", compressible = false, binary = true, List("ogv"))

    lazy val `vnd.cctv`: MediaType =
      new MediaType("video", "vnd.cctv", compressible = false, binary = true)

    lazy val `iso.segment`: MediaType =
      new MediaType("video", "iso.segment", compressible = false, binary = true, List("m4s"))

    lazy val `x-ms-vob`: MediaType =
      new MediaType("video", "x-ms-vob", compressible = false, binary = true, List("vob"))

    lazy val `vp9`: MediaType =
      new MediaType("video", "vp9", compressible = false, binary = true)

    lazy val `vnd.iptvforum.2dparityfec-2005`: MediaType =
      new MediaType("video", "vnd.iptvforum.2dparityfec-2005", compressible = false, binary = true)

    lazy val `rtx`: MediaType =
      new MediaType("video", "rtx", compressible = false, binary = true)

    lazy val `scip`: MediaType =
      new MediaType("video", "scip", compressible = false, binary = true)

    lazy val `vnd.fvt`: MediaType =
      new MediaType("video", "vnd.fvt", compressible = false, binary = true, List("fvt"))

    lazy val `mpv`: MediaType =
      new MediaType("video", "mpv", compressible = false, binary = true)

    lazy val `vnd.uvvu.mp4`: MediaType =
      new MediaType("video", "vnd.uvvu.mp4", compressible = false, binary = true, List("uvu", "uvvu"))

    lazy val `ulpfec`: MediaType =
      new MediaType("video", "ulpfec", compressible = false, binary = true)

    lazy val `av1`: MediaType =
      new MediaType("video", "av1", compressible = false, binary = true)

    lazy val `vnd.motorola.video`: MediaType =
      new MediaType("video", "vnd.motorola.video", compressible = false, binary = true)

    lazy val `vnd.hns.video`: MediaType =
      new MediaType("video", "vnd.hns.video", compressible = false, binary = true)

    lazy val `mp2p`: MediaType =
      new MediaType("video", "mp2p", compressible = false, binary = true)

    lazy val `h266`: MediaType =
      new MediaType("video", "h266", compressible = false, binary = true)

    lazy val `rtploopback`: MediaType =
      new MediaType("video", "rtploopback", compressible = false, binary = true)

    lazy val `h263-1998`: MediaType =
      new MediaType("video", "h263-1998", compressible = false, binary = true)

    lazy val `vnd.radgamettools.smacker`: MediaType =
      new MediaType("video", "vnd.radgamettools.smacker", compressible = false, binary = true)

    lazy val `smpte292m`: MediaType =
      new MediaType("video", "smpte292m", compressible = false, binary = true)

    lazy val `x-matroska`: MediaType =
      new MediaType("video", "x-matroska", compressible = false, binary = true, List("mkv", "mk3d", "mks"))

    lazy val `vnd.directv.mpeg`: MediaType =
      new MediaType("video", "vnd.directv.mpeg", compressible = false, binary = true)

    lazy val `x-msvideo`: MediaType =
      new MediaType("video", "x-msvideo", compressible = false, binary = true, List("avi"))

    lazy val `flexfec`: MediaType =
      new MediaType("video", "flexfec", compressible = false, binary = true)

    lazy val `webm`: MediaType =
      new MediaType("video", "webm", compressible = false, binary = true, List("webm"))

    lazy val `raw`: MediaType =
      new MediaType("video", "raw", compressible = false, binary = true)

    lazy val `vnd.iptvforum.1dparityfec-1010`: MediaType =
      new MediaType("video", "vnd.iptvforum.1dparityfec-1010", compressible = false, binary = true)

    lazy val `h264-svc`: MediaType =
      new MediaType("video", "h264-svc", compressible = false, binary = true)

    lazy val `x-f4v`: MediaType =
      new MediaType("video", "x-f4v", compressible = false, binary = true, List("f4v"))

    lazy val `vnd.radgamettools.bink`: MediaType =
      new MediaType("video", "vnd.radgamettools.bink", compressible = false, binary = true)

    lazy val `vnd.iptvforum.1dparityfec-2005`: MediaType =
      new MediaType("video", "vnd.iptvforum.1dparityfec-2005", compressible = false, binary = true)

    lazy val `h263`: MediaType =
      new MediaType("video", "h263", compressible = false, binary = true, List("h263"))

    lazy val `vnd.sealed.mpeg1`: MediaType =
      new MediaType("video", "vnd.sealed.mpeg1", compressible = false, binary = true)

    lazy val `vnd.objectvideo`: MediaType =
      new MediaType("video", "vnd.objectvideo", compressible = false, binary = true)

    lazy val `mj2`: MediaType =
      new MediaType("video", "mj2", compressible = false, binary = true, List("mj2", "mjp2"))

    lazy val `x-ms-asf`: MediaType =
      new MediaType("video", "x-ms-asf", compressible = false, binary = true, List("asf", "asx"))

    lazy val `x-smv`: MediaType =
      new MediaType("video", "x-smv", compressible = false, binary = true, List("smv"))

    lazy val `3gpp`: MediaType =
      new MediaType("video", "3gpp", compressible = false, binary = true, List("3gp", "3gpp"))

    lazy val `vc2`: MediaType =
      new MediaType("video", "vc2", compressible = false, binary = true)

    lazy val `vnd.sealed.mpeg4`: MediaType =
      new MediaType("video", "vnd.sealed.mpeg4", compressible = false, binary = true)

    lazy val `vnd.vivo`: MediaType =
      new MediaType("video", "vnd.vivo", compressible = false, binary = true, List("viv"))

    lazy val `vnd.dece.mobile`: MediaType =
      new MediaType("video", "vnd.dece.mobile", compressible = false, binary = true, List("uvm", "uvvm"))

    lazy val `pointer`: MediaType =
      new MediaType("video", "pointer", compressible = false, binary = true)

    lazy val `vnd.nokia.videovoip`: MediaType =
      new MediaType("video", "vnd.nokia.videovoip", compressible = false, binary = true)

    lazy val `vc1`: MediaType =
      new MediaType("video", "vc1", compressible = false, binary = true)

    lazy val `jpm`: MediaType =
      new MediaType("video", "jpm", compressible = false, binary = true, List("jpm", "jpgm"))

    lazy val `mp4v-es`: MediaType =
      new MediaType("video", "mp4v-es", compressible = false, binary = true)

    lazy val `x-ms-wmx`: MediaType =
      new MediaType("video", "x-ms-wmx", compressible = false, binary = true, List("wmx"))

    lazy val `h264-rcdo`: MediaType =
      new MediaType("video", "h264-rcdo", compressible = false, binary = true)

    lazy val `mpeg4-generic`: MediaType =
      new MediaType("video", "mpeg4-generic", compressible = false, binary = true)

    lazy val `mp2t`: MediaType =
      new MediaType("video", "mp2t", compressible = false, binary = true, List("ts"))

    lazy val `dv`: MediaType =
      new MediaType("video", "dv", compressible = false, binary = true)

    lazy val `vnd.motorola.videop`: MediaType =
      new MediaType("video", "vnd.motorola.videop", compressible = false, binary = true)

    lazy val `vnd.dvb.file`: MediaType =
      new MediaType("video", "vnd.dvb.file", compressible = false, binary = true, List("dvb"))

    lazy val `jpeg2000`: MediaType =
      new MediaType("video", "jpeg2000", compressible = false, binary = true)

    lazy val `vp8`: MediaType =
      new MediaType("video", "vp8", compressible = false, binary = true)

    lazy val `jpeg`: MediaType =
      new MediaType("video", "jpeg", compressible = false, binary = true, List("jpgv"))

    lazy val `x-m4v`: MediaType =
      new MediaType("video", "x-m4v", compressible = false, binary = true, List("m4v"))

    lazy val `mp1s`: MediaType =
      new MediaType("video", "mp1s", compressible = false, binary = true)

    lazy val `x-ms-wvx`: MediaType =
      new MediaType("video", "x-ms-wvx", compressible = false, binary = true, List("wvx"))

    lazy val `x-flv`: MediaType =
      new MediaType("video", "x-flv", compressible = false, binary = true, List("flv"))

    lazy val `mp4`: MediaType =
      new MediaType("video", "mp4", compressible = false, binary = true, List("mp4", "mp4v", "mpg4"))

    lazy val all: List[MediaType] = List(
      `vnd.dlna.mpeg-tts`,
      `vnd.dece.video`,
      `1d-interleaved-parityfec`,
      `nv`,
      `vnd.directv.mpeg-tts`,
      `bmpeg`,
      `quicktime`,
      `h264`,
      `vnd.ms-playready.media.pyv`,
      `rtp-enc-aescm128`,
      `x-mng`,
      `celb`,
      `raptorfec`,
      `vnd.dece.pd`,
      `mpeg`,
      `smpte291`,
      `vnd.dece.mp4`,
      `encaprtp`,
      `vnd.dece.hd`,
      `h263-2000`,
      `vnd.iptvforum.2dparityfec-1010`,
      `vnd.mpegurl`,
      `jxsv`,
      `vnd.nokia.interleaved-multimedia`,
      `bt656`,
      `x-sgi-movie`,
      `x-fli`,
      `vnd.youtube.yt`,
      `vnd.iptvforum.ttsavc`,
      `h261`,
      `parityfec`,
      `3gpp-tt`,
      `3gpp2`,
      `x-ms-wmv`,
      `vnd.nokia.mp4vr`,
      `h265`,
      `vnd.dece.sd`,
      `x-ms-wm`,
      `vnd.iptvforum.ttsmpeg2`,
      `vnd.sealedmedia.softseal.mov`,
      `vnd.sealed.swf`,
      `ffv1`,
      `ogg`,
      `vnd.cctv`,
      `iso.segment`,
      `x-ms-vob`,
      `vp9`,
      `vnd.iptvforum.2dparityfec-2005`,
      `rtx`,
      `scip`,
      `vnd.fvt`,
      `mpv`,
      `vnd.uvvu.mp4`,
      `ulpfec`,
      `av1`,
      `vnd.motorola.video`,
      `vnd.hns.video`,
      `mp2p`,
      `h266`,
      `rtploopback`,
      `h263-1998`,
      `vnd.radgamettools.smacker`,
      `smpte292m`,
      `x-matroska`,
      `vnd.directv.mpeg`,
      `x-msvideo`,
      `flexfec`,
      `webm`,
      `raw`,
      `vnd.iptvforum.1dparityfec-1010`,
      `h264-svc`,
      `x-f4v`,
      `vnd.radgamettools.bink`,
      `vnd.iptvforum.1dparityfec-2005`,
      `h263`,
      `vnd.sealed.mpeg1`,
      `vnd.objectvideo`,
      `mj2`,
      `x-ms-asf`,
      `x-smv`,
      `3gpp`,
      `vc2`,
      `vnd.sealed.mpeg4`,
      `vnd.vivo`,
      `vnd.dece.mobile`,
      `pointer`,
      `vnd.nokia.videovoip`,
      `vc1`,
      `jpm`,
      `mp4v-es`,
      `x-ms-wmx`,
      `h264-rcdo`,
      `mpeg4-generic`,
      `mp2t`,
      `dv`,
      `vnd.motorola.videop`,
      `vnd.dvb.file`,
      `jpeg2000`,
      `vp8`,
      `jpeg`,
      `x-m4v`,
      `mp1s`,
      `x-ms-wvx`,
      `x-flv`,
      `mp4`,
    )
    lazy val any: MediaType       = new MediaType("video", "*")
  }

  object message {

    lazy val `rfc822`: MediaType =
      new MediaType("message", "rfc822", compressible = true, binary = false, List("eml", "mime"))

    lazy val `http`: MediaType =
      new MediaType("message", "http", compressible = false, binary = true)

    lazy val `disposition-notification`: MediaType =
      new MediaType(
        "message",
        "disposition-notification",
        compressible = false,
        binary = true,
        List("disposition-notification"),
      )

    lazy val `tracking-status`: MediaType =
      new MediaType("message", "tracking-status", compressible = false, binary = true)

    lazy val `s-http`: MediaType =
      new MediaType("message", "s-http", compressible = false, binary = true)

    lazy val `global-headers`: MediaType =
      new MediaType("message", "global-headers", compressible = false, binary = true, List("u8hdr"))

    lazy val `imdn+xml`: MediaType =
      new MediaType("message", "imdn+xml", compressible = true, binary = false)

    lazy val `vnd.si.simp`: MediaType =
      new MediaType("message", "vnd.si.simp", compressible = false, binary = true)

    lazy val `sip`: MediaType =
      new MediaType("message", "sip", compressible = false, binary = true)

    lazy val `feedback-report`: MediaType =
      new MediaType("message", "feedback-report", compressible = false, binary = true)

    lazy val `sipfrag`: MediaType =
      new MediaType("message", "sipfrag", compressible = false, binary = true)

    lazy val `global-disposition-notification`: MediaType =
      new MediaType("message", "global-disposition-notification", compressible = false, binary = true, List("u8mdn"))

    lazy val `delivery-status`: MediaType =
      new MediaType("message", "delivery-status", compressible = false, binary = true)

    lazy val `external-body`: MediaType =
      new MediaType("message", "external-body", compressible = false, binary = true)

    lazy val `partial`: MediaType =
      new MediaType("message", "partial", compressible = false, binary = true)

    lazy val `bhttp`: MediaType =
      new MediaType("message", "bhttp", compressible = false, binary = true)

    lazy val `global-delivery-status`: MediaType =
      new MediaType("message", "global-delivery-status", compressible = false, binary = true, List("u8dsn"))

    lazy val `vnd.wfa.wsc`: MediaType =
      new MediaType("message", "vnd.wfa.wsc", compressible = false, binary = true, List("wsc"))

    lazy val `global`: MediaType =
      new MediaType("message", "global", compressible = false, binary = true, List("u8msg"))

    lazy val `cpim`: MediaType =
      new MediaType("message", "cpim", compressible = false, binary = true)

    lazy val `news`: MediaType =
      new MediaType("message", "news", compressible = false, binary = true)

    lazy val all: List[MediaType] = List(
      `rfc822`,
      `http`,
      `disposition-notification`,
      `tracking-status`,
      `s-http`,
      `global-headers`,
      `imdn+xml`,
      `vnd.si.simp`,
      `sip`,
      `feedback-report`,
      `sipfrag`,
      `global-disposition-notification`,
      `delivery-status`,
      `external-body`,
      `partial`,
      `bhttp`,
      `global-delivery-status`,
      `vnd.wfa.wsc`,
      `global`,
      `cpim`,
      `news`,
    )
    lazy val any: MediaType       = new MediaType("message", "*")
  }

  object audio {

    lazy val `vnd.4sb`: MediaType =
      new MediaType("audio", "vnd.4sb", compressible = false, binary = true)

    lazy val `evrc1`: MediaType =
      new MediaType("audio", "evrc1", compressible = false, binary = true)

    lazy val `dsr-es201108`: MediaType =
      new MediaType("audio", "dsr-es201108", compressible = false, binary = true)

    lazy val `vnd.everad.plj`: MediaType =
      new MediaType("audio", "vnd.everad.plj", compressible = false, binary = true)

    lazy val `vnd.dece.audio`: MediaType =
      new MediaType("audio", "vnd.dece.audio", compressible = false, binary = true, List("uva", "uvva"))

    lazy val `rtx`: MediaType =
      new MediaType("audio", "rtx", compressible = false, binary = true)

    lazy val `vnd.ms-playready.media.pya`: MediaType =
      new MediaType("audio", "vnd.ms-playready.media.pya", compressible = false, binary = true, List("pya"))

    lazy val `evrcnw1`: MediaType =
      new MediaType("audio", "evrcnw1", compressible = false, binary = true)

    lazy val `flexfec`: MediaType =
      new MediaType("audio", "flexfec", compressible = false, binary = true)

    lazy val `red`: MediaType =
      new MediaType("audio", "red", compressible = false, binary = true)

    lazy val `vnd.dolby.heaac.1`: MediaType =
      new MediaType("audio", "vnd.dolby.heaac.1", compressible = false, binary = true)

    lazy val `1d-interleaved-parityfec`: MediaType =
      new MediaType("audio", "1d-interleaved-parityfec", compressible = false, binary = true)

    lazy val `vnd.nuera.ecelp9600`: MediaType =
      new MediaType("audio", "vnd.nuera.ecelp9600", compressible = false, binary = true, List("ecelp9600"))

    lazy val `silk`: MediaType =
      new MediaType("audio", "silk", compressible = false, binary = true, List("sil"))

    lazy val `pcmu-wb`: MediaType =
      new MediaType("audio", "pcmu-wb", compressible = false, binary = true)

    lazy val `vnd.dts`: MediaType =
      new MediaType("audio", "vnd.dts", compressible = false, binary = true, List("dts"))

    lazy val `vnd.dolby.pl2x`: MediaType =
      new MediaType("audio", "vnd.dolby.pl2x", compressible = false, binary = true)

    lazy val `encaprtp`: MediaType =
      new MediaType("audio", "encaprtp", compressible = false, binary = true)

    lazy val `vnd.dolby.mps`: MediaType =
      new MediaType("audio", "vnd.dolby.mps", compressible = false, binary = true)

    lazy val `evrcb1`: MediaType =
      new MediaType("audio", "evrcb1", compressible = false, binary = true)

    lazy val `parityfec`: MediaType =
      new MediaType("audio", "parityfec", compressible = false, binary = true)

    lazy val `x-matroska`: MediaType =
      new MediaType("audio", "x-matroska", compressible = false, binary = true, List("mka"))

    lazy val `x-realaudio`: MediaType =
      new MediaType("audio", "x-realaudio", compressible = false, binary = true, List("ra"))

    lazy val `vnd.nuera.ecelp4800`: MediaType =
      new MediaType("audio", "vnd.nuera.ecelp4800", compressible = false, binary = true, List("ecelp4800"))

    lazy val `vnd.digital-winds`: MediaType =
      new MediaType("audio", "vnd.digital-winds", compressible = false, binary = true, List("eol"))

    lazy val `smv`: MediaType =
      new MediaType("audio", "smv", compressible = false, binary = true)

    lazy val `g7221`: MediaType =
      new MediaType("audio", "g7221", compressible = false, binary = true)

    lazy val `vmr-wb`: MediaType =
      new MediaType("audio", "vmr-wb", compressible = false, binary = true)

    lazy val `vnd.celp`: MediaType =
      new MediaType("audio", "vnd.celp", compressible = false, binary = true)

    lazy val `g726-40`: MediaType =
      new MediaType("audio", "g726-40", compressible = false, binary = true)

    lazy val `g722`: MediaType =
      new MediaType("audio", "g722", compressible = false, binary = true)

    lazy val `vnd.dra`: MediaType =
      new MediaType("audio", "vnd.dra", compressible = false, binary = true, List("dra"))

    lazy val `pcmu`: MediaType =
      new MediaType("audio", "pcmu", compressible = false, binary = true)

    lazy val `vnd.dolby.pulse.1`: MediaType =
      new MediaType("audio", "vnd.dolby.pulse.1", compressible = false, binary = true)

    lazy val `lpc`: MediaType =
      new MediaType("audio", "lpc", compressible = false, binary = true)

    lazy val `melp600`: MediaType =
      new MediaType("audio", "melp600", compressible = false, binary = true)

    lazy val `x-wav`: MediaType =
      new MediaType("audio", "x-wav", compressible = false, binary = true, List("wav"))

    lazy val `l20`: MediaType =
      new MediaType("audio", "l20", compressible = false, binary = true)

    lazy val `basic`: MediaType =
      new MediaType("audio", "basic", compressible = false, binary = true, List("au", "snd"))

    lazy val `asc`: MediaType =
      new MediaType("audio", "asc", compressible = false, binary = true)

    lazy val `speex`: MediaType =
      new MediaType("audio", "speex", compressible = false, binary = true)

    lazy val `raptorfec`: MediaType =
      new MediaType("audio", "raptorfec", compressible = false, binary = true)

    lazy val `vnd.cns.anp1`: MediaType =
      new MediaType("audio", "vnd.cns.anp1", compressible = false, binary = true)

    lazy val `evrcwb1`: MediaType =
      new MediaType("audio", "evrcwb1", compressible = false, binary = true)

    lazy val `mpeg`: MediaType =
      new MediaType(
        "audio",
        "mpeg",
        compressible = false,
        binary = true,
        List("mpga", "mp2", "mp2a", "mp3", "m2a", "m3a"),
      )

    lazy val `atrac-x`: MediaType =
      new MediaType("audio", "atrac-x", compressible = false, binary = true)

    lazy val `midi`: MediaType =
      new MediaType("audio", "midi", compressible = false, binary = true, List("mid", "midi", "kar", "rmi"))

    lazy val `smv-qcp`: MediaType =
      new MediaType("audio", "smv-qcp", compressible = false, binary = true)

    lazy val `t38`: MediaType =
      new MediaType("audio", "t38", compressible = false, binary = true)

    lazy val `scip`: MediaType =
      new MediaType("audio", "scip", compressible = false, binary = true)

    lazy val `rtp-enc-aescm128`: MediaType =
      new MediaType("audio", "rtp-enc-aescm128", compressible = false, binary = true)

    lazy val `vnd.nuera.ecelp7470`: MediaType =
      new MediaType("audio", "vnd.nuera.ecelp7470", compressible = false, binary = true, List("ecelp7470"))

    lazy val `evrc-qcp`: MediaType =
      new MediaType("audio", "evrc-qcp", compressible = false, binary = true)

    lazy val `prs.sid`: MediaType =
      new MediaType("audio", "prs.sid", compressible = false, binary = true)

    lazy val `dsr-es202050`: MediaType =
      new MediaType("audio", "dsr-es202050", compressible = false, binary = true)

    lazy val `vnd.lucent.voice`: MediaType =
      new MediaType("audio", "vnd.lucent.voice", compressible = false, binary = true, List("lvp"))

    lazy val `g726-32`: MediaType =
      new MediaType("audio", "g726-32", compressible = false, binary = true)

    lazy val `g7291`: MediaType =
      new MediaType("audio", "g7291", compressible = false, binary = true)

    lazy val `webm`: MediaType =
      new MediaType("audio", "webm", compressible = false, binary = true, List("weba"))

    lazy val `melp2400`: MediaType =
      new MediaType("audio", "melp2400", compressible = false, binary = true)

    lazy val `cn`: MediaType =
      new MediaType("audio", "cn", compressible = false, binary = true)

    lazy val `l8`: MediaType =
      new MediaType("audio", "l8", compressible = false, binary = true)

    lazy val `vnd.wave`: MediaType =
      new MediaType("audio", "vnd.wave", compressible = false, binary = true)

    lazy val `xm`: MediaType =
      new MediaType("audio", "xm", compressible = false, binary = true, List("xm"))

    lazy val `atrac3`: MediaType =
      new MediaType("audio", "atrac3", compressible = false, binary = true)

    lazy val `pcma`: MediaType =
      new MediaType("audio", "pcma", compressible = false, binary = true)

    lazy val `tetra_acelp_bb`: MediaType =
      new MediaType("audio", "tetra_acelp_bb", compressible = false, binary = true)

    lazy val `vnd.dts.hd`: MediaType =
      new MediaType("audio", "vnd.dts.hd", compressible = false, binary = true, List("dtshd"))

    lazy val `x-caf`: MediaType =
      new MediaType("audio", "x-caf", compressible = false, binary = true, List("caf"))

    lazy val `amr`: MediaType =
      new MediaType("audio", "amr", compressible = false, binary = true, List("amr"))

    lazy val `gsm`: MediaType =
      new MediaType("audio", "gsm", compressible = false, binary = true)

    lazy val `ulpfec`: MediaType =
      new MediaType("audio", "ulpfec", compressible = false, binary = true)

    lazy val `aac`: MediaType =
      new MediaType("audio", "aac", compressible = false, binary = true, List("adts", "aac"))

    lazy val `wave`: MediaType =
      new MediaType("audio", "wave", compressible = false, binary = true, List("wav"))

    lazy val `sp-midi`: MediaType =
      new MediaType("audio", "sp-midi", compressible = false, binary = true)

    lazy val `vnd.nortel.vbk`: MediaType =
      new MediaType("audio", "vnd.nortel.vbk", compressible = false, binary = true)

    lazy val `uemclip`: MediaType =
      new MediaType("audio", "uemclip", compressible = false, binary = true)

    lazy val `mpa`: MediaType =
      new MediaType("audio", "mpa", compressible = false, binary = true)

    lazy val `x-flac`: MediaType =
      new MediaType("audio", "x-flac", compressible = false, binary = true, List("flac"))

    lazy val `vnd.rn-realaudio`: MediaType =
      new MediaType("audio", "vnd.rn-realaudio", compressible = false, binary = true)

    lazy val `g723`: MediaType =
      new MediaType("audio", "g723", compressible = false, binary = true)

    lazy val `g726-24`: MediaType =
      new MediaType("audio", "g726-24", compressible = false, binary = true)

    lazy val `tsvcis`: MediaType =
      new MediaType("audio", "tsvcis", compressible = false, binary = true)

    lazy val `vnd.rip`: MediaType =
      new MediaType("audio", "vnd.rip", compressible = false, binary = true, List("rip"))

    lazy val `mpa-robust`: MediaType =
      new MediaType("audio", "mpa-robust", compressible = false, binary = true)

    lazy val `vnd.sealedmedia.softseal.mpeg`: MediaType =
      new MediaType("audio", "vnd.sealedmedia.softseal.mpeg", compressible = false, binary = true)

    lazy val `s3m`: MediaType =
      new MediaType("audio", "s3m", compressible = false, binary = true, List("s3m"))

    lazy val `adpcm`: MediaType =
      new MediaType("audio", "adpcm", compressible = false, binary = true, List("adp"))

    lazy val `g711-0`: MediaType =
      new MediaType("audio", "g711-0", compressible = false, binary = true)

    lazy val `fwdred`: MediaType =
      new MediaType("audio", "fwdred", compressible = false, binary = true)

    lazy val `x-m4a`: MediaType =
      new MediaType("audio", "x-m4a", compressible = false, binary = true, List("m4a"))

    lazy val `evs`: MediaType =
      new MediaType("audio", "evs", compressible = false, binary = true)

    lazy val `vnd.dolby.mlp`: MediaType =
      new MediaType("audio", "vnd.dolby.mlp", compressible = false, binary = true)

    lazy val `vnd.rhetorex.32kadpcm`: MediaType =
      new MediaType("audio", "vnd.rhetorex.32kadpcm", compressible = false, binary = true)

    lazy val `vorbis`: MediaType =
      new MediaType("audio", "vorbis", compressible = false, binary = true)

    lazy val `dat12`: MediaType =
      new MediaType("audio", "dat12", compressible = false, binary = true)

    lazy val `clearmode`: MediaType =
      new MediaType("audio", "clearmode", compressible = false, binary = true)

    lazy val `x-mpegurl`: MediaType =
      new MediaType("audio", "x-mpegurl", compressible = false, binary = true, List("m3u"))

    lazy val `vnd.audiokoz`: MediaType =
      new MediaType("audio", "vnd.audiokoz", compressible = false, binary = true)

    lazy val `musepack`: MediaType =
      new MediaType("audio", "musepack", compressible = false, binary = true)

    lazy val `usac`: MediaType =
      new MediaType("audio", "usac", compressible = false, binary = true)

    lazy val `vnd.nokia.mobile-xmf`: MediaType =
      new MediaType("audio", "vnd.nokia.mobile-xmf", compressible = false, binary = true)

    lazy val `dv`: MediaType =
      new MediaType("audio", "dv", compressible = false, binary = true)

    lazy val `g728`: MediaType =
      new MediaType("audio", "g728", compressible = false, binary = true)

    lazy val `evrcwb`: MediaType =
      new MediaType("audio", "evrcwb", compressible = false, binary = true)

    lazy val `vnd.presonus.multitrack`: MediaType =
      new MediaType("audio", "vnd.presonus.multitrack", compressible = false, binary = true)

    lazy val `g726-16`: MediaType =
      new MediaType("audio", "g726-16", compressible = false, binary = true)

    lazy val `mpeg4-generic`: MediaType =
      new MediaType("audio", "mpeg4-generic", compressible = false, binary = true)

    lazy val `ilbc`: MediaType =
      new MediaType("audio", "ilbc", compressible = false, binary = true)

    lazy val `mp4`: MediaType =
      new MediaType("audio", "mp4", compressible = false, binary = true, List("m4a", "mp4a"))

    lazy val `x-aiff`: MediaType =
      new MediaType("audio", "x-aiff", compressible = false, binary = true, List("aif", "aiff", "aifc"))

    lazy val `x-pn-realaudio`: MediaType =
      new MediaType("audio", "x-pn-realaudio", compressible = false, binary = true, List("ram", "ra"))

    lazy val `x-aac`: MediaType =
      new MediaType("audio", "x-aac", compressible = false, binary = true, List("aac"))

    lazy val `vnd.dolby.heaac.2`: MediaType =
      new MediaType("audio", "vnd.dolby.heaac.2", compressible = false, binary = true)

    lazy val `amr-wb+` : MediaType =
      new MediaType("audio", "amr-wb+", compressible = false, binary = true)

    lazy val `dsr-es202211`: MediaType =
      new MediaType("audio", "dsr-es202211", compressible = false, binary = true)

    lazy val `smv0`: MediaType =
      new MediaType("audio", "smv0", compressible = false, binary = true)

    lazy val `bv16`: MediaType =
      new MediaType("audio", "bv16", compressible = false, binary = true)

    lazy val `g729`: MediaType =
      new MediaType("audio", "g729", compressible = false, binary = true)

    lazy val `x-tta`: MediaType =
      new MediaType("audio", "x-tta", compressible = false, binary = true)

    lazy val `g729e`: MediaType =
      new MediaType("audio", "g729e", compressible = false, binary = true)

    lazy val `melp`: MediaType =
      new MediaType("audio", "melp", compressible = false, binary = true)

    lazy val `mobile-xmf`: MediaType =
      new MediaType("audio", "mobile-xmf", compressible = false, binary = true, List("mxmf"))

    lazy val `dls`: MediaType =
      new MediaType("audio", "dls", compressible = false, binary = true)

    lazy val `evrc0`: MediaType =
      new MediaType("audio", "evrc0", compressible = false, binary = true)

    lazy val `vorbis-config`: MediaType =
      new MediaType("audio", "vorbis-config", compressible = false, binary = true)

    lazy val `gsm-efr`: MediaType =
      new MediaType("audio", "gsm-efr", compressible = false, binary = true)

    lazy val `rtp-midi`: MediaType =
      new MediaType("audio", "rtp-midi", compressible = false, binary = true)

    lazy val `vnd.dlna.adts`: MediaType =
      new MediaType("audio", "vnd.dlna.adts", compressible = false, binary = true)

    lazy val `vnd.vmx.cvsd`: MediaType =
      new MediaType("audio", "vnd.vmx.cvsd", compressible = false, binary = true)

    lazy val `vnd.dvb.file`: MediaType =
      new MediaType("audio", "vnd.dvb.file", compressible = false, binary = true)

    lazy val `isac`: MediaType =
      new MediaType("audio", "isac", compressible = false, binary = true)

    lazy val `telephone-event`: MediaType =
      new MediaType("audio", "telephone-event", compressible = false, binary = true)

    lazy val `l16`: MediaType =
      new MediaType("audio", "l16", compressible = false, binary = true)

    lazy val `3gpp2`: MediaType =
      new MediaType("audio", "3gpp2", compressible = false, binary = true)

    lazy val `melp1200`: MediaType =
      new MediaType("audio", "melp1200", compressible = false, binary = true)

    lazy val `vnd.cns.inf1`: MediaType =
      new MediaType("audio", "vnd.cns.inf1", compressible = false, binary = true)

    lazy val `wav`: MediaType =
      new MediaType("audio", "wav", compressible = false, binary = true, List("wav"))

    lazy val `bv32`: MediaType =
      new MediaType("audio", "bv32", compressible = false, binary = true)

    lazy val `pcma-wb`: MediaType =
      new MediaType("audio", "pcma-wb", compressible = false, binary = true)

    lazy val `ac3`: MediaType =
      new MediaType("audio", "ac3", compressible = false, binary = true)

    lazy val `vnd.qcelp`: MediaType =
      new MediaType("audio", "vnd.qcelp", compressible = false, binary = true)

    lazy val `vnd.octel.sbc`: MediaType =
      new MediaType("audio", "vnd.octel.sbc", compressible = false, binary = true)

    lazy val `atrac-advanced-lossless`: MediaType =
      new MediaType("audio", "atrac-advanced-lossless", compressible = false, binary = true)

    lazy val `qcelp`: MediaType =
      new MediaType("audio", "qcelp", compressible = false, binary = true)

    lazy val `x-pn-realaudio-plugin`: MediaType =
      new MediaType("audio", "x-pn-realaudio-plugin", compressible = false, binary = true, List("rmp"))

    lazy val `g719`: MediaType =
      new MediaType("audio", "g719", compressible = false, binary = true)

    lazy val `tone`: MediaType =
      new MediaType("audio", "tone", compressible = false, binary = true)

    lazy val `dvi4`: MediaType =
      new MediaType("audio", "dvi4", compressible = false, binary = true)

    lazy val `vnd.hns.audio`: MediaType =
      new MediaType("audio", "vnd.hns.audio", compressible = false, binary = true)

    lazy val `x-ms-wax`: MediaType =
      new MediaType("audio", "x-ms-wax", compressible = false, binary = true, List("wax"))

    lazy val `g729d`: MediaType =
      new MediaType("audio", "g729d", compressible = false, binary = true)

    lazy val `t140c`: MediaType =
      new MediaType("audio", "t140c", compressible = false, binary = true)

    lazy val `32kadpcm`: MediaType =
      new MediaType("audio", "32kadpcm", compressible = false, binary = true)

    lazy val `mp3`: MediaType =
      new MediaType("audio", "mp3", compressible = false, binary = true, List("mp3"))

    lazy val `evrcnw`: MediaType =
      new MediaType("audio", "evrcnw", compressible = false, binary = true)

    lazy val `vnd.cisco.nse`: MediaType =
      new MediaType("audio", "vnd.cisco.nse", compressible = false, binary = true)

    lazy val `opus`: MediaType =
      new MediaType("audio", "opus", compressible = false, binary = true)

    lazy val `evrcb0`: MediaType =
      new MediaType("audio", "evrcb0", compressible = false, binary = true)

    lazy val `3gpp`: MediaType =
      new MediaType("audio", "3gpp", compressible = false, binary = true, List("3gpp"))

    lazy val `ogg`: MediaType =
      new MediaType("audio", "ogg", compressible = false, binary = true, List("oga", "ogg", "spx", "opus"))

    lazy val `vnd.dolby.pl2z`: MediaType =
      new MediaType("audio", "vnd.dolby.pl2z", compressible = false, binary = true)

    lazy val `vnd.cmles.radio-events`: MediaType =
      new MediaType("audio", "vnd.cmles.radio-events", compressible = false, binary = true)

    lazy val `evrc`: MediaType =
      new MediaType("audio", "evrc", compressible = false, binary = true)

    lazy val `vnd.dolby.pl2`: MediaType =
      new MediaType("audio", "vnd.dolby.pl2", compressible = false, binary = true)

    lazy val `mhas`: MediaType =
      new MediaType("audio", "mhas", compressible = false, binary = true)

    lazy val `l24`: MediaType =
      new MediaType("audio", "l24", compressible = false, binary = true)

    lazy val `vnd.dts.uhd`: MediaType =
      new MediaType("audio", "vnd.dts.uhd", compressible = false, binary = true)

    lazy val `x-ms-wma`: MediaType =
      new MediaType("audio", "x-ms-wma", compressible = false, binary = true, List("wma"))

    lazy val `tetra_acelp`: MediaType =
      new MediaType("audio", "tetra_acelp", compressible = false, binary = true)

    lazy val `gsm-hr-08`: MediaType =
      new MediaType("audio", "gsm-hr-08", compressible = false, binary = true)

    lazy val `eac3`: MediaType =
      new MediaType("audio", "eac3", compressible = false, binary = true)

    lazy val `evrcwb0`: MediaType =
      new MediaType("audio", "evrcwb0", compressible = false, binary = true)

    lazy val `vdvi`: MediaType =
      new MediaType("audio", "vdvi", compressible = false, binary = true)

    lazy val `dsr-es202212`: MediaType =
      new MediaType("audio", "dsr-es202212", compressible = false, binary = true)

    lazy val `rtploopback`: MediaType =
      new MediaType("audio", "rtploopback", compressible = false, binary = true)

    lazy val `mp4a-latm`: MediaType =
      new MediaType("audio", "mp4a-latm", compressible = false, binary = true)

    lazy val `sofa`: MediaType =
      new MediaType("audio", "sofa", compressible = false, binary = true)

    lazy val `amr-wb`: MediaType =
      new MediaType("audio", "amr-wb", compressible = false, binary = true)

    lazy val `evrcb`: MediaType =
      new MediaType("audio", "evrcb", compressible = false, binary = true)

    lazy val `ip-mr_v2.5`: MediaType =
      new MediaType("audio", "ip-mr_v2.5", compressible = false, binary = true)

    lazy val `evrcnw0`: MediaType =
      new MediaType("audio", "evrcnw0", compressible = false, binary = true)

    lazy val `vnd.3gpp.iufp`: MediaType =
      new MediaType("audio", "vnd.3gpp.iufp", compressible = false, binary = true)

    lazy val `aptx`: MediaType =
      new MediaType("audio", "aptx", compressible = false, binary = true)

    lazy val all: List[MediaType] = List(
      `vnd.4sb`,
      `evrc1`,
      `dsr-es201108`,
      `vnd.everad.plj`,
      `vnd.dece.audio`,
      `rtx`,
      `vnd.ms-playready.media.pya`,
      `evrcnw1`,
      `flexfec`,
      `red`,
      `vnd.dolby.heaac.1`,
      `1d-interleaved-parityfec`,
      `vnd.nuera.ecelp9600`,
      `silk`,
      `pcmu-wb`,
      `vnd.dts`,
      `vnd.dolby.pl2x`,
      `encaprtp`,
      `vnd.dolby.mps`,
      `evrcb1`,
      `parityfec`,
      `x-matroska`,
      `x-realaudio`,
      `vnd.nuera.ecelp4800`,
      `vnd.digital-winds`,
      `smv`,
      `g7221`,
      `vmr-wb`,
      `vnd.celp`,
      `g726-40`,
      `g722`,
      `vnd.dra`,
      `pcmu`,
      `vnd.dolby.pulse.1`,
      `lpc`,
      `melp600`,
      `x-wav`,
      `l20`,
      `basic`,
      `asc`,
      `speex`,
      `raptorfec`,
      `vnd.cns.anp1`,
      `evrcwb1`,
      `mpeg`,
      `atrac-x`,
      `midi`,
      `smv-qcp`,
      `t38`,
      `scip`,
      `rtp-enc-aescm128`,
      `vnd.nuera.ecelp7470`,
      `evrc-qcp`,
      `prs.sid`,
      `dsr-es202050`,
      `vnd.lucent.voice`,
      `g726-32`,
      `g7291`,
      `webm`,
      `melp2400`,
      `cn`,
      `l8`,
      `vnd.wave`,
      `xm`,
      `atrac3`,
      `pcma`,
      `tetra_acelp_bb`,
      `vnd.dts.hd`,
      `x-caf`,
      `amr`,
      `gsm`,
      `ulpfec`,
      `aac`,
      `wave`,
      `sp-midi`,
      `vnd.nortel.vbk`,
      `uemclip`,
      `mpa`,
      `x-flac`,
      `vnd.rn-realaudio`,
      `g723`,
      `g726-24`,
      `tsvcis`,
      `vnd.rip`,
      `mpa-robust`,
      `vnd.sealedmedia.softseal.mpeg`,
      `s3m`,
      `adpcm`,
      `g711-0`,
      `fwdred`,
      `x-m4a`,
      `evs`,
      `vnd.dolby.mlp`,
      `vnd.rhetorex.32kadpcm`,
      `vorbis`,
      `dat12`,
      `clearmode`,
      `x-mpegurl`,
      `vnd.audiokoz`,
      `musepack`,
      `usac`,
      `vnd.nokia.mobile-xmf`,
      `dv`,
      `g728`,
      `evrcwb`,
      `vnd.presonus.multitrack`,
      `g726-16`,
      `mpeg4-generic`,
      `ilbc`,
      `mp4`,
      `x-aiff`,
      `x-pn-realaudio`,
      `x-aac`,
      `vnd.dolby.heaac.2`,
      `amr-wb+`,
      `dsr-es202211`,
      `smv0`,
      `bv16`,
      `g729`,
      `x-tta`,
      `g729e`,
      `melp`,
      `mobile-xmf`,
      `dls`,
      `evrc0`,
      `vorbis-config`,
      `gsm-efr`,
      `rtp-midi`,
      `vnd.dlna.adts`,
      `vnd.vmx.cvsd`,
      `vnd.dvb.file`,
      `isac`,
      `telephone-event`,
      `l16`,
      `3gpp2`,
      `melp1200`,
      `vnd.cns.inf1`,
      `wav`,
      `bv32`,
      `pcma-wb`,
      `ac3`,
      `vnd.qcelp`,
      `vnd.octel.sbc`,
      `atrac-advanced-lossless`,
      `qcelp`,
      `x-pn-realaudio-plugin`,
      `g719`,
      `tone`,
      `dvi4`,
      `vnd.hns.audio`,
      `x-ms-wax`,
      `g729d`,
      `t140c`,
      `32kadpcm`,
      `mp3`,
      `evrcnw`,
      `vnd.cisco.nse`,
      `opus`,
      `evrcb0`,
      `3gpp`,
      `ogg`,
      `vnd.dolby.pl2z`,
      `vnd.cmles.radio-events`,
      `evrc`,
      `vnd.dolby.pl2`,
      `mhas`,
      `l24`,
      `vnd.dts.uhd`,
      `x-ms-wma`,
      `tetra_acelp`,
      `gsm-hr-08`,
      `eac3`,
      `evrcwb0`,
      `vdvi`,
      `dsr-es202212`,
      `rtploopback`,
      `mp4a-latm`,
      `sofa`,
      `amr-wb`,
      `evrcb`,
      `ip-mr_v2.5`,
      `evrcnw0`,
      `vnd.3gpp.iufp`,
      `aptx`,
    )
    lazy val any: MediaType       = new MediaType("audio", "*")
  }

  object multipart {

    lazy val `form-data`: MediaType =
      new MediaType("multipart", "form-data", compressible = false, binary = true)

    lazy val `byteranges`: MediaType =
      new MediaType("multipart", "byteranges", compressible = false, binary = true)

    lazy val `vnd.bint.med-plus`: MediaType =
      new MediaType("multipart", "vnd.bint.med-plus", compressible = false, binary = true)

    lazy val `mixed`: MediaType =
      new MediaType("multipart", "mixed", compressible = false, binary = true)

    lazy val `report`: MediaType =
      new MediaType("multipart", "report", compressible = false, binary = true)

    lazy val `multilingual`: MediaType =
      new MediaType("multipart", "multilingual", compressible = false, binary = true)

    lazy val `x-mixed-replace`: MediaType =
      new MediaType("multipart", "x-mixed-replace", compressible = false, binary = true)

    lazy val `encrypted`: MediaType =
      new MediaType("multipart", "encrypted", compressible = false, binary = true)

    lazy val `header-set`: MediaType =
      new MediaType("multipart", "header-set", compressible = false, binary = true)

    lazy val `voice-message`: MediaType =
      new MediaType("multipart", "voice-message", compressible = false, binary = true)

    lazy val `related`: MediaType =
      new MediaType("multipart", "related", compressible = false, binary = true)

    lazy val `signed`: MediaType =
      new MediaType("multipart", "signed", compressible = false, binary = true)

    lazy val `appledouble`: MediaType =
      new MediaType("multipart", "appledouble", compressible = false, binary = true)

    lazy val `alternative`: MediaType =
      new MediaType("multipart", "alternative", compressible = false, binary = true)

    lazy val `parallel`: MediaType =
      new MediaType("multipart", "parallel", compressible = false, binary = true)

    lazy val `digest`: MediaType =
      new MediaType("multipart", "digest", compressible = false, binary = true)

    lazy val all: List[MediaType] = List(
      `form-data`,
      `byteranges`,
      `vnd.bint.med-plus`,
      `mixed`,
      `report`,
      `multilingual`,
      `x-mixed-replace`,
      `encrypted`,
      `header-set`,
      `voice-message`,
      `related`,
      `signed`,
      `appledouble`,
      `alternative`,
      `parallel`,
      `digest`,
    )
    lazy val any: MediaType       = new MediaType("multipart", "*")
  }

  object chemical {

    lazy val `x-cif`: MediaType =
      new MediaType("chemical", "x-cif", compressible = false, binary = true, List("cif"))

    lazy val `x-cdx`: MediaType =
      new MediaType("chemical", "x-cdx", compressible = false, binary = true, List("cdx"))

    lazy val `x-pdb`: MediaType =
      new MediaType("chemical", "x-pdb", compressible = false, binary = true)

    lazy val `x-xyz`: MediaType =
      new MediaType("chemical", "x-xyz", compressible = false, binary = true, List("xyz"))

    lazy val `x-cml`: MediaType =
      new MediaType("chemical", "x-cml", compressible = false, binary = true, List("cml"))

    lazy val `x-cmdf`: MediaType =
      new MediaType("chemical", "x-cmdf", compressible = false, binary = true, List("cmdf"))

    lazy val `x-csml`: MediaType =
      new MediaType("chemical", "x-csml", compressible = false, binary = true, List("csml"))

    lazy val all: List[MediaType] = List(`x-cif`, `x-cdx`, `x-pdb`, `x-xyz`, `x-cml`, `x-cmdf`, `x-csml`)
    lazy val any: MediaType       = new MediaType("chemical", "*")
  }

  object x_conference {

    lazy val `x-cooltalk`: MediaType =
      new MediaType("x-conference", "x-cooltalk", compressible = false, binary = true, List("ice"))

    lazy val all: List[MediaType] = List(`x-cooltalk`)
    lazy val any: MediaType       = new MediaType("x-conference", "*")
  }

}
